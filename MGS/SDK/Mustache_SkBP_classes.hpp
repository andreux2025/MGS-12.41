#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mustache_SkBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Mustache_SkBP.Mustache_SkBP_C
// 0x02D0 (0x0580 - 0x02B0)
class UMustache_SkBP_C final : public UFortWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02B8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x02E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0310(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0338(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x03B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03E0(0x0078)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0458(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x04A0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x04D0(0x00B0)()

public:
	void ExecuteUbergraph_Mustache_SkBP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mustache_SkBP_C">();
	}
	static class UMustache_SkBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMustache_SkBP_C>();
	}
};
static_assert(alignof(UMustache_SkBP_C) == 0x000010, "Wrong alignment on UMustache_SkBP_C");
static_assert(sizeof(UMustache_SkBP_C) == 0x000580, "Wrong size on UMustache_SkBP_C");
static_assert(offsetof(UMustache_SkBP_C, UberGraphFrame) == 0x0002B0, "Member 'UMustache_SkBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_Root) == 0x0002B8, "Member 'UMustache_SkBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_TransitionResult_1) == 0x0002E8, "Member 'UMustache_SkBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_TransitionResult) == 0x000310, "Member 'UMustache_SkBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_SequencePlayer_1) == 0x000338, "Member 'UMustache_SkBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_StateResult_1) == 0x0003B0, "Member 'UMustache_SkBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_SequencePlayer) == 0x0003E0, "Member 'UMustache_SkBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_Slot) == 0x000458, "Member 'UMustache_SkBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_StateResult) == 0x0004A0, "Member 'UMustache_SkBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMustache_SkBP_C, AnimGraphNode_StateMachine) == 0x0004D0, "Member 'UMustache_SkBP_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

