#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapChallengeCategoryRotator

#include "Basic.hpp"

#include "AthenaMapChallengeCategoryRotator_classes.hpp"
#include "AthenaMapChallengeCategoryRotator_parameters.hpp"


namespace SDK
{

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.ExecuteUbergraph_AthenaMapChallengeCategoryRotator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryRotator_C::ExecuteUbergraph_AthenaMapChallengeCategoryRotator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "ExecuteUbergraph_AthenaMapChallengeCategoryRotator");

	Params::AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaMapChallengeCategoryRotator_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.HandleOnInputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryRotator_C::HandleOnInputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "HandleOnInputMethodChanged");

	Params::AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaMapChallengeCategoryRotator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.BP_OnOptionSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryRotator_C::BP_OnOptionSelected(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "BP_OnOptionSelected");

	Params::AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.BP_OnOptionsPopulated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaMapChallengeCategoryRotator_C::BP_OnOptionsPopulated(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "BP_OnOptionsPopulated");

	Params::AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.PlayIntroAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsReverse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaMapChallengeCategoryRotator_C::PlayIntroAnim(bool bIsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapChallengeCategoryRotator_C", "PlayIntroAnim");

	Params::AthenaMapChallengeCategoryRotator_C_PlayIntroAnim Parms{};

	Parms.bIsReverse = bIsReverse;

	UObject::ProcessEvent(Func, &Parms);
}

}

