#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Generic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "PlayerPawn_Generic_Parent_classes.hpp"
#include "PlayerWindParticleEmitters_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Generic.PlayerPawn_Generic_C
// 0x05F0 (0x2EA0 - 0x28B0)
class APlayerPawn_Generic_C final : public APlayerPawn_Generic_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Generic_C;               // 0x28A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               SplashEffectsForEnteringOrExitingWater;            // 0x28B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               GamplayWindInteractionEffects;                     // 0x28B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Run_Land;                            // 0x28C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Walk_Land;                           // 0x28C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Walk_Water;                          // 0x28D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Run_Water;                           // 0x28D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_WaterInteraction_FX;                        // 0x28E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               HitDamageParticles;                                // 0x28E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       SpeechBubbleComponent;                             // 0x28F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    PlayerLight;                                       // 0x28F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ShatterShield_Push_3B96BD02488A8F69F3D086A2B7978EC8; // 0x2900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShatterShield_Opacity_3B96BD02488A8F69F3D086A2B7978EC8; // 0x2904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShatterShield_Highlight_Cracks_3B96BD02488A8F69F3D086A2B7978EC8; // 0x2908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ShatterShield__Direction_3B96BD02488A8F69F3D086A2B7978EC8; // 0x290C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_290D[0x3];                                     // 0x290D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ShatterShield;                                     // 0x2910(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerHealthDamageDirection;          // 0x2918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerHealthDamage;                   // 0x2920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerShieldDamageDirection;          // 0x2928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerShieldDamage;                   // 0x2930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitByHuskRangedSound;                              // 0x2938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitByHuskMeleeSound;                               // 0x2940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           SoulSuckVictimMontage;                             // 0x2948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerSpeed;                                       // 0x2950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Run_Particle_Activate_Speed;                       // 0x2954(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Walk_Dust_Activate_Speed;                          // 0x2958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Walk_Particle_Reset_Speed;                         // 0x295C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousVelocityVector;                            // 0x2960(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnRunKickupFX_;                              // 0x296C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanSpawnWalkKickupFX_;                             // 0x296D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanSpawnDustLandFX_;                               // 0x296E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296F[0x1];                                     // 0x296F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RunWalkParticleRotation;                           // 0x2970(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNinjaInShadowStance_;                            // 0x297C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297D[0x3];                                     // 0x297D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTagsForHitByHuskMeleeSound;                // 0x2980(0x0020)(Edit, BlueprintVisible)
	class UMaterialInterface*                     Shield_Material;                                   // 0x29A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       BodyShieldMIDArray;                                // 0x29A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       HeadShieldMIDArray;                                // 0x29B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Shield_Active;                                     // 0x29C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C9[0x3];                                     // 0x29C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tick_Delta_Seconds;                                // 0x29CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Damage_Wave_Animation;                      // 0x29D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Overall_Shield_Damage_Wave_Animation_Length;       // 0x29D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x29D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dying;                                             // 0x29DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanRippleAgain;                                    // 0x29DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DE[0x2];                                     // 0x29DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Shield_Impact;                               // 0x29E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_Destroyed;                            // 0x29E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_FullyCharged;                         // 0x29F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_StartRecharge;                        // 0x29F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Shatter_Opacity;                            // 0x2A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regen_Opacity;                                     // 0x2A04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Opacity;                                    // 0x2A08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default_Shield_opacity;                            // 0x2A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_PushMinValue;                               // 0x2A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShieldVisible_Hit;                                 // 0x2A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_Recover;                             // 0x2A15(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_Shatter;                             // 0x2A16(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_FullHealth;                          // 0x2A17(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Fully_Regened_Shield_health_Opacity;               // 0x2A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1C[0x4];                                     // 0x2A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_GameplayCueDamageShielded;                      // 0x2A20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LatestDamageIsShieldDamage;                        // 0x2A40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A41[0x3];                                     // 0x2A41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage_Taken;                                      // 0x2A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Last_Shield_Damage_Time;                           // 0x2A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4C[0x4];                                     // 0x2A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CharmShieldMIDArray;                               // 0x2A50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          BodyValid;                                         // 0x2A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BackpackValid;                                     // 0x2A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HatValid;                                          // 0x2A62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FaceValid;                                         // 0x2A63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CharmValid;                                        // 0x2A64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadValid;                                         // 0x2A65(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          On_Player_Built_Floor;                             // 0x2A66(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2A67[0x1];                                     // 0x2A67(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Event_NeedRoadsActive;                             // 0x2A68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NeedRoadsDeactive;                           // 0x2A70(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_WhereWereGoingWeNeedRoads;                      // 0x2A78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        Effect_Player_LandedDust;                          // 0x2A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_BodySkeletalMesh;                           // 0x2AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_HeadSkeletalMesh;                           // 0x2AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_CharmSkeletalMesh;                          // 0x2AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Sound_Player_Hit;                                  // 0x2AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   DamageForceFeedback;                               // 0x2AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Effect_Player_Landed_WindVector_P;                 // 0x2AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpeechBubbleWidgetClass;                           // 0x2AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LastSpeechText;                                    // 0x2AD8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 DamageCameraShake;                                 // 0x2AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAnimTrailsNotifies;                             // 0x2AF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AF9[0x3];                                     // 0x2AF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             WaterTraceHitLocation;                             // 0x2AFC(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                StableVelocityVector;                              // 0x2B88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B94[0x4];                                     // 0x2B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        PlayerRunTemplate_Ground;                          // 0x2B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Ground;                         // 0x2BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerRunTemplate_Water;                           // 0x2BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Water;                          // 0x2BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickWaterLevel;                                    // 0x2BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB9[0x7];                                     // 0x2BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 WetnessDepthTexture;                               // 0x2BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterLevelMID;                                     // 0x2BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterDecayMID;                                     // 0x2BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Was_RTT_Enabled_Var_Set;                           // 0x2BD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Water_Scene_Capture_Enabled;                       // 0x2BD9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDA[0x2];                                     // 0x2BDA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartingMinCapsuleShadowVis;                       // 0x2BDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CachedEffect;                                      // 0x2BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WaterInteractionWakeMIDS;                          // 0x2BE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UStaticMeshComponent*>           WaterInteractionWakeMeshes;                        // 0x2BF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference)
	float                                         Character_Calve_Length;                            // 0x2C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCyclingWaterMeshes;                        // 0x2C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WaterTraceImpactNormalAndZHeightLocation;          // 0x2C10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerVelocity;                                    // 0x2C20(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRunWalkWaterGroundFX;                        // 0x2C2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2D[0x3];                                     // 0x2C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       Previous_MID;                                      // 0x2C30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Weapon_MID;                               // 0x2C40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USkeletalMeshComponent*                 DuplicateCharacterMesh;                            // 0x2C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayAlignment;                                    // 0x2C58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5C[0x4];                                     // 0x2C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CharacterPartMaterials;                            // 0x2C60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Head_MID;                                 // 0x2C70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Body_MID;                                 // 0x2C80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Hat_MID;                                  // 0x2C90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Backpack_MID;                             // 0x2CA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Charm_MID;                                // 0x2CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Previous_Face_MID;                                 // 0x2CC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USkeletalMeshComponent*                 DuplicateHeadMesh;                                 // 0x2CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DuplicateBodyMesh;                                 // 0x2CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DuplicateHatMesh;                                  // 0x2CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DuplicateBackpackMesh;                             // 0x2CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DuplicateCharmMesh;                                // 0x2CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DuplicateFaceMesh;                                 // 0x2CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SwingRight;                                        // 0x2D00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingRightEnd;                                     // 0x2D10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft;                                         // 0x2D20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeftEnd;                                      // 0x2D30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnimNotify_Begin;                                  // 0x2D40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnimNotify_End;                                    // 0x2D50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFXSystemComponent*                     OverrideAnimTrail;                                 // 0x2D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  GameplayTagsForHitByHuskRangedSound;               // 0x2D68(0x0020)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             SwingRight2;                                       // 0x2D88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft2;                                        // 0x2D98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFXSystemComponent*                     AnimTrailFX;                                       // 0x2DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockedByPawns;                                    // 0x2DB0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2DB1[0x7];                                     // 0x2DB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Attribute_CurrentShield_Const;                     // 0x2DB8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute_Shield_Const;                            // 0x2DF0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute_CurrentHealth_Const;                     // 0x2E28(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute_Max_Health_Const;                        // 0x2E60(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SwingRight__DelegateSignature();
	void SwingRightEnd__DelegateSignature();
	void SwingLeft__DelegateSignature();
	void SwingLeftEnd__DelegateSignature();
	void AnimNotify_Begin__DelegateSignature(bool bActive);
	void AnimNotify_End__DelegateSignature();
	void SwingRight2__DelegateSignature();
	void SwingLeft2__DelegateSignature();
	void ExecuteUbergraph_PlayerPawn_Generic(int32 EntryPoint);
	void AnimTrailsNotify(bool bActive);
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class UNiagaraSystem* NiagaraSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width, class UFXSystemComponent* OverrideParticleComp, class FName OverideFirstSocketName, class FName OverideSecondSocketName);
	void AnimTrailsDisable();
	void OnLand_CE();
	void SetBlockedByPawns(bool bLocked);
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void MeleeSwingRight_End();
	void MeleeSwingLeft_End();
	void MeleeSwingRight(bool First_Right);
	void MeleeSwingLeft(bool First_Left);
	void OnExitedVehicle();
	void OnEnteredVehicle();
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Destroyed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_FullyCharged(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReinitializeWeaponMaterials();
	void Player_Creates_a_Splash(const struct FTransform& NewTransform);
	void Entered_Water_Volume();
	void PlayGameplayWindEffect(EPlayerWindParticleEmitters Player_Wind_Particle_Emitter_To_Fire);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void MultiEndSwap(class AFortWeapon* CurrentWeapon_0);
	void UnBindWeaponSwap();
	void MultiSwapWeapon(class AFortWeapon* New, class AFortWeapon* Prev);
	void BindWeaponSwap(float InDuration);
	void ClientBindWeaponSwap(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnClearSentence();
	void OnDisplaySentence(const class FText& SpeechText);
	void ReceivePossessed(class AController* NewController);
	void OnBaseChanged(class AActor* NewBase);
	void InternalSetFirstPersonCamera(bool NewUseFirstPersonCamera);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void FootStepRight();
	void FootStepLeft();
	void ReceiveTick(float DeltaSeconds);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnLanded(const struct FHitResult& Hit);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ShatterShield__UpdateFunc();
	void ShatterShield__FinishedFunc();
	void UserConstructionScript();
	void Create_and_Duplicate_Effect_Skeletal_Meshes_Parent(EFortCustomPartType BodyType, class USkeletalMeshComponent*& DuplicatedSkeletalMeshComponent, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority);
	void FindShieldOpacity();
	void SetShieldMids(float Highlight_Cracks, bool Set_Highlight_Cracks, float Push, bool Set_Push);
	void SetShieldMids_InternalLoop(float Highlight_Cracks, bool Set_Highlight_Cracks, float Push, bool Set_Push, TArray<class UMaterialInstanceDynamic*>& NewParam1);
	void SlaveAMeshToTheBody(class USkeletalMeshComponent* Mesh_0, class USkeletalMeshComponent* Master);
	void ToggleShieldVisibility();
	void Create_and_Duplicate_Effect_Poseable_Skeletal_Mesh(EFortCustomPartType BodyType, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority, class UPoseableMeshComponent*& PoseableMesh);
	void Setup_FX_Mesh_Duplicates(class UMaterialInterface*& Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Charm_MID_Array, class USkeletalMeshComponent*& Charm_Mesh, TArray<class UMaterialInstanceDynamic*>& Head_MID_Array, class USkeletalMeshComponent*& Head_Mesh, TArray<class UMaterialInstanceDynamic*>& Body_MID_Array, class USkeletalMeshComponent*& Body_Mesh, int32 Translucent_Sort_Order, bool Transfer_Material_Parameters);
	void OnRep_On_Player_Built_Floor();
	void DisableWaterLevelTick();
	void Are_the_wind_and_water_RTT_passes_enabled(bool* NewParam);
	void TriggerGameplayWindEmitter(EPlayerWindParticleEmitters Player_Wind_Particle_Emitter_To_Fire);
	void Override_Materials_and_Copy_Parameters_on_Weapons_Mesh(class UMaterialInterface* Material_to_Apply);
	void Restore_Previous_Materials_on_Character_Mesh();
	void Restore_Previous_Materials_on_Weapons_Mesh(class AFortWeapon* Weapon_to_Restore);
	void Set_Scalar_Parameter_on_Character_MIDs(class FName Parameter_Name, float Parameter_Value);
	void Set_Scalar_Parameter_on_Duplicate_Mesh_MIDs(class FName Parameter_Name, float Parameter_Value);
	void Set_Body_Type_Sounds();
	void EnableWaterAudio(bool IsEnteringWater);
	void PlayHitSound(class AFortPawn* Instigator_0, class AActor* Damage_Causer);
	void OnRep_BlockedByPawns();
	float GetShieldPercent2();
	float GetHealthPercent2();
	void Melee_Effect_Color(struct FVector* Melee_Color_Set);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Generic_C">();
	}
	static class APlayerPawn_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Generic_C>();
	}
};
static_assert(alignof(APlayerPawn_Generic_C) == 0x000010, "Wrong alignment on APlayerPawn_Generic_C");
static_assert(sizeof(APlayerPawn_Generic_C) == 0x002EA0, "Wrong size on APlayerPawn_Generic_C");
static_assert(offsetof(APlayerPawn_Generic_C, UberGraphFrame_PlayerPawn_Generic_C) == 0x0028A8, "Member 'APlayerPawn_Generic_C::UberGraphFrame_PlayerPawn_Generic_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SplashEffectsForEnteringOrExitingWater) == 0x0028B0, "Member 'APlayerPawn_Generic_C::SplashEffectsForEnteringOrExitingWater' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, GamplayWindInteractionEffects) == 0x0028B8, "Member 'APlayerPawn_Generic_C::GamplayWindInteractionEffects' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Run_Land) == 0x0028C0, "Member 'APlayerPawn_Generic_C::Effect_Player_Run_Land' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Walk_Land) == 0x0028C8, "Member 'APlayerPawn_Generic_C::Effect_Player_Walk_Land' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Walk_Water) == 0x0028D0, "Member 'APlayerPawn_Generic_C::Effect_Player_Walk_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Run_Water) == 0x0028D8, "Member 'APlayerPawn_Generic_C::Effect_Player_Run_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_WaterInteraction_FX) == 0x0028E0, "Member 'APlayerPawn_Generic_C::Effect_WaterInteraction_FX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitDamageParticles) == 0x0028E8, "Member 'APlayerPawn_Generic_C::HitDamageParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SpeechBubbleComponent) == 0x0028F0, "Member 'APlayerPawn_Generic_C::SpeechBubbleComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerLight) == 0x0028F8, "Member 'APlayerPawn_Generic_C::PlayerLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShatterShield_Push_3B96BD02488A8F69F3D086A2B7978EC8) == 0x002900, "Member 'APlayerPawn_Generic_C::ShatterShield_Push_3B96BD02488A8F69F3D086A2B7978EC8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShatterShield_Opacity_3B96BD02488A8F69F3D086A2B7978EC8) == 0x002904, "Member 'APlayerPawn_Generic_C::ShatterShield_Opacity_3B96BD02488A8F69F3D086A2B7978EC8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShatterShield_Highlight_Cracks_3B96BD02488A8F69F3D086A2B7978EC8) == 0x002908, "Member 'APlayerPawn_Generic_C::ShatterShield_Highlight_Cracks_3B96BD02488A8F69F3D086A2B7978EC8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShatterShield__Direction_3B96BD02488A8F69F3D086A2B7978EC8) == 0x00290C, "Member 'APlayerPawn_Generic_C::ShatterShield__Direction_3B96BD02488A8F69F3D086A2B7978EC8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShatterShield) == 0x002910, "Member 'APlayerPawn_Generic_C::ShatterShield' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerHealthDamageDirection) == 0x002918, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerHealthDamageDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerHealthDamage) == 0x002920, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerHealthDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerShieldDamageDirection) == 0x002928, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerShieldDamageDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerShieldDamage) == 0x002930, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerShieldDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitByHuskRangedSound) == 0x002938, "Member 'APlayerPawn_Generic_C::HitByHuskRangedSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitByHuskMeleeSound) == 0x002940, "Member 'APlayerPawn_Generic_C::HitByHuskMeleeSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SoulSuckVictimMontage) == 0x002948, "Member 'APlayerPawn_Generic_C::SoulSuckVictimMontage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerSpeed) == 0x002950, "Member 'APlayerPawn_Generic_C::PlayerSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Run_Particle_Activate_Speed) == 0x002954, "Member 'APlayerPawn_Generic_C::Run_Particle_Activate_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Walk_Dust_Activate_Speed) == 0x002958, "Member 'APlayerPawn_Generic_C::Walk_Dust_Activate_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Walk_Particle_Reset_Speed) == 0x00295C, "Member 'APlayerPawn_Generic_C::Walk_Particle_Reset_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PreviousVelocityVector) == 0x002960, "Member 'APlayerPawn_Generic_C::PreviousVelocityVector' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnRunKickupFX_) == 0x00296C, "Member 'APlayerPawn_Generic_C::CanSpawnRunKickupFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnWalkKickupFX_) == 0x00296D, "Member 'APlayerPawn_Generic_C::CanSpawnWalkKickupFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnDustLandFX_) == 0x00296E, "Member 'APlayerPawn_Generic_C::CanSpawnDustLandFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, RunWalkParticleRotation) == 0x002970, "Member 'APlayerPawn_Generic_C::RunWalkParticleRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, IsNinjaInShadowStance_) == 0x00297C, "Member 'APlayerPawn_Generic_C::IsNinjaInShadowStance_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, GameplayTagsForHitByHuskMeleeSound) == 0x002980, "Member 'APlayerPawn_Generic_C::GameplayTagsForHitByHuskMeleeSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Material) == 0x0029A0, "Member 'APlayerPawn_Generic_C::Shield_Material' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BodyShieldMIDArray) == 0x0029A8, "Member 'APlayerPawn_Generic_C::BodyShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HeadShieldMIDArray) == 0x0029B8, "Member 'APlayerPawn_Generic_C::HeadShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Active) == 0x0029C8, "Member 'APlayerPawn_Generic_C::Shield_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Tick_Delta_Seconds) == 0x0029CC, "Member 'APlayerPawn_Generic_C::Tick_Delta_Seconds' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Damage_Wave_Animation) == 0x0029D0, "Member 'APlayerPawn_Generic_C::Shield_Damage_Wave_Animation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Overall_Shield_Damage_Wave_Animation_Length) == 0x0029D4, "Member 'APlayerPawn_Generic_C::Overall_Shield_Damage_Wave_Animation_Length' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Size) == 0x0029D8, "Member 'APlayerPawn_Generic_C::Size' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Dying) == 0x0029DC, "Member 'APlayerPawn_Generic_C::Dying' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanRippleAgain) == 0x0029DD, "Member 'APlayerPawn_Generic_C::CanRippleAgain' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_Impact) == 0x0029E0, "Member 'APlayerPawn_Generic_C::Sound_Shield_Impact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_Destroyed) == 0x0029E8, "Member 'APlayerPawn_Generic_C::Sound_Shield_Destroyed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_FullyCharged) == 0x0029F0, "Member 'APlayerPawn_Generic_C::Sound_Shield_FullyCharged' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_StartRecharge) == 0x0029F8, "Member 'APlayerPawn_Generic_C::Sound_Shield_StartRecharge' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Shatter_Opacity) == 0x002A00, "Member 'APlayerPawn_Generic_C::Shield_Shatter_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Regen_Opacity) == 0x002A04, "Member 'APlayerPawn_Generic_C::Regen_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Damage_Opacity) == 0x002A08, "Member 'APlayerPawn_Generic_C::Damage_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Default_Shield_opacity) == 0x002A0C, "Member 'APlayerPawn_Generic_C::Default_Shield_opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_PushMinValue) == 0x002A10, "Member 'APlayerPawn_Generic_C::Shield_PushMinValue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Hit) == 0x002A14, "Member 'APlayerPawn_Generic_C::ShieldVisible_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Recover) == 0x002A15, "Member 'APlayerPawn_Generic_C::ShieldVisible_Recover' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Shatter) == 0x002A16, "Member 'APlayerPawn_Generic_C::ShieldVisible_Shatter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_FullHealth) == 0x002A17, "Member 'APlayerPawn_Generic_C::ShieldVisible_FullHealth' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Fully_Regened_Shield_health_Opacity) == 0x002A18, "Member 'APlayerPawn_Generic_C::Fully_Regened_Shield_health_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TC_GameplayCueDamageShielded) == 0x002A20, "Member 'APlayerPawn_Generic_C::TC_GameplayCueDamageShielded' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, LatestDamageIsShieldDamage) == 0x002A40, "Member 'APlayerPawn_Generic_C::LatestDamageIsShieldDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Damage_Taken) == 0x002A44, "Member 'APlayerPawn_Generic_C::Damage_Taken' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Last_Shield_Damage_Time) == 0x002A48, "Member 'APlayerPawn_Generic_C::Last_Shield_Damage_Time' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CharmShieldMIDArray) == 0x002A50, "Member 'APlayerPawn_Generic_C::CharmShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BodyValid) == 0x002A60, "Member 'APlayerPawn_Generic_C::BodyValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BackpackValid) == 0x002A61, "Member 'APlayerPawn_Generic_C::BackpackValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HatValid) == 0x002A62, "Member 'APlayerPawn_Generic_C::HatValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, FaceValid) == 0x002A63, "Member 'APlayerPawn_Generic_C::FaceValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CharmValid) == 0x002A64, "Member 'APlayerPawn_Generic_C::CharmValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HeadValid) == 0x002A65, "Member 'APlayerPawn_Generic_C::HeadValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, On_Player_Built_Floor) == 0x002A66, "Member 'APlayerPawn_Generic_C::On_Player_Built_Floor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Event_NeedRoadsActive) == 0x002A68, "Member 'APlayerPawn_Generic_C::Event_NeedRoadsActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Event_NeedRoadsDeactive) == 0x002A70, "Member 'APlayerPawn_Generic_C::Event_NeedRoadsDeactive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TC_WhereWereGoingWeNeedRoads) == 0x002A78, "Member 'APlayerPawn_Generic_C::TC_WhereWereGoingWeNeedRoads' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_LandedDust) == 0x002A98, "Member 'APlayerPawn_Generic_C::Effect_Player_LandedDust' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_BodySkeletalMesh) == 0x002AA0, "Member 'APlayerPawn_Generic_C::Shield_BodySkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_HeadSkeletalMesh) == 0x002AA8, "Member 'APlayerPawn_Generic_C::Shield_HeadSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_CharmSkeletalMesh) == 0x002AB0, "Member 'APlayerPawn_Generic_C::Shield_CharmSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Player_Hit) == 0x002AB8, "Member 'APlayerPawn_Generic_C::Sound_Player_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DamageForceFeedback) == 0x002AC0, "Member 'APlayerPawn_Generic_C::DamageForceFeedback' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Landed_WindVector_P) == 0x002AC8, "Member 'APlayerPawn_Generic_C::Effect_Player_Landed_WindVector_P' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SpeechBubbleWidgetClass) == 0x002AD0, "Member 'APlayerPawn_Generic_C::SpeechBubbleWidgetClass' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, LastSpeechText) == 0x002AD8, "Member 'APlayerPawn_Generic_C::LastSpeechText' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DamageCameraShake) == 0x002AF0, "Member 'APlayerPawn_Generic_C::DamageCameraShake' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, UseAnimTrailsNotifies) == 0x002AF8, "Member 'APlayerPawn_Generic_C::UseAnimTrailsNotifies' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterTraceHitLocation) == 0x002AFC, "Member 'APlayerPawn_Generic_C::WaterTraceHitLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, StableVelocityVector) == 0x002B88, "Member 'APlayerPawn_Generic_C::StableVelocityVector' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerRunTemplate_Ground) == 0x002B98, "Member 'APlayerPawn_Generic_C::PlayerRunTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerWalkTemplate_Ground) == 0x002BA0, "Member 'APlayerPawn_Generic_C::PlayerWalkTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerRunTemplate_Water) == 0x002BA8, "Member 'APlayerPawn_Generic_C::PlayerRunTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerWalkTemplate_Water) == 0x002BB0, "Member 'APlayerPawn_Generic_C::PlayerWalkTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TickWaterLevel) == 0x002BB8, "Member 'APlayerPawn_Generic_C::TickWaterLevel' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WetnessDepthTexture) == 0x002BC0, "Member 'APlayerPawn_Generic_C::WetnessDepthTexture' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterLevelMID) == 0x002BC8, "Member 'APlayerPawn_Generic_C::WaterLevelMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterDecayMID) == 0x002BD0, "Member 'APlayerPawn_Generic_C::WaterDecayMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Was_RTT_Enabled_Var_Set) == 0x002BD8, "Member 'APlayerPawn_Generic_C::Was_RTT_Enabled_Var_Set' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Water_Scene_Capture_Enabled) == 0x002BD9, "Member 'APlayerPawn_Generic_C::Water_Scene_Capture_Enabled' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, StartingMinCapsuleShadowVis) == 0x002BDC, "Member 'APlayerPawn_Generic_C::StartingMinCapsuleShadowVis' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CachedEffect) == 0x002BE0, "Member 'APlayerPawn_Generic_C::CachedEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterInteractionWakeMIDS) == 0x002BE8, "Member 'APlayerPawn_Generic_C::WaterInteractionWakeMIDS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterInteractionWakeMeshes) == 0x002BF8, "Member 'APlayerPawn_Generic_C::WaterInteractionWakeMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Character_Calve_Length) == 0x002C08, "Member 'APlayerPawn_Generic_C::Character_Calve_Length' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, NumberOfCyclingWaterMeshes) == 0x002C0C, "Member 'APlayerPawn_Generic_C::NumberOfCyclingWaterMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterTraceImpactNormalAndZHeightLocation) == 0x002C10, "Member 'APlayerPawn_Generic_C::WaterTraceImpactNormalAndZHeightLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerVelocity) == 0x002C20, "Member 'APlayerPawn_Generic_C::PlayerVelocity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, EnableRunWalkWaterGroundFX) == 0x002C2C, "Member 'APlayerPawn_Generic_C::EnableRunWalkWaterGroundFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_MID) == 0x002C30, "Member 'APlayerPawn_Generic_C::Previous_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Weapon_MID) == 0x002C40, "Member 'APlayerPawn_Generic_C::Previous_Weapon_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateCharacterMesh) == 0x002C50, "Member 'APlayerPawn_Generic_C::DuplicateCharacterMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ArrayAlignment) == 0x002C58, "Member 'APlayerPawn_Generic_C::ArrayAlignment' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CharacterPartMaterials) == 0x002C60, "Member 'APlayerPawn_Generic_C::CharacterPartMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Head_MID) == 0x002C70, "Member 'APlayerPawn_Generic_C::Previous_Head_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Body_MID) == 0x002C80, "Member 'APlayerPawn_Generic_C::Previous_Body_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Hat_MID) == 0x002C90, "Member 'APlayerPawn_Generic_C::Previous_Hat_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Backpack_MID) == 0x002CA0, "Member 'APlayerPawn_Generic_C::Previous_Backpack_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Charm_MID) == 0x002CB0, "Member 'APlayerPawn_Generic_C::Previous_Charm_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Previous_Face_MID) == 0x002CC0, "Member 'APlayerPawn_Generic_C::Previous_Face_MID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateHeadMesh) == 0x002CD0, "Member 'APlayerPawn_Generic_C::DuplicateHeadMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateBodyMesh) == 0x002CD8, "Member 'APlayerPawn_Generic_C::DuplicateBodyMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateHatMesh) == 0x002CE0, "Member 'APlayerPawn_Generic_C::DuplicateHatMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateBackpackMesh) == 0x002CE8, "Member 'APlayerPawn_Generic_C::DuplicateBackpackMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateCharmMesh) == 0x002CF0, "Member 'APlayerPawn_Generic_C::DuplicateCharmMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DuplicateFaceMesh) == 0x002CF8, "Member 'APlayerPawn_Generic_C::DuplicateFaceMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingRight) == 0x002D00, "Member 'APlayerPawn_Generic_C::SwingRight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingRightEnd) == 0x002D10, "Member 'APlayerPawn_Generic_C::SwingRightEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingLeft) == 0x002D20, "Member 'APlayerPawn_Generic_C::SwingLeft' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingLeftEnd) == 0x002D30, "Member 'APlayerPawn_Generic_C::SwingLeftEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AnimNotify_Begin) == 0x002D40, "Member 'APlayerPawn_Generic_C::AnimNotify_Begin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AnimNotify_End) == 0x002D50, "Member 'APlayerPawn_Generic_C::AnimNotify_End' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, OverrideAnimTrail) == 0x002D60, "Member 'APlayerPawn_Generic_C::OverrideAnimTrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, GameplayTagsForHitByHuskRangedSound) == 0x002D68, "Member 'APlayerPawn_Generic_C::GameplayTagsForHitByHuskRangedSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingRight2) == 0x002D88, "Member 'APlayerPawn_Generic_C::SwingRight2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SwingLeft2) == 0x002D98, "Member 'APlayerPawn_Generic_C::SwingLeft2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AnimTrailFX) == 0x002DA8, "Member 'APlayerPawn_Generic_C::AnimTrailFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BlockedByPawns) == 0x002DB0, "Member 'APlayerPawn_Generic_C::BlockedByPawns' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Attribute_CurrentShield_Const) == 0x002DB8, "Member 'APlayerPawn_Generic_C::Attribute_CurrentShield_Const' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Attribute_Shield_Const) == 0x002DF0, "Member 'APlayerPawn_Generic_C::Attribute_Shield_Const' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Attribute_CurrentHealth_Const) == 0x002E28, "Member 'APlayerPawn_Generic_C::Attribute_CurrentHealth_Const' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Attribute_Max_Health_Const) == 0x002E60, "Member 'APlayerPawn_Generic_C::Attribute_Max_Health_Const' has a wrong offset!");

}

