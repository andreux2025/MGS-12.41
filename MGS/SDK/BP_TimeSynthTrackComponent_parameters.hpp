#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthTrackComponent

#include "Basic.hpp"

#include "TimeSynth_TransitionData_structs.hpp"
#include "TimeSynth_structs.hpp"
#include "TimeSynth_TrackPlayStates_structs.hpp"
#include "TimeSynth_TrackNames_MANG_structs.hpp"
#include "TimeSynth_TrackStemData_structs.hpp"


namespace SDK::Params
{

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnPlayStateChanged__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature final
{
public:
	ETimeSynth_TrackPlayStates                    Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimeSynth_TrackPlayStates                    New;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature) == 0x000002, "Wrong size on BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature, Previous) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature::Previous' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature, New) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature::New' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetController
// 0x0028 (0x0028 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetController final
{
public:
	class ABP_TimeSynthController_Base_C*         TimeSynthController_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetController) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetController");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetController) == 0x000028, "Wrong size on BP_TimeSynthTrackComponent_C_SetController");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetController, TimeSynthController_0) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetController::TimeSynthController_0' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetController, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_SetController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_SetController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStart
// 0x0040 (0x0040 - 0x0000)
struct BP_TimeSynthTrackComponent_C_QueueTrackStart final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateMaxClipDuration_Duration;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x002C(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_QueueTrackStart) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_QueueTrackStart");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_QueueTrackStart) == 0x000040, "Wrong size on BP_TimeSynthTrackComponent_C_QueueTrackStart");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CalculateMaxClipDuration_Duration) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CalculateMaxClipDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CheckPlaystate_Result) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_CheckPlaystate_Result_1) == 0x000011, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_PlayClip_ReturnValue) == 0x00002C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStart, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStop
// 0x0038 (0x0038 - 0x0000)
struct BP_TimeSynthTrackComponent_C_QueueTrackStop final
{
public:
	bool                                          Play_Outro;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x0018(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynthClipHandle                   CallFunc_Array_Get_Item;                           // 0x0028(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_QueueTrackStop) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_QueueTrackStop");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_QueueTrackStop) == 0x000038, "Wrong size on BP_TimeSynthTrackComponent_C_QueueTrackStop");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Play_Outro) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Play_Outro' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_CheckPlaystate_Result) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_CheckPlaystate_Result_1) == 0x000011, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_PlayClip_ReturnValue) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_QueueTrackStop, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_TimeSynthTrackComponent_C_QueueTrackStop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CalculateTrackLengthBeats
// 0x0050 (0x0050 - 0x0000)
struct BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats final
{
public:
	TArray<struct FTimeSynth_TrackStemData>       Clips_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         Duration;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDuration;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats) == 0x000050, "Wrong size on BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, Clips_0) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::Clips_0' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, Duration) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, MaxDuration) == 0x000014, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::MaxDuration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, Temp_bool_Variable) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, K2Node_Select_Default) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.LoopCurrentTrack
// 0x0040 (0x0040 - 0x0000)
struct BP_TimeSynthTrackComponent_C_LoopCurrentTrack final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateMaxClipDuration_Duration;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TrackStemData               CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynthClipHandle                   CallFunc_PlayClip_ReturnValue;                     // 0x002C(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_LoopCurrentTrack");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack) == 0x000040, "Wrong size on BP_TimeSynthTrackComponent_C_LoopCurrentTrack");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_CalculateMaxClipDuration_Duration) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_CalculateMaxClipDuration_Duration' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_PlayClip_ReturnValue) == 0x00002C, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_PlayClip_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_LoopCurrentTrack, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_LoopCurrentTrack::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.HasTransitionForTrack
// 0x0040 (0x0040 - 0x0000)
struct BP_TimeSynthTrackComponent_C_HasTransitionForTrack final
{
public:
	ETimeSynth_TrackNames_MANG                    New_Track;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Transition_Found;                                  // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TransitionData              Transition_Data;                                   // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimeSynth_TransitionData              CallFunc_Map_Find_Value;                           // 0x0020(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_HasTransitionForTrack");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack) == 0x000040, "Wrong size on BP_TimeSynthTrackComponent_C_HasTransitionForTrack");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, New_Track) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::New_Track' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, Transition_Found) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::Transition_Found' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, Transition_Data) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::Transition_Data' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_HasTransitionForTrack, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_HasTransitionForTrack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBeat
// 0x0100 (0x0100 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnQuantizationBeat final
{
public:
	ETimeSynthEventQuantization                   QuantizationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBars;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beat;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat) == 0x000008, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnQuantizationBeat");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat) == 0x000100, "Wrong size on BP_TimeSynthTrackComponent_C_OnQuantizationBeat");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, QuantizationType) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::QuantizationType' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, NumBars) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::NumBars' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, Beat) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::Beat' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000088, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_CheckPlaystate_Result) == 0x0000C8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D0, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_CheckPlaystate_Result_1) == 0x0000F8, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBeat, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBeat::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CheckPlaystate
// 0x0003 (0x0003 - 0x0000)
struct BP_TimeSynthTrackComponent_C_CheckPlaystate final
{
public:
	ETimeSynth_TrackPlayStates                    Is_In_Play_State;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_CheckPlaystate) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_CheckPlaystate");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_CheckPlaystate) == 0x000003, "Wrong size on BP_TimeSynthTrackComponent_C_CheckPlaystate");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, Is_In_Play_State) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::Is_In_Play_State' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, Result) == 0x000001, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_CheckPlaystate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_TimeSynthTrackComponent_C_CheckPlaystate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetPlaystate
// 0x0001 (0x0001 - 0x0000)
struct BP_TimeSynthTrackComponent_C_SetPlaystate final
{
public:
	ETimeSynth_TrackPlayStates                    Is_In_Play_State;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_SetPlaystate) == 0x000001, "Wrong alignment on BP_TimeSynthTrackComponent_C_SetPlaystate");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_SetPlaystate) == 0x000001, "Wrong size on BP_TimeSynthTrackComponent_C_SetPlaystate");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_SetPlaystate, Is_In_Play_State) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_SetPlaystate::Is_In_Play_State' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBar
// 0x0010 (0x0010 - 0x0000)
struct BP_TimeSynthTrackComponent_C_OnQuantizationBar final
{
public:
	ETimeSynthEventQuantization                   QuantizationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumBars;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Beat;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlaystate_Result;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlaystate_Result_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_OnQuantizationBar) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_OnQuantizationBar");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_OnQuantizationBar) == 0x000010, "Wrong size on BP_TimeSynthTrackComponent_C_OnQuantizationBar");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, QuantizationType) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::QuantizationType' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, NumBars) == 0x000004, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::NumBars' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, Beat) == 0x000008, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::Beat' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, CallFunc_CheckPlaystate_Result) == 0x00000C, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::CallFunc_CheckPlaystate_Result' has a wrong offset!");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_OnQuantizationBar, CallFunc_CheckPlaystate_Result_1) == 0x00000D, "Member 'BP_TimeSynthTrackComponent_C_OnQuantizationBar::CallFunc_CheckPlaystate_Result_1' has a wrong offset!");

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetBPM
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeSynthTrackComponent_C_GetBPM final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TimeSynthTrackComponent_C_GetBPM) == 0x000004, "Wrong alignment on BP_TimeSynthTrackComponent_C_GetBPM");
static_assert(sizeof(BP_TimeSynthTrackComponent_C_GetBPM) == 0x000004, "Wrong size on BP_TimeSynthTrackComponent_C_GetBPM");
static_assert(offsetof(BP_TimeSynthTrackComponent_C_GetBPM, Result) == 0x000000, "Member 'BP_TimeSynthTrackComponent_C_GetBPM::Result' has a wrong offset!");

}

