#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CCPM_M_HenchmanTough

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CCPM_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CCPM_M_HenchmanTough.CCPM_M_HenchmanTough_C
// 0x0070 (0x0428 - 0x03B8)
class ACCPM_M_HenchmanTough_C final : public ACCPM_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CCPM_M_HenchmanTough_C;             // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_BlankEffect_Idle;                                // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   LastPawn;                                          // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAthenaItemWrapDefinition> WeaponWrapToUse;                                   // 0x03D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UFortItem*>                      PendingItemsToWrap;                                // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         SL_LastValue;                                      // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SL_RefreshTimeHandler;                             // 0x0410(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SL_StartLevel;                                     // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SL_EndLevel;                                       // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRadius;                                         // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CCPM_M_HenchmanTough(int32 EntryPoint);
	void InitializeVariabels();
	void OnPostResIn();
	void ResetSafetyGate();
	void HackyWorkaroundRefreshTimerGuy();
	void OnActualStatChange();
	void OnPawnAndPartChanged();
	void OnStatChanged_C1F573F044C3FF9843EFC3B1C5BCF9DD(class FName StatName, int32 StatValue);
	void UserConstructionScript();
	void Death_Check();
	void GetAssociatedAthenaController(class AFortPlayerControllerAthena** AsFort_Player_Controller_Athena);
	void ApplyOverrideToItems(TArray<class UFortItem*>& Array);
	void ApplyLevelParam(int32 Level);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CCPM_M_HenchmanTough_C">();
	}
	static class ACCPM_M_HenchmanTough_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACCPM_M_HenchmanTough_C>();
	}
};
static_assert(alignof(ACCPM_M_HenchmanTough_C) == 0x000008, "Wrong alignment on ACCPM_M_HenchmanTough_C");
static_assert(sizeof(ACCPM_M_HenchmanTough_C) == 0x000428, "Wrong size on ACCPM_M_HenchmanTough_C");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, UberGraphFrame_CCPM_M_HenchmanTough_C) == 0x0003B8, "Member 'ACCPM_M_HenchmanTough_C::UberGraphFrame_CCPM_M_HenchmanTough_C' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, P_BlankEffect_Idle) == 0x0003C0, "Member 'ACCPM_M_HenchmanTough_C::P_BlankEffect_Idle' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, LastPawn) == 0x0003C8, "Member 'ACCPM_M_HenchmanTough_C::LastPawn' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, WeaponWrapToUse) == 0x0003D0, "Member 'ACCPM_M_HenchmanTough_C::WeaponWrapToUse' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, PendingItemsToWrap) == 0x0003F8, "Member 'ACCPM_M_HenchmanTough_C::PendingItemsToWrap' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, SL_LastValue) == 0x000408, "Member 'ACCPM_M_HenchmanTough_C::SL_LastValue' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, SL_RefreshTimeHandler) == 0x000410, "Member 'ACCPM_M_HenchmanTough_C::SL_RefreshTimeHandler' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, SL_StartLevel) == 0x000418, "Member 'ACCPM_M_HenchmanTough_C::SL_StartLevel' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, SL_EndLevel) == 0x00041C, "Member 'ACCPM_M_HenchmanTough_C::SL_EndLevel' has a wrong offset!");
static_assert(offsetof(ACCPM_M_HenchmanTough_C, EndRadius) == 0x000420, "Member 'ACCPM_M_HenchmanTough_C::EndRadius' has a wrong offset!");

}

