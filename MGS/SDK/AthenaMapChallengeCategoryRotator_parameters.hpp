#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapChallengeCategoryRotator

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.ExecuteUbergraph_AthenaMapChallengeCategoryRotator
// 0x0068 (0x0068 - 0x0000)
struct AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Count;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator) == 0x000008, "Wrong alignment on AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator");
static_assert(sizeof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator) == 0x000068, "Wrong size on AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, EntryPoint) == 0x000000, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, Temp_float_Variable) == 0x000010, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, Temp_float_Variable_1) == 0x000014, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000018, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_GetCurrentInputType_ReturnValue) == 0x000020, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, K2Node_Event_Count) == 0x000030, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::K2Node_Event_Count' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, K2Node_Event_Index) == 0x000034, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000040, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, K2Node_CustomEvent_bNewInputType) == 0x000050, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, Temp_bool_Variable) == 0x000052, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, K2Node_Select_Default) == 0x000054, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'AthenaMapChallengeCategoryRotator_C_ExecuteUbergraph_AthenaMapChallengeCategoryRotator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.HandleOnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged) == 0x000001, "Wrong alignment on AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged");
static_assert(sizeof(AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged) == 0x000001, "Wrong size on AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged, bNewInputType) == 0x000000, "Member 'AthenaMapChallengeCategoryRotator_C_HandleOnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.BP_OnOptionSelected
// 0x0004 (0x0004 - 0x0000)
struct AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected) == 0x000004, "Wrong alignment on AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected");
static_assert(sizeof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected) == 0x000004, "Wrong size on AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected, Index_0) == 0x000000, "Member 'AthenaMapChallengeCategoryRotator_C_BP_OnOptionSelected::Index_0' has a wrong offset!");

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.BP_OnOptionsPopulated
// 0x0004 (0x0004 - 0x0000)
struct AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated) == 0x000004, "Wrong alignment on AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated");
static_assert(sizeof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated) == 0x000004, "Wrong size on AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated, Count) == 0x000000, "Member 'AthenaMapChallengeCategoryRotator_C_BP_OnOptionsPopulated::Count' has a wrong offset!");

// Function AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C.PlayIntroAnim
// 0x0018 (0x0018 - 0x0000)
struct AthenaMapChallengeCategoryRotator_C_PlayIntroAnim final
{
public:
	bool                                          bIsReverse;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapChallengeCategoryRotator_C_PlayIntroAnim) == 0x000008, "Wrong alignment on AthenaMapChallengeCategoryRotator_C_PlayIntroAnim");
static_assert(sizeof(AthenaMapChallengeCategoryRotator_C_PlayIntroAnim) == 0x000018, "Wrong size on AthenaMapChallengeCategoryRotator_C_PlayIntroAnim");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_PlayIntroAnim, bIsReverse) == 0x000000, "Member 'AthenaMapChallengeCategoryRotator_C_PlayIntroAnim::bIsReverse' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_PlayIntroAnim, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'AthenaMapChallengeCategoryRotator_C_PlayIntroAnim::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapChallengeCategoryRotator_C_PlayIntroAnim, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'AthenaMapChallengeCategoryRotator_C_PlayIntroAnim::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

