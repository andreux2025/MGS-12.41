#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Frontend_EventLevel_NavObject_NoticBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Frontend_EventLevel_NavObject_NoticBoard.BP_Frontend_EventLevel_NavObject_NoticBoard_C
// 0x0140 (0x0620 - 0x04E0)
class ABP_Frontend_EventLevel_NavObject_NoticBoard_C final : public AFortNavigationActor_DailyChallengeBoard
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineMeshComponent*                   SplineMesh_5;                                      // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh_1;                                      // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh_2;                                      // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh_4;                                      // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_5E;                     // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_1E;                     // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_2E;                     // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_4E;                     // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_3E;                     // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_3;                      // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_5;                      // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_1;                      // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_2;                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_Honey_4;                      // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Pot_3;                        // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Pot_2;                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Pot_1;                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Pot_5;                        // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Pot_4;                        // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh_3;                                      // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Base;                         // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Hint;                         // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_TvB_Map;                          // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_C;                            // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_B;                            // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_A;                            // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Pin_B_end;                        // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Note_H1;                          // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Note_I2;                          // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_Note_I1;                          // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_MiniMap;                          // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_ObjectiveBoard_BP12;                             // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               TvB_01_Maproom;                                    // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               TvB_02_Pots;                                       // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapRoom_ObjName;                                   // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Pots_ObjName_all;                                  // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortQuestItemDefinition*>       TvB_Quests_To_Check;                               // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_NoticBoard(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnCurrentQuestsReady_12655DD446F522D8E34C9CBF5A99866D(class UFortQuestManager* OwningQuestManager, bool bFoundAllQuestsOnProfile);
	void UserConstructionScript();
	void UpdateSplines(class USplineMeshComponent* Spline, class UStaticMeshComponent* Start, class UStaticMeshComponent* End, const struct FVector& Offset);
	void UpdateAllSplines();
	void TvB_ShowOnlyHint();
	void TvB_ShowOnlyMapAndPots();
	void Hide_Pot_01();
	void Hide_Pot_02();
	void Hide_Pot_03();
	void Hide_Pot_04();
	void Hide_Pot_05();
	void TvB_HideAll();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Frontend_EventLevel_NavObject_NoticBoard_C">();
	}
	static class ABP_Frontend_EventLevel_NavObject_NoticBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Frontend_EventLevel_NavObject_NoticBoard_C>();
	}
};
static_assert(alignof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C) == 0x000008, "Wrong alignment on ABP_Frontend_EventLevel_NavObject_NoticBoard_C");
static_assert(sizeof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C) == 0x000620, "Wrong size on ABP_Frontend_EventLevel_NavObject_NoticBoard_C");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, UberGraphFrame) == 0x0004E0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, SplineMesh_5) == 0x0004E8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::SplineMesh_5' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, SplineMesh_1) == 0x0004F0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::SplineMesh_1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, SplineMesh_2) == 0x0004F8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::SplineMesh_2' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, SplineMesh_4) == 0x000500, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::SplineMesh_4' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_5E) == 0x000508, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_5E' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_1E) == 0x000510, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_1E' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_2E) == 0x000518, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_2E' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_4E) == 0x000520, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_4E' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_3E) == 0x000528, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_3E' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_3) == 0x000530, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_3' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_5) == 0x000538, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_5' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_1) == 0x000540, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_2) == 0x000548, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_2' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_Honey_4) == 0x000550, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_Honey_4' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Pot_3) == 0x000558, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Pot_3' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Pot_2) == 0x000560, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Pot_2' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Pot_1) == 0x000568, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Pot_1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Pot_5) == 0x000570, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Pot_5' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Pot_4) == 0x000578, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Pot_4' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, SplineMesh_3) == 0x000580, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::SplineMesh_3' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Base) == 0x000588, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Base' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Hint) == 0x000590, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Hint' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_TvB_Map) == 0x000598, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_TvB_Map' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_C) == 0x0005A0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_C' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_B) == 0x0005A8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_B' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_A) == 0x0005B0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_A' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Pin_B_end) == 0x0005B8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Pin_B_end' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Note_H1) == 0x0005C0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Note_H1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Note_I2) == 0x0005C8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Note_I2' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_Note_I1) == 0x0005D0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_Note_I1' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_MiniMap) == 0x0005D8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_MiniMap' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, S_ObjectiveBoard_BP12) == 0x0005E0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::S_ObjectiveBoard_BP12' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, TvB_01_Maproom) == 0x0005E8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::TvB_01_Maproom' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, TvB_02_Pots) == 0x0005F0, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::TvB_02_Pots' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, MapRoom_ObjName) == 0x0005F8, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::MapRoom_ObjName' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, Pots_ObjName_all) == 0x000600, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::Pots_ObjName_all' has a wrong offset!");
static_assert(offsetof(ABP_Frontend_EventLevel_NavObject_NoticBoard_C, TvB_Quests_To_Check) == 0x000610, "Member 'ABP_Frontend_EventLevel_NavObject_NoticBoard_C::TvB_Quests_To_Check' has a wrong offset!");

}

