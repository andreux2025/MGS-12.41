#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_AppleSun_WithTrajectory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_ThrowConsumable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_AppleSun_WithTrajectory.GA_Athena_AppleSun_WithTrajectory_C
// 0x0010 (0x0DB0 - 0x0DA0)
class UGA_Athena_AppleSun_WithTrajectory_C final : public UGA_ThrowConsumable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Athena_AppleSun_WithTrajectory_C; // 0x0DA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          LocationIsValid;                                   // 0x0DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA9[0x3];                                      // 0x0DA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetLocation;                                    // 0x0DAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_AppleSun_WithTrajectory(int32 EntryPoint);
	void K2_CommitExecute();
	void UpdateTrajectory();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_AppleSun_WithTrajectory_C">();
	}
	static class UGA_Athena_AppleSun_WithTrajectory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_AppleSun_WithTrajectory_C>();
	}
};
static_assert(alignof(UGA_Athena_AppleSun_WithTrajectory_C) == 0x000008, "Wrong alignment on UGA_Athena_AppleSun_WithTrajectory_C");
static_assert(sizeof(UGA_Athena_AppleSun_WithTrajectory_C) == 0x000DB0, "Wrong size on UGA_Athena_AppleSun_WithTrajectory_C");
static_assert(offsetof(UGA_Athena_AppleSun_WithTrajectory_C, UberGraphFrame_GA_Athena_AppleSun_WithTrajectory_C) == 0x000DA0, "Member 'UGA_Athena_AppleSun_WithTrajectory_C::UberGraphFrame_GA_Athena_AppleSun_WithTrajectory_C' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_WithTrajectory_C, LocationIsValid) == 0x000DA8, "Member 'UGA_Athena_AppleSun_WithTrajectory_C::LocationIsValid' has a wrong offset!");
static_assert(offsetof(UGA_Athena_AppleSun_WithTrajectory_C, OffsetLocation) == 0x000DAC, "Member 'UGA_Athena_AppleSun_WithTrajectory_C::OffsetLocation' has a wrong offset!");

}

