#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonutChallengeListEntry

#include "Basic.hpp"

#include "DonutChallengeListEntry_classes.hpp"
#include "DonutChallengeListEntry_parameters.hpp"


namespace SDK
{

// Function DonutChallengeListEntry.DonutChallengeListEntry_C.ExecuteUbergraph_DonutChallengeListEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDonutChallengeListEntry_C::ExecuteUbergraph_DonutChallengeListEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DonutChallengeListEntry_C", "ExecuteUbergraph_DonutChallengeListEntry");

	Params::DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BPIsCompleted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InCompletion                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDonutChallengeListEntry_C::BPIsCompleted(bool InCompletion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DonutChallengeListEntry_C", "BPIsCompleted");

	Params::DonutChallengeListEntry_C_BPIsCompleted Parms{};

	Parms.InCompletion = InCompletion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UDonutChallengeListEntry_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DonutChallengeListEntry_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UDonutChallengeListEntry_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DonutChallengeListEntry_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BPHasRewardTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InHasReward                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDonutChallengeListEntry_C::BPHasRewardTexture(bool InHasReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DonutChallengeListEntry_C", "BPHasRewardTexture");

	Params::DonutChallengeListEntry_C_BPHasRewardTexture Parms{};

	Parms.InHasReward = InHasReward;

	UObject::ProcessEvent(Func, &Parms);
}

}

