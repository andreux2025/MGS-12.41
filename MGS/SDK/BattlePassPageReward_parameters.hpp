#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassPageReward

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BattlePassPageReward.BattlePassPageReward_C.ExecuteUbergraph_BattlePassPageReward
// 0x02E0 (0x02E0 - 0x0000)
struct BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0004(0x0008)(NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0050(0x0070)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_8;                        // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_4;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0178(0x0028)()
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot;                 // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot_1;               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot_2;               // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot_1;          // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot_2;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              K2Node_Event_RewardItem;                           // 0x0200(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0210(0x0080)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot_3;               // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot_4;               // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot_5;               // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x02D4(0x0008)(NoDestructor)
};
static_assert(alignof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward) == 0x000008, "Wrong alignment on BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward");
static_assert(sizeof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward) == 0x0002E0, "Wrong size on BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, EntryPoint) == 0x000000, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_Event_InFocusEvent) == 0x000004, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000018, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000048, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_Event_MouseEvent) == 0x000050, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000D0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin) == 0x0000D8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_1) == 0x0000E8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_2) == 0x0000F8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_3) == 0x000108, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_4) == 0x000118, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_5) == 0x000128, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_6) == 0x000138, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_7) == 0x000148, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_Margin_8) == 0x000158, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_Margin_8' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000168, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetDynamicMaterial_ReturnValue_4) == 0x000170, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetDynamicMaterial_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_MakeStruct_SlateColor_1) == 0x000178, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot) == 0x0001A0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot_1) == 0x0001B0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot_2) == 0x0001C0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_2) == 0x0001C8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x0001D0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_3) == 0x0001D8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsVertical_Box_Slot_1) == 0x0001E0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsVertical_Box_Slot_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_4) == 0x0001E8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsVertical_Box_Slot_2) == 0x0001F0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsVertical_Box_Slot_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_5) == 0x0001F8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_Event_RewardItem) == 0x000200, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_Event_RewardItem' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_GetRarity_ReturnValue) == 0x000208, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_BPGetRarityData_ReturnValue) == 0x000210, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_Event_IsDesignTime) == 0x000290, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000298, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, CallFunc_PlayAnimationForward_ReturnValue) == 0x0002A0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot_3) == 0x0002A8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot_3' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_6) == 0x0002B0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot_4) == 0x0002B8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot_4' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_7) == 0x0002C0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_AsOverlay_Slot_5) == 0x0002C8, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_AsOverlay_Slot_5' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_DynamicCast_bSuccess_8) == 0x0002D0, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward, K2Node_Event_InFocusEvent_1) == 0x0002D4, "Member 'BattlePassPageReward_C_ExecuteUbergraph_BattlePassPageReward::K2Node_Event_InFocusEvent_1' has a wrong offset!");

// Function BattlePassPageReward.BattlePassPageReward_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageReward_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BattlePassPageReward_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on BattlePassPageReward_C_OnRemovedFromFocusPath");
static_assert(sizeof(BattlePassPageReward_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on BattlePassPageReward_C_OnRemovedFromFocusPath");
static_assert(offsetof(BattlePassPageReward_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'BattlePassPageReward_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function BattlePassPageReward.BattlePassPageReward_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageReward_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BattlePassPageReward_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on BattlePassPageReward_C_OnAddedToFocusPath");
static_assert(sizeof(BattlePassPageReward_C_OnAddedToFocusPath) == 0x000008, "Wrong size on BattlePassPageReward_C_OnAddedToFocusPath");
static_assert(offsetof(BattlePassPageReward_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'BattlePassPageReward_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function BattlePassPageReward.BattlePassPageReward_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BattlePassPageReward_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePassPageReward_C_PreConstruct) == 0x000001, "Wrong alignment on BattlePassPageReward_C_PreConstruct");
static_assert(sizeof(BattlePassPageReward_C_PreConstruct) == 0x000001, "Wrong size on BattlePassPageReward_C_PreConstruct");
static_assert(offsetof(BattlePassPageReward_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BattlePassPageReward_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BattlePassPageReward.BattlePassPageReward_C.InitForReward
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageReward_C_InitForReward final
{
public:
	const class UFortItemDefinition*              RewardItem;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageReward_C_InitForReward) == 0x000008, "Wrong alignment on BattlePassPageReward_C_InitForReward");
static_assert(sizeof(BattlePassPageReward_C_InitForReward) == 0x000008, "Wrong size on BattlePassPageReward_C_InitForReward");
static_assert(offsetof(BattlePassPageReward_C_InitForReward, RewardItem) == 0x000000, "Member 'BattlePassPageReward_C_InitForReward::RewardItem' has a wrong offset!");

// Function BattlePassPageReward.BattlePassPageReward_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct BattlePassPageReward_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattlePassPageReward_C_OnMouseLeave) == 0x000008, "Wrong alignment on BattlePassPageReward_C_OnMouseLeave");
static_assert(sizeof(BattlePassPageReward_C_OnMouseLeave) == 0x000070, "Wrong size on BattlePassPageReward_C_OnMouseLeave");
static_assert(offsetof(BattlePassPageReward_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BattlePassPageReward_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

