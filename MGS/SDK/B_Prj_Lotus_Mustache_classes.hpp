#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Lotus_Mustache

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Lotus_Mustache.B_Prj_Lotus_Mustache_C
// 0x01E0 (0x0A48 - 0x0868)
class AB_Prj_Lotus_Mustache_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0868(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FlightSound;                                       // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FX_BandageTrail_SplineMesh;                        // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TracerMesh;                                        // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_BandageTrail_Ribbon;                            // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Projectile_Max_Lifetime;                           // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasExploded_;                                     // 0x089C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impact_Location;                                   // 0x08A0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x08AC(0x008C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         FX_Linger_Time;                                    // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93C[0x4];                                      // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Lifespan_Timer;                                    // 0x0940(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x0948(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Max_Projectile_Size;                               // 0x094C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Proj_MID;                                          // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tracer_Lifetime;                                   // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnPositionOffset;                               // 0x0964(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoTarget;                                          // 0x0970(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ShouldSpawnBandages;                               // 0x0978(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SpawnBandageSound;                                 // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BounceOffWallSound;                                // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WaterImpactFX;                                     // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      WaterHitMat;                                       // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             WaterHit;                                          // 0x09B8(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void ExecuteUbergraph_B_Prj_Lotus_Mustache(int32 EntryPoint);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult_0, bool bIsOverlap);
	void SpawnBandage();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void SpawnedBandageFx();
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnBounce(const struct FHitResult& Hit);
	void OnReachedLockTargetDistanceThreshold();
	void OnHomingPassedTarget();
	void Explosion_VFX();
	void Timeout();
	void Reset_Explosion_Sound();
	void Play_Explosion_Sound();
	void OnStop(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void OnRep_Impact_Location();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Lotus_Mustache_C">();
	}
	static class AB_Prj_Lotus_Mustache_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Lotus_Mustache_C>();
	}
};
static_assert(alignof(AB_Prj_Lotus_Mustache_C) == 0x000008, "Wrong alignment on AB_Prj_Lotus_Mustache_C");
static_assert(sizeof(AB_Prj_Lotus_Mustache_C) == 0x000A48, "Wrong size on AB_Prj_Lotus_Mustache_C");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, UberGraphFrame) == 0x000868, "Member 'AB_Prj_Lotus_Mustache_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, FlightSound) == 0x000870, "Member 'AB_Prj_Lotus_Mustache_C::FlightSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, FX_BandageTrail_SplineMesh) == 0x000878, "Member 'AB_Prj_Lotus_Mustache_C::FX_BandageTrail_SplineMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, RotatingMovement) == 0x000880, "Member 'AB_Prj_Lotus_Mustache_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, TracerMesh) == 0x000888, "Member 'AB_Prj_Lotus_Mustache_C::TracerMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, FX_BandageTrail_Ribbon) == 0x000890, "Member 'AB_Prj_Lotus_Mustache_C::FX_BandageTrail_Ribbon' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Projectile_Max_Lifetime) == 0x000898, "Member 'AB_Prj_Lotus_Mustache_C::Projectile_Max_Lifetime' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, bHasExploded_) == 0x00089C, "Member 'AB_Prj_Lotus_Mustache_C::bHasExploded_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Impact_Location) == 0x0008A0, "Member 'AB_Prj_Lotus_Mustache_C::Impact_Location' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, HitResult) == 0x0008AC, "Member 'AB_Prj_Lotus_Mustache_C::HitResult' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, FX_Linger_Time) == 0x000938, "Member 'AB_Prj_Lotus_Mustache_C::FX_Linger_Time' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Lifespan_Timer) == 0x000940, "Member 'AB_Prj_Lotus_Mustache_C::Lifespan_Timer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, InterpSpeed) == 0x000948, "Member 'AB_Prj_Lotus_Mustache_C::InterpSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Max_Projectile_Size) == 0x00094C, "Member 'AB_Prj_Lotus_Mustache_C::Max_Projectile_Size' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Proj_MID) == 0x000958, "Member 'AB_Prj_Lotus_Mustache_C::Proj_MID' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, Tracer_Lifetime) == 0x000960, "Member 'AB_Prj_Lotus_Mustache_C::Tracer_Lifetime' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, SpawnPositionOffset) == 0x000964, "Member 'AB_Prj_Lotus_Mustache_C::SpawnPositionOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, NoTarget) == 0x000970, "Member 'AB_Prj_Lotus_Mustache_C::NoTarget' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, ShouldSpawnBandages) == 0x000978, "Member 'AB_Prj_Lotus_Mustache_C::ShouldSpawnBandages' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, SpawnBandageSound) == 0x000998, "Member 'AB_Prj_Lotus_Mustache_C::SpawnBandageSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, BounceOffWallSound) == 0x0009A0, "Member 'AB_Prj_Lotus_Mustache_C::BounceOffWallSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, WaterImpactFX) == 0x0009A8, "Member 'AB_Prj_Lotus_Mustache_C::WaterImpactFX' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, WaterHitMat) == 0x0009B0, "Member 'AB_Prj_Lotus_Mustache_C::WaterHitMat' has a wrong offset!");
static_assert(offsetof(AB_Prj_Lotus_Mustache_C, WaterHit) == 0x0009B8, "Member 'AB_Prj_Lotus_Mustache_C::WaterHit' has a wrong offset!");

}

