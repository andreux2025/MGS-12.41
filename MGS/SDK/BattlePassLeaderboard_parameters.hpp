#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassLeaderboard

#include "Basic.hpp"


namespace SDK::Params
{

// Function BattlePassLeaderboard.BattlePassLeaderboard_C.ExecuteUbergraph_BattlePassLeaderboard
// 0x0018 (0x0018 - 0x0000)
struct BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleBack_PassThrough;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard) == 0x000008, "Wrong alignment on BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard");
static_assert(sizeof(BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard) == 0x000018, "Wrong size on BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard");
static_assert(offsetof(BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard, EntryPoint) == 0x000000, "Member 'BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard, CallFunc_HandleBack_PassThrough) == 0x000010, "Member 'BattlePassLeaderboard_C_ExecuteUbergraph_BattlePassLeaderboard::CallFunc_HandleBack_PassThrough' has a wrong offset!");

// Function BattlePassLeaderboard.BattlePassLeaderboard_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'BattlePassLeaderboard_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function BattlePassLeaderboard.BattlePassLeaderboard_C.HandleBack
// 0x0001 (0x0001 - 0x0000)
struct BattlePassLeaderboard_C_HandleBack final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePassLeaderboard_C_HandleBack) == 0x000001, "Wrong alignment on BattlePassLeaderboard_C_HandleBack");
static_assert(sizeof(BattlePassLeaderboard_C_HandleBack) == 0x000001, "Wrong size on BattlePassLeaderboard_C_HandleBack");
static_assert(offsetof(BattlePassLeaderboard_C_HandleBack, PassThrough) == 0x000000, "Member 'BattlePassLeaderboard_C_HandleBack::PassThrough' has a wrong offset!");

// Function BattlePassLeaderboard.BattlePassLeaderboard_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct BattlePassLeaderboard_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassLeaderboard_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on BattlePassLeaderboard_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(BattlePassLeaderboard_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on BattlePassLeaderboard_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(BattlePassLeaderboard_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'BattlePassLeaderboard_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

