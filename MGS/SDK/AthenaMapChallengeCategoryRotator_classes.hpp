#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapChallengeCategoryRotator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaMapChallengeCategoryRotator.AthenaMapChallengeCategoryRotator_C
// 0x0048 (0x0CA8 - 0x0C60)
class UAthenaMapChallengeCategoryRotator_C final : public UAthenaMapChallengeCategoryRotator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x0C68(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HeadingSwap;                                       // 0x0C70(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Background;                                        // 0x0C78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientBackground;                                // 0x0C80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_lft_backgroundFill;                          // 0x0C88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Rg_backgroundFill;                           // 0x0C90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LeftArrow;                                 // 0x0C98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_RightArrow;                                // 0x0CA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AthenaMapChallengeCategoryRotator(int32 EntryPoint);
	void Destruct();
	void HandleOnInputMethodChanged(ECommonInputType bNewInputType);
	void Construct();
	void BP_OnOptionSelected(int32 Index_0);
	void BP_OnOptionsPopulated(int32 Count);
	void PlayIntroAnim(bool bIsReverse);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaMapChallengeCategoryRotator_C">();
	}
	static class UAthenaMapChallengeCategoryRotator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaMapChallengeCategoryRotator_C>();
	}
};
static_assert(alignof(UAthenaMapChallengeCategoryRotator_C) == 0x000008, "Wrong alignment on UAthenaMapChallengeCategoryRotator_C");
static_assert(sizeof(UAthenaMapChallengeCategoryRotator_C) == 0x000CA8, "Wrong size on UAthenaMapChallengeCategoryRotator_C");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, UberGraphFrame) == 0x000C60, "Member 'UAthenaMapChallengeCategoryRotator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, Intro) == 0x000C68, "Member 'UAthenaMapChallengeCategoryRotator_C::Intro' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, HeadingSwap) == 0x000C70, "Member 'UAthenaMapChallengeCategoryRotator_C::HeadingSwap' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, Background) == 0x000C78, "Member 'UAthenaMapChallengeCategoryRotator_C::Background' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, GradientBackground) == 0x000C80, "Member 'UAthenaMapChallengeCategoryRotator_C::GradientBackground' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, Image_lft_backgroundFill) == 0x000C88, "Member 'UAthenaMapChallengeCategoryRotator_C::Image_lft_backgroundFill' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, Image_Rg_backgroundFill) == 0x000C90, "Member 'UAthenaMapChallengeCategoryRotator_C::Image_Rg_backgroundFill' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, SizeBox_LeftArrow) == 0x000C98, "Member 'UAthenaMapChallengeCategoryRotator_C::SizeBox_LeftArrow' has a wrong offset!");
static_assert(offsetof(UAthenaMapChallengeCategoryRotator_C, SizeBox_RightArrow) == 0x000CA0, "Member 'UAthenaMapChallengeCategoryRotator_C::SizeBox_RightArrow' has a wrong offset!");

}

