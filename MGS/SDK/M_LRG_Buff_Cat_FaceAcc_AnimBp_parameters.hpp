#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_LRG_Buff_Cat_FaceAcc_AnimBp

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function M_LRG_Buff_Cat_FaceAcc_AnimBp.M_LRG_Buff_Cat_FaceAcc_AnimBp_C.ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp
// 0x000C (0x000C - 0x0000)
struct M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp) == 0x000004, "Wrong alignment on M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp");
static_assert(sizeof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp) == 0x00000C, "Wrong size on M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp");
static_assert(offsetof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp, EntryPoint) == 0x000000, "Member 'M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp::EntryPoint' has a wrong offset!");
static_assert(offsetof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'M_LRG_Buff_Cat_FaceAcc_AnimBp_C_ExecuteUbergraph_M_LRG_Buff_Cat_FaceAcc_AnimBp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function M_LRG_Buff_Cat_FaceAcc_AnimBp.M_LRG_Buff_Cat_FaceAcc_AnimBp_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph) == 0x000008, "Wrong alignment on M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph");
static_assert(sizeof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph) == 0x000010, "Wrong size on M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph");
static_assert(offsetof(M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'M_LRG_Buff_Cat_FaceAcc_AnimBp_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

