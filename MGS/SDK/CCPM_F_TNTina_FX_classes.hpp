#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CCPM_F_TNTina_FX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CCPM_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CCPM_F_TNTina_FX.CCPM_F_TNTina_FX_C
// 0x0078 (0x0430 - 0x03B8)
class ACCPM_F_TNTina_FX_C final : public ACCPM_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CCPM_F_TNTina_FX_C;                 // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Player_Super_LevelUp;                            // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_BlankEffect_Idle;                                // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   LastPawn;                                          // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAthenaItemWrapDefinition> WeaponWrapToUse;                                   // 0x03D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UFortItem*>                      PendingItemsToWrap;                                // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         SL_LastValue;                                      // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SL_RefreshTimeHandler;                             // 0x0418(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SL_StartLevel;                                     // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SL_EndLevel;                                       // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRadius;                                         // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CCPM_F_TNTina_FX(int32 EntryPoint);
	void InitializeVariabels();
	void OnPostResIn();
	void ResetSafetyGate();
	void HackyWorkaroundRefreshTimerGuy();
	void OnActualStatChange();
	void OnPawnAndPartChanged();
	void OnStatChanged_69B250E44334E860958973A8995D6FC6(class FName StatName, int32 StatValue);
	void UserConstructionScript();
	void Death_Check();
	void GetAssociatedAthenaController(class AFortPlayerControllerAthena** AsFort_Player_Controller_Athena);
	void ApplyOverrideToItems(TArray<class UFortItem*>& Array);
	void ApplyLevelParam(int32 Level);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CCPM_F_TNTina_FX_C">();
	}
	static class ACCPM_F_TNTina_FX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACCPM_F_TNTina_FX_C>();
	}
};
static_assert(alignof(ACCPM_F_TNTina_FX_C) == 0x000008, "Wrong alignment on ACCPM_F_TNTina_FX_C");
static_assert(sizeof(ACCPM_F_TNTina_FX_C) == 0x000430, "Wrong size on ACCPM_F_TNTina_FX_C");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, UberGraphFrame_CCPM_F_TNTina_FX_C) == 0x0003B8, "Member 'ACCPM_F_TNTina_FX_C::UberGraphFrame_CCPM_F_TNTina_FX_C' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, P_Player_Super_LevelUp) == 0x0003C0, "Member 'ACCPM_F_TNTina_FX_C::P_Player_Super_LevelUp' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, P_BlankEffect_Idle) == 0x0003C8, "Member 'ACCPM_F_TNTina_FX_C::P_BlankEffect_Idle' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, LastPawn) == 0x0003D0, "Member 'ACCPM_F_TNTina_FX_C::LastPawn' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, WeaponWrapToUse) == 0x0003D8, "Member 'ACCPM_F_TNTina_FX_C::WeaponWrapToUse' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, PendingItemsToWrap) == 0x000400, "Member 'ACCPM_F_TNTina_FX_C::PendingItemsToWrap' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, SL_LastValue) == 0x000410, "Member 'ACCPM_F_TNTina_FX_C::SL_LastValue' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, SL_RefreshTimeHandler) == 0x000418, "Member 'ACCPM_F_TNTina_FX_C::SL_RefreshTimeHandler' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, SL_StartLevel) == 0x000420, "Member 'ACCPM_F_TNTina_FX_C::SL_StartLevel' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, SL_EndLevel) == 0x000424, "Member 'ACCPM_F_TNTina_FX_C::SL_EndLevel' has a wrong offset!");
static_assert(offsetof(ACCPM_F_TNTina_FX_C, EndRadius) == 0x000428, "Member 'ACCPM_F_TNTina_FX_C::EndRadius' has a wrong offset!");

}

