#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemOnPawnPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ItemOnPawnPreview.ItemOnPawnPreview_C
// 0x00A0 (0x0490 - 0x03F0)
class AItemOnPawnPreview_C final : public AFortItemPreviewOnPawnActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLightLowMobile;                                 // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLightMobile;                            // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight_StandaloneForSwitch;                      // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight5;                                         // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight6;                                         // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLigh3;                                          // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    KeyLight2;                                         // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    BounceRear1;                                       // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLowerRight1;                                    // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimLeft1;                                          // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimTopRight1;                                      // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    RimBottomLeft1;                                    // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Bounce1;                                           // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightTransform;                                    // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Sample_Mesh;                                       // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysOn;                                          // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugConstructionLighting;                         // 0x0482(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SwitchErebusLighting(bool Visibility);
	void SetFloorEnabled(bool Show_Floor);
	void LightControl(bool Active);
	void SwitchPCLighting(bool Visibility);
	void SwitchMobileLighting(bool NewParam);
	void UpdateSettings();
	void OnSetFloorMaterial(class UMaterialInterface* InMaterialInstance);
	void OnPreviewVisualsSpawned();
	void ExecuteUbergraph_ItemOnPawnPreview(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemOnPawnPreview_C">();
	}
	static class AItemOnPawnPreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AItemOnPawnPreview_C>();
	}
};
static_assert(alignof(AItemOnPawnPreview_C) == 0x000010, "Wrong alignment on AItemOnPawnPreview_C");
static_assert(sizeof(AItemOnPawnPreview_C) == 0x000490, "Wrong size on AItemOnPawnPreview_C");
static_assert(offsetof(AItemOnPawnPreview_C, UberGraphFrame) == 0x0003F0, "Member 'AItemOnPawnPreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, Arrow) == 0x0003F8, "Member 'AItemOnPawnPreview_C::Arrow' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, SkyLightLowMobile) == 0x000400, "Member 'AItemOnPawnPreview_C::SkyLightLowMobile' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, DirectionalLightMobile) == 0x000408, "Member 'AItemOnPawnPreview_C::DirectionalLightMobile' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, KeyLight_StandaloneForSwitch) == 0x000410, "Member 'AItemOnPawnPreview_C::KeyLight_StandaloneForSwitch' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, KeyLight5) == 0x000418, "Member 'AItemOnPawnPreview_C::KeyLight5' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, KeyLight6) == 0x000420, "Member 'AItemOnPawnPreview_C::KeyLight6' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, KeyLigh3) == 0x000428, "Member 'AItemOnPawnPreview_C::KeyLigh3' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, KeyLight2) == 0x000430, "Member 'AItemOnPawnPreview_C::KeyLight2' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, BounceRear1) == 0x000438, "Member 'AItemOnPawnPreview_C::BounceRear1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, RimLowerRight1) == 0x000440, "Member 'AItemOnPawnPreview_C::RimLowerRight1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, RimLeft1) == 0x000448, "Member 'AItemOnPawnPreview_C::RimLeft1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, RimTopRight1) == 0x000450, "Member 'AItemOnPawnPreview_C::RimTopRight1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, RimBottomLeft1) == 0x000458, "Member 'AItemOnPawnPreview_C::RimBottomLeft1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, Bounce1) == 0x000460, "Member 'AItemOnPawnPreview_C::Bounce1' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, LightTransform) == 0x000468, "Member 'AItemOnPawnPreview_C::LightTransform' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, Plane) == 0x000470, "Member 'AItemOnPawnPreview_C::Plane' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, Sample_Mesh) == 0x000478, "Member 'AItemOnPawnPreview_C::Sample_Mesh' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, AlwaysOn) == 0x000480, "Member 'AItemOnPawnPreview_C::AlwaysOn' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, IsActive) == 0x000481, "Member 'AItemOnPawnPreview_C::IsActive' has a wrong offset!");
static_assert(offsetof(AItemOnPawnPreview_C, DebugConstructionLighting) == 0x000482, "Member 'AItemOnPawnPreview_C::DebugConstructionLighting' has a wrong offset!");

}

