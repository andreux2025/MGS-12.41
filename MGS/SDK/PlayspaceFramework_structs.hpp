#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayspaceFramework

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct PlayspaceFramework.PlayspaceUser
// 0x0044 (0x0050 - 0x000C)
struct FPlayspaceUser final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0010(0x0028)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayspace*                             LeafPlayspace;                                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerState*                           PlayerStateCached;                                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AController*                            ControllerCached;                                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FPlayspaceUser) == 0x000008, "Wrong alignment on FPlayspaceUser");
static_assert(sizeof(FPlayspaceUser) == 0x000050, "Wrong size on FPlayspaceUser");
static_assert(offsetof(FPlayspaceUser, UserId) == 0x000010, "Member 'FPlayspaceUser::UserId' has a wrong offset!");
static_assert(offsetof(FPlayspaceUser, LeafPlayspace) == 0x000038, "Member 'FPlayspaceUser::LeafPlayspace' has a wrong offset!");
static_assert(offsetof(FPlayspaceUser, PlayerStateCached) == 0x000040, "Member 'FPlayspaceUser::PlayerStateCached' has a wrong offset!");
static_assert(offsetof(FPlayspaceUser, ControllerCached) == 0x000048, "Member 'FPlayspaceUser::ControllerCached' has a wrong offset!");

// ScriptStruct PlayspaceFramework.PlayspaceUserList
// 0x0020 (0x0128 - 0x0108)
struct FPlayspaceUserList final : public FFastArraySerializer
{
public:
	TArray<struct FPlayspaceUser>                 PlayspaceUsers;                                    // 0x0108(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bIsInitialized;                                    // 0x0118(0x0001)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayspace*                             Playspace;                                         // 0x0120(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPlayspaceUserList) == 0x000008, "Wrong alignment on FPlayspaceUserList");
static_assert(sizeof(FPlayspaceUserList) == 0x000128, "Wrong size on FPlayspaceUserList");
static_assert(offsetof(FPlayspaceUserList, PlayspaceUsers) == 0x000108, "Member 'FPlayspaceUserList::PlayspaceUsers' has a wrong offset!");
static_assert(offsetof(FPlayspaceUserList, bIsInitialized) == 0x000118, "Member 'FPlayspaceUserList::bIsInitialized' has a wrong offset!");
static_assert(offsetof(FPlayspaceUserList, Playspace) == 0x000120, "Member 'FPlayspaceUserList::Playspace' has a wrong offset!");

}

