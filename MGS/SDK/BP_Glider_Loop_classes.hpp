#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Glider_Loop

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Glider_Loop.BP_Glider_Loop_C
// 0x0020 (0x0238 - 0x0218)
class ABP_Glider_Loop_C final : public AActor
{
public:
	class UChildActorComponent*                   PeelyBP12Mannequin;                                // 0x0218(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComponent1;                            // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Glider_Loop_C">();
	}
	static class ABP_Glider_Loop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Glider_Loop_C>();
	}
};
static_assert(alignof(ABP_Glider_Loop_C) == 0x000008, "Wrong alignment on ABP_Glider_Loop_C");
static_assert(sizeof(ABP_Glider_Loop_C) == 0x000238, "Wrong size on ABP_Glider_Loop_C");
static_assert(offsetof(ABP_Glider_Loop_C, PeelyBP12Mannequin) == 0x000218, "Member 'ABP_Glider_Loop_C::PeelyBP12Mannequin' has a wrong offset!");
static_assert(offsetof(ABP_Glider_Loop_C, SkeletalMeshComponent1) == 0x000220, "Member 'ABP_Glider_Loop_C::SkeletalMeshComponent1' has a wrong offset!");
static_assert(offsetof(ABP_Glider_Loop_C, SharedRoot) == 0x000228, "Member 'ABP_Glider_Loop_C::SharedRoot' has a wrong offset!");
static_assert(offsetof(ABP_Glider_Loop_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Glider_Loop_C::DefaultSceneRoot' has a wrong offset!");

}

