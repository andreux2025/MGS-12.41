#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS12_Elevator_Outerdoor_Indicator

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator
// 0x0188 (0x0188 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& CameraTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGSC_C2S2_BattlePass_C*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class UGSC_C2S2_BattlePass_C*                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_CustomEvent_OwningPlayer;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortPlayerController* OwningPlayer)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_CameraTag;                      // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHenchmenData                          CallFunc_Array_Get_Item_1;                         // 0x0080(0x00F8)()
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Henchmen_State_State;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator) == 0x000008, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator) == 0x000188, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, EntryPoint) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, K2Node_SwitchInteger_CmpSuccess) == 0x000024, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Array_Get_Item) == 0x000048, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, K2Node_CustomEvent_OwningPlayer) == 0x000060, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::K2Node_CustomEvent_OwningPlayer' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, K2Node_CustomEvent_CameraTag) == 0x000078, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::K2Node_CustomEvent_CameraTag' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000178, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Set_Henchmen_State_State) == 0x00017C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Set_Henchmen_State_State' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.CameraChanged
// 0x0008 (0x0008 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged final
{
public:
	struct FGameplayTag                           CameraTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged) == 0x000008, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged, CameraTag) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_CameraChanged::CameraTag' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.RoomOwnerChanged
// 0x0008 (0x0008 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged final
{
public:
	class AFortPlayerController*                  OwningPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged) == 0x000008, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged) == 0x000008, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged, OwningPlayer) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_RoomOwnerChanged::OwningPlayer' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript) == 0x000008, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript) == 0x000028, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000020, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.SetEntry-0
// 0x0014 (0x0014 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0) == 0x000014, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0, Temp_bool_Variable) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0, Temp_float_Variable) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0, Temp_float_Variable_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0, K2Node_Select_Default) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus0::K2Node_Select_Default' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.SetEntry-1
// 0x0014 (0x0014 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1) == 0x000014, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1, Temp_bool_Variable) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1, Temp_float_Variable) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1, Temp_float_Variable_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1, K2Node_Select_Default) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus1::K2Node_Select_Default' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.SetEntry-2
// 0x0014 (0x0014 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2) == 0x000014, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2, Temp_bool_Variable) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2, Temp_float_Variable) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2, Temp_float_Variable_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2, K2Node_Select_Default) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus2::K2Node_Select_Default' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.SetEntry-3
// 0x0014 (0x0014 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3) == 0x000014, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3, Temp_bool_Variable) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3, Temp_float_Variable) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3, Temp_float_Variable_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3, K2Node_Select_Default) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus3::K2Node_Select_Default' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.SetEntry-4
// 0x0014 (0x0014 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4 final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4) == 0x000004, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4) == 0x000014, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4, Temp_bool_Variable) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4, Temp_float_Variable) == 0x000004, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4, Temp_float_Variable_1) == 0x000008, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4, K2Node_Select_Default) == 0x000010, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_SetEntryMinus4::K2Node_Select_Default' has a wrong offset!");

// Function BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C.Set Henchmen State
// 0x0160 (0x0160 - 0x0000)
struct BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State final
{
public:
	struct FHenchmenData                          HenchmenData_0;                                    // 0x0000(0x00F8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AFortPlayerController*                  Owner_0;                                           // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         State;                                             // 0x0100(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         AlterQuest;                                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         EgoQuest;                                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         A_B_Quest;                                         // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGameUserSettings*                  CallFunc_GetFortGameUserSettings_ReturnValue;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemDefinitionOwnershipState_bIsOwned; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetItemDefinitionOwnershipState_ReturnValue; // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRecordedStat_ReturnValue;              // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsQuestInProgress_ReturnValue;            // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue_1;          // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsQuestInProgress_ReturnValue_1;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue_1;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue_2;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State) == 0x000008, "Wrong alignment on BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State");
static_assert(sizeof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State) == 0x000160, "Wrong size on BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, HenchmenData_0) == 0x000000, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::HenchmenData_0' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, Owner_0) == 0x0000F8, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::Owner_0' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, State) == 0x000100, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::State' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, AlterQuest) == 0x000108, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::AlterQuest' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, EgoQuest) == 0x000110, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::EgoQuest' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, A_B_Quest) == 0x000118, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::A_B_Quest' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetFortGameUserSettings_ReturnValue) == 0x000120, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetFortGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetTagName_ReturnValue) == 0x000128, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetItemDefinitionOwnershipState_bIsOwned) == 0x000130, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetItemDefinitionOwnershipState_bIsOwned' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetItemDefinitionOwnershipState_ReturnValue) == 0x000131, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetItemDefinitionOwnershipState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_HasRecordedStat_ReturnValue) == 0x000132, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_HasRecordedStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_IsQuestInProgress_ReturnValue) == 0x000133, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_IsQuestInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_Not_PreBool_ReturnValue) == 0x000134, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_HasCompletedQuest_ReturnValue) == 0x000135, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_HasCompletedQuest_ReturnValue_1) == 0x000136, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_HasCompletedQuest_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_BooleanOR_ReturnValue) == 0x000137, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_IsQuestInProgress_ReturnValue_1) == 0x000138, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_IsQuestInProgress_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_Not_PreBool_ReturnValue_1) == 0x00013A, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_BooleanAND_ReturnValue) == 0x00013B, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_IsValid_ReturnValue_1) == 0x00013C, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetQuestManager_ReturnValue) == 0x000140, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000148, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetQuestWithDefinition_ReturnValue_1) == 0x000150, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetQuestWithDefinition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State, CallFunc_GetQuestWithDefinition_ReturnValue_2) == 0x000158, "Member 'BPS12_Elevator_Outerdoor_Indicator_C_Set_Henchmen_State::CallFunc_GetQuestWithDefinition_ReturnValue_2' has a wrong offset!");

}

