#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassScreen_SideMessaging_NewTech

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePassScreen_SideMessaging_NewTech.BattlePassScreen_SideMessaging_NewTech_C
// 0x0120 (0x0350 - 0x0230)
class UBattlePassScreen_SideMessaging_NewTech_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimatePulse;                                      // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnIntro;                                           // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Backing;                                           // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomAngle;                                       // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Messaging;                                         // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewTechIcon;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Pulse;                                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopAngle;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          FlipAxis;                                          // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Skye;                                              // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Midas;                                             // 0x02A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Meowscles;                                         // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TNTina_Character;                                  // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TNTina_Glider;                                     // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Brutus;                                            // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Maya;                                              // 0x0318(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Agent_Peely;                                       // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bShown;                                            // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bItemHasNewTech;                                   // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BattlePassScreen_SideMessaging_NewTech(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void HandleDetailsShown();
	void HandleTrackShown();
	void HandleItemSet(class UFortItemDefinition* NewItem);
	void Construct();
	void SetTechText(const struct FGameplayTagContainer& NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePassScreen_SideMessaging_NewTech_C">();
	}
	static class UBattlePassScreen_SideMessaging_NewTech_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreen_SideMessaging_NewTech_C>();
	}
};
static_assert(alignof(UBattlePassScreen_SideMessaging_NewTech_C) == 0x000008, "Wrong alignment on UBattlePassScreen_SideMessaging_NewTech_C");
static_assert(sizeof(UBattlePassScreen_SideMessaging_NewTech_C) == 0x000350, "Wrong size on UBattlePassScreen_SideMessaging_NewTech_C");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, UberGraphFrame) == 0x000230, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, AnimatePulse) == 0x000238, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::AnimatePulse' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, OnIntro) == 0x000240, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::OnIntro' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Backing) == 0x000248, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Backing' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, BottomAngle) == 0x000250, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::BottomAngle' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Messaging) == 0x000258, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Messaging' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, NewTechIcon) == 0x000260, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::NewTechIcon' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Pulse) == 0x000268, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Pulse' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, SafeZone_0) == 0x000270, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, TopAngle) == 0x000278, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::TopAngle' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, FlipAxis) == 0x000280, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::FlipAxis' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Skye) == 0x000288, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Skye' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Midas) == 0x0002A0, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Midas' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Meowscles) == 0x0002B8, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Meowscles' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, TNTina_Character) == 0x0002D0, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::TNTina_Character' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, TNTina_Glider) == 0x0002E8, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::TNTina_Glider' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Brutus) == 0x000300, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Brutus' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Maya) == 0x000318, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Maya' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, Agent_Peely) == 0x000330, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::Agent_Peely' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, bShown) == 0x000348, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::bShown' has a wrong offset!");
static_assert(offsetof(UBattlePassScreen_SideMessaging_NewTech_C, bItemHasNewTech) == 0x000349, "Member 'UBattlePassScreen_SideMessaging_NewTech_C::bItemHasNewTech' has a wrong offset!");

}

