#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuScreen_Athena

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MenuScreen_Athena.MenuScreen_Athena_C
// 0x17C0 (0x1B60 - 0x03A0)
class UMenuScreen_Athena_C final : public UFrontendAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x03A8(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0420(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0498(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0510(0x0078)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x0588(0x00A0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0628(0x00A0)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_2;                             // 0x06C8(0x00F8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x07C0(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x08C8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0910(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x09D0(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0A88(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0AB0(0x0028)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x0AD8(0x00F8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_5;                          // 0x0BD0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_4;                          // 0x0CC0(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x0DB0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0EA0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0EE8(0x0048)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x0F30(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1020(0x00B8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x10D8(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1188(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x11D0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x11F0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1210(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1240(0x0028)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1268(0x00F8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x1360(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x1450(0x00F0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1540(0x0108)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1648(0x0058)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x16A0(0x00B0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1750(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1800(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1878(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x18F0(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1968(0x0078)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x19E0(0x00A0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x1A80(0x00A0)()
	FMulticastInlineDelegateProperty_             MenuScreenDispatcher;                              // 0x1B20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasBeenSelected;                                   // 0x1B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B31[0x3];                                     // 0x1B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PoseInt;                                           // 0x1B34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetTranslate;                                   // 0x1B38(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OffsetRotate;                                      // 0x1B44(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class APlayerPawn_Athena_C*                   PawnOwner;                                         // 0x1B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x1B58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x1B5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void MenuScreenDispatcher__DelegateSignature();
	void ExecuteUbergraph_MenuScreen_Athena(int32 EntryPoint);
	void AnimNotify_LobbySkydive_Gliding();
	void AnimNotify_LobbySkydive_Diving();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MenuScreen_Athena_AnimGraphNode_LayeredBoneBlend_8D2B60D44BBADFD01AC9A6BF39472D0B();
	void AnimNotify_LeftB();
	void UserFocus();
	void AnimNotify_playFacialAnim();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuScreen_Athena_C">();
	}
	static class UMenuScreen_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuScreen_Athena_C>();
	}
};
static_assert(alignof(UMenuScreen_Athena_C) == 0x000010, "Wrong alignment on UMenuScreen_Athena_C");
static_assert(sizeof(UMenuScreen_Athena_C) == 0x001B60, "Wrong size on UMenuScreen_Athena_C");
static_assert(offsetof(UMenuScreen_Athena_C, UberGraphFrame) == 0x0003A0, "Member 'UMenuScreen_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_7) == 0x0003A8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_6) == 0x000420, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_5) == 0x000498, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_4) == 0x000510, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_3) == 0x000588, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_2) == 0x000628, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK_2) == 0x0006C8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone_1) == 0x0007C0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_3) == 0x0008C8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LayeredBoneBlend) == 0x000910, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SaveCachedPose_1) == 0x0009D0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_2) == 0x000A88, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose_1) == 0x000AB0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK_1) == 0x000AD8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_5) == 0x000BD0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_5' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_4) == 0x000CC0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_4' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_3) == 0x000DB0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_2) == 0x000EA0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot_1) == 0x000EE8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_2) == 0x000F30, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SaveCachedPose) == 0x001020, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum_2) == 0x0010D8, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Slot) == 0x001188, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ComponentToLocalSpace) == 0x0011D0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LocalToComponentSpace) == 0x0011F0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_Root) == 0x001210, "Member 'UMenuScreen_Athena_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_UseCachedPose) == 0x001240, "Member 'UMenuScreen_Athena_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_LegIK) == 0x001268, "Member 'UMenuScreen_Athena_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone_1) == 0x001360, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_CopyBone) == 0x001450, "Member 'UMenuScreen_Athena_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyBone) == 0x001540, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_ModifyCurve) == 0x001648, "Member 'UMenuScreen_Athena_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum_1) == 0x0016A0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByEnum) == 0x001750, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_3) == 0x001800, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_2) == 0x001878, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer_1) == 0x0018F0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_SequencePlayer) == 0x001968, "Member 'UMenuScreen_Athena_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt_1) == 0x0019E0, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, AnimGraphNode_BlendListByInt) == 0x001A80, "Member 'UMenuScreen_Athena_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, MenuScreenDispatcher) == 0x001B20, "Member 'UMenuScreen_Athena_C::MenuScreenDispatcher' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, HasBeenSelected) == 0x001B30, "Member 'UMenuScreen_Athena_C::HasBeenSelected' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PoseInt) == 0x001B34, "Member 'UMenuScreen_Athena_C::PoseInt' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, OffsetTranslate) == 0x001B38, "Member 'UMenuScreen_Athena_C::OffsetTranslate' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, OffsetRotate) == 0x001B44, "Member 'UMenuScreen_Athena_C::OffsetRotate' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PawnOwner) == 0x001B50, "Member 'UMenuScreen_Athena_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, StartTime) == 0x001B58, "Member 'UMenuScreen_Athena_C::StartTime' has a wrong offset!");
static_assert(offsetof(UMenuScreen_Athena_C, PlayRate) == 0x001B5C, "Member 'UMenuScreen_Athena_C::PlayRate' has a wrong offset!");

}

