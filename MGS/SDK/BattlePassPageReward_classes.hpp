#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassPageReward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePassPageReward.BattlePassPageReward_C
// 0x0090 (0x0C50 - 0x0BC0)
class UBattlePassPageReward_C final : public UFortBattlePassReward
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnSelected;                                        // 0x0BC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewTechPulse;                                      // 0x0BD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           AlignmentVB;                                       // 0x0BE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BonusString;                                       // 0x0BE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Free;                                              // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       FreeString;                                        // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FreeTrack;                                         // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ItemSB;                                            // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LinePulseBottom;                                   // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LinePulseTop;                                      // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewTechBacking;                                    // 0x0C20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewTechIcon;                                       // 0x0C28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PaidTrack;                                         // 0x0C30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Pulse;                                             // 0x0C38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         LargeHeight;                                       // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LargeWidth;                                        // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallHeight;                                       // 0x0C48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallWidth;                                        // 0x0C4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BattlePassPageReward(int32 EntryPoint);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void InitForReward(const class UFortItemDefinition* RewardItem);
	void ResetToDefault();
	void SetLargeRewardVisuals();
	void SetChaseRewardVisuals();
	void UpdateVisualsToCompletedState();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void BP_OnHovered();
	void BP_OnUnhovered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePassPageReward_C">();
	}
	static class UBattlePassPageReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassPageReward_C>();
	}
};
static_assert(alignof(UBattlePassPageReward_C) == 0x000008, "Wrong alignment on UBattlePassPageReward_C");
static_assert(sizeof(UBattlePassPageReward_C) == 0x000C50, "Wrong size on UBattlePassPageReward_C");
static_assert(offsetof(UBattlePassPageReward_C, UberGraphFrame) == 0x000BC0, "Member 'UBattlePassPageReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, OnSelected) == 0x000BC8, "Member 'UBattlePassPageReward_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, NewTechPulse) == 0x000BD0, "Member 'UBattlePassPageReward_C::NewTechPulse' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, OnHover) == 0x000BD8, "Member 'UBattlePassPageReward_C::OnHover' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, AlignmentVB) == 0x000BE0, "Member 'UBattlePassPageReward_C::AlignmentVB' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, BonusString) == 0x000BE8, "Member 'UBattlePassPageReward_C::BonusString' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, Free) == 0x000BF0, "Member 'UBattlePassPageReward_C::Free' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, FreeString) == 0x000BF8, "Member 'UBattlePassPageReward_C::FreeString' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, FreeTrack) == 0x000C00, "Member 'UBattlePassPageReward_C::FreeTrack' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, ItemSB) == 0x000C08, "Member 'UBattlePassPageReward_C::ItemSB' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, LinePulseBottom) == 0x000C10, "Member 'UBattlePassPageReward_C::LinePulseBottom' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, LinePulseTop) == 0x000C18, "Member 'UBattlePassPageReward_C::LinePulseTop' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, NewTechBacking) == 0x000C20, "Member 'UBattlePassPageReward_C::NewTechBacking' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, NewTechIcon) == 0x000C28, "Member 'UBattlePassPageReward_C::NewTechIcon' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, PaidTrack) == 0x000C30, "Member 'UBattlePassPageReward_C::PaidTrack' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, Pulse) == 0x000C38, "Member 'UBattlePassPageReward_C::Pulse' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, LargeHeight) == 0x000C40, "Member 'UBattlePassPageReward_C::LargeHeight' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, LargeWidth) == 0x000C44, "Member 'UBattlePassPageReward_C::LargeWidth' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, SmallHeight) == 0x000C48, "Member 'UBattlePassPageReward_C::SmallHeight' has a wrong offset!");
static_assert(offsetof(UBattlePassPageReward_C, SmallWidth) == 0x000C4C, "Member 'UBattlePassPageReward_C::SmallWidth' has a wrong offset!");

}

