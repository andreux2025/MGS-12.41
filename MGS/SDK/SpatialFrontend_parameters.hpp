#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialFrontend

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SpatialFrontend.SpatialFrontend_C.ExecuteUbergraph_SpatialFrontend
// 0x0068 (0x0068 - 0x0000)
struct SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_ActiveCamera;                         // 0x0004(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_TargetCamera;                         // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortEventLevelNavigationActor*   K2Node_Event_TargetNavActor;                       // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortEventLevelNavigationDisplayDetails CallFunc_GetDisplayDetails_ReturnValue;            // 0x0028(0x0010)()
	class UBPS12MainRoomPOITag_C*                 K2Node_DynamicCast_AsBPS12Main_Room_POITag;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend) == 0x000008, "Wrong alignment on SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend");
static_assert(sizeof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend) == 0x000068, "Wrong size on SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, EntryPoint) == 0x000000, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, K2Node_Event_ActiveCamera) == 0x000004, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::K2Node_Event_ActiveCamera' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, K2Node_Event_TargetCamera) == 0x00000C, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::K2Node_Event_TargetCamera' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, K2Node_Event_TargetNavActor) == 0x000018, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::K2Node_Event_TargetNavActor' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000020, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_GetDisplayDetails_ReturnValue) == 0x000028, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_GetDisplayDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, K2Node_DynamicCast_AsBPS12Main_Room_POITag) == 0x000038, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::K2Node_DynamicCast_AsBPS12Main_Room_POITag' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_Len_ReturnValue) == 0x000044, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'SpatialFrontend_C_ExecuteUbergraph_SpatialFrontend::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function SpatialFrontend.SpatialFrontend_C.OnEventLevelTransitionBegin
// 0x0010 (0x0010 - 0x0000)
struct SpatialFrontend_C_OnEventLevelTransitionBegin final
{
public:
	struct FGameplayTag                           TargetCamera;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	const class AFortEventLevelNavigationActor*   TargetNavActor;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialFrontend_C_OnEventLevelTransitionBegin) == 0x000008, "Wrong alignment on SpatialFrontend_C_OnEventLevelTransitionBegin");
static_assert(sizeof(SpatialFrontend_C_OnEventLevelTransitionBegin) == 0x000010, "Wrong size on SpatialFrontend_C_OnEventLevelTransitionBegin");
static_assert(offsetof(SpatialFrontend_C_OnEventLevelTransitionBegin, TargetCamera) == 0x000000, "Member 'SpatialFrontend_C_OnEventLevelTransitionBegin::TargetCamera' has a wrong offset!");
static_assert(offsetof(SpatialFrontend_C_OnEventLevelTransitionBegin, TargetNavActor) == 0x000008, "Member 'SpatialFrontend_C_OnEventLevelTransitionBegin::TargetNavActor' has a wrong offset!");

// Function SpatialFrontend.SpatialFrontend_C.OnEventLevelTransitionComplete
// 0x0008 (0x0008 - 0x0000)
struct SpatialFrontend_C_OnEventLevelTransitionComplete final
{
public:
	struct FGameplayTag                           ActiveCamera;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialFrontend_C_OnEventLevelTransitionComplete) == 0x000004, "Wrong alignment on SpatialFrontend_C_OnEventLevelTransitionComplete");
static_assert(sizeof(SpatialFrontend_C_OnEventLevelTransitionComplete) == 0x000008, "Wrong size on SpatialFrontend_C_OnEventLevelTransitionComplete");
static_assert(offsetof(SpatialFrontend_C_OnEventLevelTransitionComplete, ActiveCamera) == 0x000000, "Member 'SpatialFrontend_C_OnEventLevelTransitionComplete::ActiveCamera' has a wrong offset!");

}

