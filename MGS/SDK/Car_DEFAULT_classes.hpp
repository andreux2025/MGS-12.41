#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Car_DEFAULT

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Car_DEFAULT.Car_DEFAULT_C
// 0x01F0 (0x0D90 - 0x0BA0)
class ACar_DEFAULT_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF; // 0x0BAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAD[0x3];                                      // 0x0BAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983; // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983; // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BounceCar;                                         // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7; // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7; // 0x0BCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCD[0x3];                                      // 0x0BCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverallAlarmCycleFinished;                         // 0x0BD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD9[0x3];                                      // 0x0BD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InitialEmissiveMultiplier;                         // 0x0BDC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InitialEmissiveMultiplier2;                        // 0x0BEC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlarmLightCounter;                                 // 0x0BFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundIsRetriggerable;                              // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CurrentFlashAnimationCycleFinished;                // 0x0C01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C02[0x2];                                      // 0x0C02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfTimesTheLightsFlashWhenHit;                // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SirenLightEmissiveMultiplier;                      // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SirenLightOn;                                      // 0x0C0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C0D[0x3];                                      // 0x0C0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Emissive_Multiplier_2;                             // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Emissive_Multiplier;                               // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_HitAlarm;                              // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Emissive_2;                                    // 0x0C28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C29[0x7];                                      // 0x0C29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Minus_Jump_on_Car;                           // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuspensionMovementAmount;                          // 0x0C38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParticleEffectHas_NOT_AlreadyBeenTriggered;        // 0x0C3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3D[0x3];                                      // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               EngineSteamParticleEffect;                         // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_Hit_AutoBody;                          // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMakeJumpingNoiseAgain;                          // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmIsCurrentlyMakingNoise;                    // 0x0C51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmEnabled;                                   // 0x0C52(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RandomlyDisableSomeCarAlarms;                      // 0x0C53(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         PercentageChanceOfCarAlarmsBeingDisabled;          // 0x0C54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   HLight1;                                           // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight1SocketLocation;                             // 0x0C60(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight2SocketLocation;                             // 0x0C6C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       AnimatingMIDArray;                                 // 0x0C78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UAudioComponent*                        AudibleAlarmSound;                                 // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCarBounce;                                      // 0x0C90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseCarAlarm;                                       // 0x0C91(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C92[0x2];                                      // 0x0C92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Headlight_Emissive_Brightness;                     // 0x0C94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCarAlarmEnabledInitialized;                      // 0x0C98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugWind;                                         // 0x0C99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9A[0x6];                                      // 0x0C9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0CA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Debug_TempMaterial;                                // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Debug_Wind_Intensity;                              // 0x0CC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCC[0x4];                                      // 0x0CCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Wind_Intensity_Debug_Mesh;                         // 0x0CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDropOilDecal;                                   // 0x0CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD9[0x3];                                      // 0x0CD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Wind_Yaw_Rotation;                                 // 0x0CDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight1;                                        // 0x0CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight2;                                        // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailLightBrightness;                               // 0x0CF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TailLightsExist;                                   // 0x0CF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadLightsExist;                                   // 0x0CF5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF6[0x2];                                      // 0x0CF6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    HLight2;                                           // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadLightLightBrightness;                          // 0x0D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight1SocketLocation;                             // 0x0D04(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight2SocketLocation;                             // 0x0D10(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounce_Offset;                                     // 0x0D1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hlight2_Minus_impact_bounce_light_location;        // 0x0D28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight2_Minus_impact_bounce_light_location;        // 0x0D34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Car_Currently_Bouncing_From_Jump;                  // 0x0D40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D41[0x3];                                      // 0x0D41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hlight1_Minus_impact_bounce_light_location;        // 0x0D44(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight1_Minus_impact_bounce_light_location;        // 0x0D50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Randomly_start_with_some_cars_lights_on;           // 0x0D5C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5D[0x3];                                      // 0x0D5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Percentage_chance_of_lights_being_left_off;        // 0x0D60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Random_Light_Intensity_Variance;             // 0x0D64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          This_Car_s_Lights_Have_Been_Enabled;               // 0x0D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TurnHeadLightsOn;                                  // 0x0D69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_D6A[0x2];                                      // 0x0D6A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceLastJumpSound;                            // 0x0D6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeBetweenJumpSound;                           // 0x0D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D74[0x4];                                      // 0x0D74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPlayDeathEffects;                                // 0x0D78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CurrentLightRuntimeIntensity;                      // 0x0D88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnPlayDeathEffects__DelegateSignature();
	void ExecuteUbergraph_Car_DEFAULT(int32 EntryPoint);
	void OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void Player_jump_based_bounce_();
	void Hit_Bounce_Finished();
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void FireOffCarAlarm();
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void TriggerLowHealthParticleEffect();
	void FadeSirenLight();
	void StartSirenLight();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void Timeline_2__FireOffNoise__EventFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void BounceCar__UpdateFunc();
	void BounceCar__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void StopCarAlarmFromPlaying();
	void Setcanmakebouncingnoisetrue();
	float SetCarAlarmEnabledBasedOnLocation(const struct FVector& Location, bool* NewParam);
	float MaterialEditorSine(float Look_up_value, float Period);
	void Set_Light_Brightness(float ZeroMinus1_Intensity, bool Include_Second_Emissive_Channel, bool Force);
	void Randomize_the_target_brightness_levels();
	void Toggle_light_visibility(bool bNewVisibility);
	void PlayJumpOnCarSound(const struct FVector& Location);
	void GetCarMatsForLights(TArray<class UMaterialInstanceDynamic*>* OutMaterials);
	void GenerateMeshMIDs();
	void ValidateLightVisibility();
	void Construct_ValidateLightsOnVars(bool* DoesHaveLights);
	void Construct_Clean_Up_Lights();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Car_DEFAULT_C">();
	}
	static class ACar_DEFAULT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACar_DEFAULT_C>();
	}
};
static_assert(alignof(ACar_DEFAULT_C) == 0x000008, "Wrong alignment on ACar_DEFAULT_C");
static_assert(sizeof(ACar_DEFAULT_C) == 0x000D90, "Wrong size on ACar_DEFAULT_C");
static_assert(offsetof(ACar_DEFAULT_C, UberGraphFrame) == 0x000BA0, "Member 'ACar_DEFAULT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF) == 0x000BA8, "Member 'ACar_DEFAULT_C::Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF) == 0x000BAC, "Member 'ACar_DEFAULT_C::Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2) == 0x000BB0, "Member 'ACar_DEFAULT_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983) == 0x000BB8, "Member 'ACar_DEFAULT_C::BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983) == 0x000BBC, "Member 'ACar_DEFAULT_C::BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar) == 0x000BC0, "Member 'ACar_DEFAULT_C::BounceCar' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7) == 0x000BC8, "Member 'ACar_DEFAULT_C::Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7) == 0x000BCC, "Member 'ACar_DEFAULT_C::Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0) == 0x000BD0, "Member 'ACar_DEFAULT_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OverallAlarmCycleFinished) == 0x000BD8, "Member 'ACar_DEFAULT_C::OverallAlarmCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, InitialEmissiveMultiplier) == 0x000BDC, "Member 'ACar_DEFAULT_C::InitialEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, InitialEmissiveMultiplier2) == 0x000BEC, "Member 'ACar_DEFAULT_C::InitialEmissiveMultiplier2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AlarmLightCounter) == 0x000BFC, "Member 'ACar_DEFAULT_C::AlarmLightCounter' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SoundIsRetriggerable) == 0x000C00, "Member 'ACar_DEFAULT_C::SoundIsRetriggerable' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CurrentFlashAnimationCycleFinished) == 0x000C01, "Member 'ACar_DEFAULT_C::CurrentFlashAnimationCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, NumberOfTimesTheLightsFlashWhenHit) == 0x000C04, "Member 'ACar_DEFAULT_C::NumberOfTimesTheLightsFlashWhenHit' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SirenLightEmissiveMultiplier) == 0x000C08, "Member 'ACar_DEFAULT_C::SirenLightEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SirenLightOn) == 0x000C0C, "Member 'ACar_DEFAULT_C::SirenLightOn' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Emissive_Multiplier_2) == 0x000C10, "Member 'ACar_DEFAULT_C::Emissive_Multiplier_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Emissive_Multiplier) == 0x000C18, "Member 'ACar_DEFAULT_C::Emissive_Multiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_HitAlarm) == 0x000C20, "Member 'ACar_DEFAULT_C::Sound_Minus_HitAlarm' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Use_Emissive_2) == 0x000C28, "Member 'ACar_DEFAULT_C::Use_Emissive_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_Jump_on_Car) == 0x000C30, "Member 'ACar_DEFAULT_C::Sound_Minus_Jump_on_Car' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SuspensionMovementAmount) == 0x000C38, "Member 'ACar_DEFAULT_C::SuspensionMovementAmount' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, ParticleEffectHas_NOT_AlreadyBeenTriggered) == 0x000C3C, "Member 'ACar_DEFAULT_C::ParticleEffectHas_NOT_AlreadyBeenTriggered' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, EngineSteamParticleEffect) == 0x000C40, "Member 'ACar_DEFAULT_C::EngineSteamParticleEffect' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_Hit_AutoBody) == 0x000C48, "Member 'ACar_DEFAULT_C::Sound_Minus_Hit_AutoBody' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CanMakeJumpingNoiseAgain) == 0x000C50, "Member 'ACar_DEFAULT_C::CanMakeJumpingNoiseAgain' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CarAlarmIsCurrentlyMakingNoise) == 0x000C51, "Member 'ACar_DEFAULT_C::CarAlarmIsCurrentlyMakingNoise' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CarAlarmEnabled) == 0x000C52, "Member 'ACar_DEFAULT_C::CarAlarmEnabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, RandomlyDisableSomeCarAlarms) == 0x000C53, "Member 'ACar_DEFAULT_C::RandomlyDisableSomeCarAlarms' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, PercentageChanceOfCarAlarmsBeingDisabled) == 0x000C54, "Member 'ACar_DEFAULT_C::PercentageChanceOfCarAlarmsBeingDisabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight1) == 0x000C58, "Member 'ACar_DEFAULT_C::HLight1' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight1SocketLocation) == 0x000C60, "Member 'ACar_DEFAULT_C::HLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight2SocketLocation) == 0x000C6C, "Member 'ACar_DEFAULT_C::HLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AnimatingMIDArray) == 0x000C78, "Member 'ACar_DEFAULT_C::AnimatingMIDArray' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AudibleAlarmSound) == 0x000C88, "Member 'ACar_DEFAULT_C::AudibleAlarmSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, UseCarBounce) == 0x000C90, "Member 'ACar_DEFAULT_C::UseCarBounce' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, UseCarAlarm) == 0x000C91, "Member 'ACar_DEFAULT_C::UseCarAlarm' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Headlight_Emissive_Brightness) == 0x000C94, "Member 'ACar_DEFAULT_C::Headlight_Emissive_Brightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, IsCarAlarmEnabledInitialized) == 0x000C98, "Member 'ACar_DEFAULT_C::IsCarAlarmEnabledInitialized' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, DebugWind) == 0x000C99, "Member 'ACar_DEFAULT_C::DebugWind' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OriginalMaterials) == 0x000CA0, "Member 'ACar_DEFAULT_C::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, IntenseWindMaterialsForPreview) == 0x000CB0, "Member 'ACar_DEFAULT_C::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Debug_TempMaterial) == 0x000CC0, "Member 'ACar_DEFAULT_C::Debug_TempMaterial' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Debug_Wind_Intensity) == 0x000CC8, "Member 'ACar_DEFAULT_C::Debug_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Wind_Intensity_Debug_Mesh) == 0x000CD0, "Member 'ACar_DEFAULT_C::Wind_Intensity_Debug_Mesh' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CanDropOilDecal) == 0x000CD8, "Member 'ACar_DEFAULT_C::CanDropOilDecal' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Wind_Yaw_Rotation) == 0x000CDC, "Member 'ACar_DEFAULT_C::Wind_Yaw_Rotation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Taillight1) == 0x000CE0, "Member 'ACar_DEFAULT_C::Taillight1' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Taillight2) == 0x000CE8, "Member 'ACar_DEFAULT_C::Taillight2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TailLightBrightness) == 0x000CF0, "Member 'ACar_DEFAULT_C::TailLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TailLightsExist) == 0x000CF4, "Member 'ACar_DEFAULT_C::TailLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HeadLightsExist) == 0x000CF5, "Member 'ACar_DEFAULT_C::HeadLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight2) == 0x000CF8, "Member 'ACar_DEFAULT_C::HLight2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HeadLightLightBrightness) == 0x000D00, "Member 'ACar_DEFAULT_C::HeadLightLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TLight1SocketLocation) == 0x000D04, "Member 'ACar_DEFAULT_C::TLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TLight2SocketLocation) == 0x000D10, "Member 'ACar_DEFAULT_C::TLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Bounce_Offset) == 0x000D1C, "Member 'ACar_DEFAULT_C::Bounce_Offset' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Hlight2_Minus_impact_bounce_light_location) == 0x000D28, "Member 'ACar_DEFAULT_C::Hlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Tlight2_Minus_impact_bounce_light_location) == 0x000D34, "Member 'ACar_DEFAULT_C::Tlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Car_Currently_Bouncing_From_Jump) == 0x000D40, "Member 'ACar_DEFAULT_C::Car_Currently_Bouncing_From_Jump' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Hlight1_Minus_impact_bounce_light_location) == 0x000D44, "Member 'ACar_DEFAULT_C::Hlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Tlight1_Minus_impact_bounce_light_location) == 0x000D50, "Member 'ACar_DEFAULT_C::Tlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Randomly_start_with_some_cars_lights_on) == 0x000D5C, "Member 'ACar_DEFAULT_C::Randomly_start_with_some_cars_lights_on' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Percentage_chance_of_lights_being_left_off) == 0x000D60, "Member 'ACar_DEFAULT_C::Percentage_chance_of_lights_being_left_off' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Final_Random_Light_Intensity_Variance) == 0x000D64, "Member 'ACar_DEFAULT_C::Final_Random_Light_Intensity_Variance' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, This_Car_s_Lights_Have_Been_Enabled) == 0x000D68, "Member 'ACar_DEFAULT_C::This_Car_s_Lights_Have_Been_Enabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TurnHeadLightsOn) == 0x000D69, "Member 'ACar_DEFAULT_C::TurnHeadLightsOn' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TimeSinceLastJumpSound) == 0x000D6C, "Member 'ACar_DEFAULT_C::TimeSinceLastJumpSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, MinTimeBetweenJumpSound) == 0x000D70, "Member 'ACar_DEFAULT_C::MinTimeBetweenJumpSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OnPlayDeathEffects) == 0x000D78, "Member 'ACar_DEFAULT_C::OnPlayDeathEffects' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CurrentLightRuntimeIntensity) == 0x000D88, "Member 'ACar_DEFAULT_C::CurrentLightRuntimeIntensity' has a wrong offset!");

}

