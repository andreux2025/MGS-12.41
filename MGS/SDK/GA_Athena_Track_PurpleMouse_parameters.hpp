#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Track_PurpleMouse

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_Track_PurpleMouse.GA_Athena_Track_PurpleMouse_C.ExecuteUbergraph_GA_Athena_Track_PurpleMouse
// 0x0278 (0x0278 - 0x0000)
struct GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x00E8(0x0040)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x0138(0x0028)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0178(0x00B0)()
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse) == 0x000008, "Wrong alignment on GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse");
static_assert(sizeof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse) == 0x000278, "Wrong size on GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, EntryPoint) == 0x000000, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, Temp_struct_Variable) == 0x000008, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0000C8, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_GetActorInfo_ReturnValue) == 0x0000E8, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000128, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x000138, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000160, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, CallFunc_K2_CommitAbility_ReturnValue) == 0x000170, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_Event_bWasCancelled) == 0x000171, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_Payload) == 0x000178, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_DamagedActor) == 0x000228, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_Damage) == 0x000230, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_InstigatedBy) == 0x000238, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_DamageCauser) == 0x000240, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_HitLocation) == 0x000248, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_FHitComponent) == 0x000258, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_BoneName) == 0x000260, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse, K2Node_CustomEvent_Momentum) == 0x000268, "Member 'GA_Athena_Track_PurpleMouse_C_ExecuteUbergraph_GA_Athena_Track_PurpleMouse::K2Node_CustomEvent_Momentum' has a wrong offset!");

// Function GA_Athena_Track_PurpleMouse.GA_Athena_Track_PurpleMouse_C.OnPlayerDeath
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_Track_PurpleMouse_C_OnPlayerDeath final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath) == 0x000008, "Wrong alignment on GA_Athena_Track_PurpleMouse_C_OnPlayerDeath");
static_assert(sizeof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath) == 0x000050, "Wrong size on GA_Athena_Track_PurpleMouse_C_OnPlayerDeath");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, DamagedActor) == 0x000000, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::DamagedActor' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, Damage) == 0x000008, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::Damage' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, InstigatedBy) == 0x000010, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, DamageCauser) == 0x000018, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, HitLocation) == 0x000020, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, FHitComponent) == 0x000030, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::FHitComponent' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, BoneName) == 0x000038, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::BoneName' has a wrong offset!");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_OnPlayerDeath, Momentum) == 0x000040, "Member 'GA_Athena_Track_PurpleMouse_C_OnPlayerDeath::Momentum' has a wrong offset!");

// Function GA_Athena_Track_PurpleMouse.GA_Athena_Track_PurpleMouse_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_Track_PurpleMouse_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_Track_PurpleMouse.GA_Athena_Track_PurpleMouse_C.EventReceived_739900834D974D726220CC9B70F2219C
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C) == 0x000008, "Wrong alignment on GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C");
static_assert(sizeof(GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C) == 0x0000B0, "Wrong size on GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C");
static_assert(offsetof(GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C, Payload) == 0x000000, "Member 'GA_Athena_Track_PurpleMouse_C_EventReceived_739900834D974D726220CC9B70F2219C::Payload' has a wrong offset!");

}

