#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonutChallengeScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function DonutChallengeScreen.DonutChallengeScreen_C.ExecuteUbergraph_DonutChallengeScreen
// 0x0170 (0x0170 - 0x0000)
struct DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_4;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyEUText_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_3;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInOwnsBattlePass;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowMessage;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InChallengeNum;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0158(0x0018)(ConstParm)
};
static_assert(alignof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen");
static_assert(sizeof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen) == 0x000170, "Wrong size on DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, EntryPoint) == 0x000000, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, Temp_bool_Variable) == 0x000004, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, Temp_byte_Variable) == 0x000006, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, Temp_byte_Variable_1) == 0x000007, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, Temp_int_Variable) == 0x000008, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_ComponentBoundEvent_Button_4) == 0x000028, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_ShouldApplyEUText_ReturnValue) == 0x000030, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_ShouldApplyEUText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000048, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_ComponentBoundEvent_Button_3) == 0x000050, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_ComponentBoundEvent_Button_2) == 0x000058, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000068, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000070, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000078, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000080, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, Temp_bool_Variable_1) == 0x000088, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_ComponentBoundEvent_Button_1) == 0x000090, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_ComponentBoundEvent_Button) == 0x000098, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_Event_bInOwnsBattlePass) == 0x0000A0, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_Event_bInOwnsBattlePass' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_SpawnSound2D_ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_Event_bShowMessage) == 0x0000B0, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_Event_bShowMessage' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_Event_InChallengeNum) == 0x0000B4, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_Event_InChallengeNum' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000B8, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_Select_Default) == 0x000108, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_MakeArray_Array) == 0x000110, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_Format_ReturnValue) == 0x000120, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_PlayAnimation_ReturnValue_3) == 0x000140, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000148, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000150, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen, K2Node_Select_Default_1) == 0x000158, "Member 'DonutChallengeScreen_C_ExecuteUbergraph_DonutChallengeScreen::K2Node_Select_Default_1' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.ShowSkinUnlockMessage
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_ShowSkinUnlockMessage final
{
public:
	bool                                          bShowMessage;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InChallengeNum;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_ShowSkinUnlockMessage) == 0x000004, "Wrong alignment on DonutChallengeScreen_C_ShowSkinUnlockMessage");
static_assert(sizeof(DonutChallengeScreen_C_ShowSkinUnlockMessage) == 0x000008, "Wrong size on DonutChallengeScreen_C_ShowSkinUnlockMessage");
static_assert(offsetof(DonutChallengeScreen_C_ShowSkinUnlockMessage, bShowMessage) == 0x000000, "Member 'DonutChallengeScreen_C_ShowSkinUnlockMessage::bShowMessage' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_ShowSkinUnlockMessage, InChallengeNum) == 0x000004, "Member 'DonutChallengeScreen_C_ShowSkinUnlockMessage::InChallengeNum' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.UpdateBPOwnedStateVisuals
// 0x0001 (0x0001 - 0x0000)
struct DonutChallengeScreen_C_UpdateBPOwnedStateVisuals final
{
public:
	bool                                          bInOwnsBattlePass;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DonutChallengeScreen_C_UpdateBPOwnedStateVisuals) == 0x000001, "Wrong alignment on DonutChallengeScreen_C_UpdateBPOwnedStateVisuals");
static_assert(sizeof(DonutChallengeScreen_C_UpdateBPOwnedStateVisuals) == 0x000001, "Wrong size on DonutChallengeScreen_C_UpdateBPOwnedStateVisuals");
static_assert(offsetof(DonutChallengeScreen_C_UpdateBPOwnedStateVisuals, bInOwnsBattlePass) == 0x000000, "Member 'DonutChallengeScreen_C_UpdateBPOwnedStateVisuals::bInOwnsBattlePass' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DonutChallengeScreen_C_BndEvt__IconTextButton_1_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DonutChallengeScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DonutChallengeScreen_C_BndEvt__IconTextButton_155_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DonutChallengeScreen_C_BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DonutChallengeScreen_C_BndEvt__Button_BattlepassUpsell_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.SetPasswordText
// 0x0018 (0x0018 - 0x0000)
struct DonutChallengeScreen_C_SetPasswordText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(DonutChallengeScreen_C_SetPasswordText) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_SetPasswordText");
static_assert(sizeof(DonutChallengeScreen_C_SetPasswordText) == 0x000018, "Wrong size on DonutChallengeScreen_C_SetPasswordText");
static_assert(offsetof(DonutChallengeScreen_C_SetPasswordText, Text) == 0x000000, "Member 'DonutChallengeScreen_C_SetPasswordText::Text' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.On_Border_Minimized_MouseButtonDown_0
// 0x0218 (0x0218 - 0x0000)
struct DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0");
static_assert(sizeof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0) == 0x000218, "Wrong size on DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'DonutChallengeScreen_C_On_Border_Minimized_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.On_Border_WindowMinimize_MouseButtonDown_0
// 0x0218 (0x0218 - 0x0000)
struct DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0");
static_assert(sizeof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0) == 0x000218, "Wrong size on DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.On_Border_BattlepassUpsellMinimized_MouseButtonDown_0
// 0x0218 (0x0218 - 0x0000)
struct DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0");
static_assert(sizeof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0) == 0x000218, "Wrong size on DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'DonutChallengeScreen_C_On_Border_BattlepassUpsellMinimized_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.SetBattlepassState
// 0x0004 (0x0004 - 0x0000)
struct DonutChallengeScreen_C_SetBattlepassState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeScreen_C_SetBattlepassState) == 0x000001, "Wrong alignment on DonutChallengeScreen_C_SetBattlepassState");
static_assert(sizeof(DonutChallengeScreen_C_SetBattlepassState) == 0x000004, "Wrong size on DonutChallengeScreen_C_SetBattlepassState");
static_assert(offsetof(DonutChallengeScreen_C_SetBattlepassState, Temp_bool_Variable) == 0x000000, "Member 'DonutChallengeScreen_C_SetBattlepassState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_SetBattlepassState, Temp_byte_Variable) == 0x000001, "Member 'DonutChallengeScreen_C_SetBattlepassState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_SetBattlepassState, Temp_byte_Variable_1) == 0x000002, "Member 'DonutChallengeScreen_C_SetBattlepassState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_SetBattlepassState, K2Node_Select_Default) == 0x000003, "Member 'DonutChallengeScreen_C_SetBattlepassState::K2Node_Select_Default' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.On_Border_WindowMinimize_1_MouseButtonDown_0
// 0x0218 (0x0218 - 0x0000)
struct DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0");
static_assert(sizeof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0) == 0x000218, "Wrong size on DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'DonutChallengeScreen_C_On_Border_WindowMinimize_1_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function DonutChallengeScreen.DonutChallengeScreen_C.OnMouseButtonUp_0
// 0x0218 (0x0218 - 0x0000)
struct DonutChallengeScreen_C_OnMouseButtonUp_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(DonutChallengeScreen_C_OnMouseButtonUp_0) == 0x000008, "Wrong alignment on DonutChallengeScreen_C_OnMouseButtonUp_0");
static_assert(sizeof(DonutChallengeScreen_C_OnMouseButtonUp_0) == 0x000218, "Wrong size on DonutChallengeScreen_C_OnMouseButtonUp_0");
static_assert(offsetof(DonutChallengeScreen_C_OnMouseButtonUp_0, MyGeometry) == 0x000000, "Member 'DonutChallengeScreen_C_OnMouseButtonUp_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_OnMouseButtonUp_0, MouseEvent) == 0x000038, "Member 'DonutChallengeScreen_C_OnMouseButtonUp_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_OnMouseButtonUp_0, ReturnValue) == 0x0000A8, "Member 'DonutChallengeScreen_C_OnMouseButtonUp_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeScreen_C_OnMouseButtonUp_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'DonutChallengeScreen_C_OnMouseButtonUp_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

