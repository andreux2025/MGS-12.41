#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialHenchmenViewMoreButton

#include "Basic.hpp"

#include "SpatialHenchmenViewMoreButton_classes.hpp"
#include "SpatialHenchmenViewMoreButton_parameters.hpp"


namespace SDK
{

// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USpatialHenchmenViewMoreButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "PreConstruct");

	Params::SpatialHenchmenViewMoreButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USpatialHenchmenViewMoreButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.SetMissionStateVisuals
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMissionState                           MissionState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpatialHenchmenViewMoreButton_C::SetMissionStateVisuals(EMissionState MissionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "SetMissionStateVisuals");

	Params::SpatialHenchmenViewMoreButton_C_SetMissionStateVisuals Parms{};

	Parms.MissionState = MissionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USpatialHenchmenViewMoreButton_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "OnMouseLeave");

	Params::SpatialHenchmenViewMoreButton_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USpatialHenchmenViewMoreButton_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "OnMouseEnter");

	Params::SpatialHenchmenViewMoreButton_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void USpatialHenchmenViewMoreButton_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "OnRemovedFromFocusPath");

	Params::SpatialHenchmenViewMoreButton_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void USpatialHenchmenViewMoreButton_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "OnAddedToFocusPath");

	Params::SpatialHenchmenViewMoreButton_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialHenchmenViewMoreButton.SpatialHenchmenViewMoreButton_C.ExecuteUbergraph_SpatialHenchmenViewMoreButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpatialHenchmenViewMoreButton_C::ExecuteUbergraph_SpatialHenchmenViewMoreButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialHenchmenViewMoreButton_C", "ExecuteUbergraph_SpatialHenchmenViewMoreButton");

	Params::SpatialHenchmenViewMoreButton_C_ExecuteUbergraph_SpatialHenchmenViewMoreButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

