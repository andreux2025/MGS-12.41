#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_LRG_Henchman_Tough_FaceAcc_CtrlRig

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass M_LRG_Henchman_Tough_FaceAcc_CtrlRig.M_LRG_Henchman_Tough_FaceAcc_CtrlRig_C
// 0x0A30 (0x0D70 - 0x0340)
class UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C final : public UControlRig
{
public:
	struct FRigUnit_BeginExecution                BeginExecution;                                    // 0x0340(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone                       AimBone;                                           // 0x0370(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform;                                  // 0x0460(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_0;                                // 0x04D0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform;                           // 0x0540(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_0;                         // 0x05B0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_1;                                // 0x0620(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_2;                                // 0x0690(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformInverse          MathTransformInverse;                              // 0x0700(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformInverse          MathTransformInverse_0;                            // 0x0780(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformMul              MathTransformMul;                                  // 0x0800(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformMul              MathTransformMul_0;                                // 0x08B0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMin                  MathFloatMin;                                      // 0x0960(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMax                  MathFloatMax;                                      // 0x0990(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AddBoneTransform              AddBoneTransform;                                  // 0x09C0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetInitialBoneTransform       GetInitialBoneTransform_1;                         // 0x0A30(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_GetBoneTransform              GetBoneTransform_1_0;                              // 0x0AA0(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformInverse          MathTransformInverse_0_0;                          // 0x0B10(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathTransformMul              MathTransformMul_1;                                // 0x0B90(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMin                  MathFloatMin_0;                                    // 0x0C40(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_AddBoneTransform              AddBoneTransform_0;                                // 0x0C70(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMax                  MathFloatMax_0;                                    // 0x0CE0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMul                  MathFloatMul;                                      // 0x0D10(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRigUnit_MathFloatMul                  MathFloatMul_0;                                    // 0x0D40(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_LRG_Henchman_Tough_FaceAcc_CtrlRig_C">();
	}
	static class UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C>();
	}
};
static_assert(alignof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C) == 0x000010, "Wrong alignment on UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C");
static_assert(sizeof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C) == 0x000D70, "Wrong size on UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, BeginExecution) == 0x000340, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::BeginExecution' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, AimBone) == 0x000370, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::AimBone' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetBoneTransform) == 0x000460, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetBoneTransform' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetBoneTransform_0) == 0x0004D0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetInitialBoneTransform) == 0x000540, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetInitialBoneTransform' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetInitialBoneTransform_0) == 0x0005B0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetInitialBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetBoneTransform_1) == 0x000620, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetBoneTransform_2) == 0x000690, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetBoneTransform_2' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformInverse) == 0x000700, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformInverse' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformInverse_0) == 0x000780, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformInverse_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformMul) == 0x000800, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformMul' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformMul_0) == 0x0008B0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformMul_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMin) == 0x000960, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMin' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMax) == 0x000990, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMax' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, AddBoneTransform) == 0x0009C0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::AddBoneTransform' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetInitialBoneTransform_1) == 0x000A30, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetInitialBoneTransform_1' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, GetBoneTransform_1_0) == 0x000AA0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::GetBoneTransform_1_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformInverse_0_0) == 0x000B10, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformInverse_0_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathTransformMul_1) == 0x000B90, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathTransformMul_1' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMin_0) == 0x000C40, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMin_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, AddBoneTransform_0) == 0x000C70, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::AddBoneTransform_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMax_0) == 0x000CE0, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMax_0' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMul) == 0x000D10, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMul' has a wrong offset!");
static_assert(offsetof(UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C, MathFloatMul_0) == 0x000D40, "Member 'UM_LRG_Henchman_Tough_FaceAcc_CtrlRig_C::MathFloatMul_0' has a wrong offset!");

}

