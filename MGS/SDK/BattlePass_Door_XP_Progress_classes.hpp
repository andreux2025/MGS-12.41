#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePass_Door_XP_Progress

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePass_Door_XP_Progress.BattlePass_Door_XP_Progress_C
// 0x0028 (0x0258 - 0x0230)
class UBattlePass_Door_XP_Progress_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image;                                             // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_40;                                          // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       NextLevelText;                                     // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       XpAmount;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BattlePass_Door_XP_Progress(int32 EntryPoint);
	void InitXpValues(int32 CurrentXp, int32 XpToLevel, int32 NextLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePass_Door_XP_Progress_C">();
	}
	static class UBattlePass_Door_XP_Progress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePass_Door_XP_Progress_C>();
	}
};
static_assert(alignof(UBattlePass_Door_XP_Progress_C) == 0x000008, "Wrong alignment on UBattlePass_Door_XP_Progress_C");
static_assert(sizeof(UBattlePass_Door_XP_Progress_C) == 0x000258, "Wrong size on UBattlePass_Door_XP_Progress_C");
static_assert(offsetof(UBattlePass_Door_XP_Progress_C, UberGraphFrame) == 0x000230, "Member 'UBattlePass_Door_XP_Progress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_XP_Progress_C, Image) == 0x000238, "Member 'UBattlePass_Door_XP_Progress_C::Image' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_XP_Progress_C, Image_40) == 0x000240, "Member 'UBattlePass_Door_XP_Progress_C::Image_40' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_XP_Progress_C, NextLevelText) == 0x000248, "Member 'UBattlePass_Door_XP_Progress_C::NextLevelText' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_XP_Progress_C, XpAmount) == 0x000250, "Member 'UBattlePass_Door_XP_Progress_C::XpAmount' has a wrong offset!");

}

