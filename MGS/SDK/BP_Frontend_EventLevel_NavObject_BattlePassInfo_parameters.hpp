#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Frontend_EventLevel_NavObject_BattlePassInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentLevel;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentXp;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_XpToLevel;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortItemDefinition*              K2Node_Event_NextReward;                           // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x0030(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePass_Door_XP_Progress_C*         K2Node_DynamicCast_AsBattle_Pass_Door_XP_Progress; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePass_Door_LeftPanel_C*           K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel;  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_Event_PlayerController;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPurchasedSeasonBook_ReturnValue;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo) == 0x0000F8, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, EntryPoint) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, Temp_byte_Variable) == 0x000004, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, Temp_byte_Variable_1) == 0x000018, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_CurrentLevel) == 0x00001C, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_CurrentLevel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_CurrentXp) == 0x000020, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_CurrentXp' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_XpToLevel) == 0x000024, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_XpToLevel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_NextReward) == 0x000028, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_NextReward' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_GetLargePreviewImage_ReturnValue) == 0x000030, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00005C, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000068, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, Temp_bool_Variable) == 0x000070, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_AsBattle_Pass_Door_XP_Progress) == 0x000078, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_AsBattle_Pass_Door_XP_Progress' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, Temp_object_Variable) == 0x000088, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000090, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_AsTexture) == 0x000098, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel) == 0x0000A8, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_PlayerController) == 0x0000B8, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Event_bEnabled) == 0x0000C0, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x0000C8, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_Select_Default) == 0x0000D0, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_CustomEvent_Loaded) == 0x0000D8, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, CallFunc_HasPurchasedSeasonBook_ReturnValue) == 0x0000E0, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::CallFunc_HasPurchasedSeasonBook_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E4, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_ExecuteUbergraph_BP_Frontend_EventLevel_NavObject_BattlePassInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.OnUpdateWidgetVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility) == 0x000010, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility, PlayerController) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility, bEnabled) == 0x000008, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnUpdateWidgetVisibility::bEnabled' has a wrong offset!");

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.InitForBattlePassInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo final
{
public:
	int32                                         CurrentLevel;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXp;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XpToLevel;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              NextReward;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo) == 0x000018, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo, CurrentLevel) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo::CurrentLevel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo, CurrentXp) == 0x000004, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo::CurrentXp' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo, XpToLevel) == 0x000008, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo::XpToLevel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo, NextReward) == 0x000010, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_InitForBattlePassInfo::NextReward' has a wrong offset!");

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.OnLoaded_5B4B515147509217750E62A2CDE15CEF
// 0x0008 (0x0008 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF) == 0x000008, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF, Loaded) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_OnLoaded_5B4B515147509217750E62A2CDE15CEF::Loaded' has a wrong offset!");

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript) == 0x000018, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_Frontend_EventLevel_NavObject_BattlePassInfo.BP_Frontend_EventLevel_NavObject_BattlePassInfo_C.SetBattlePassVisuals
// 0x0020 (0x0020 - 0x0000)
struct BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals final
{
public:
	bool                                          Purchased;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePass_Door_LeftPanel_C*           K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals) == 0x000008, "Wrong alignment on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals");
static_assert(sizeof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals) == 0x000020, "Wrong size on BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals, Purchased) == 0x000000, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals::Purchased' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals, K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel) == 0x000010, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals::K2Node_DynamicCast_AsBattle_Pass_Door_Left_Panel' has a wrong offset!");
static_assert(offsetof(BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Frontend_EventLevel_NavObject_BattlePassInfo_C_SetBattlePassVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

