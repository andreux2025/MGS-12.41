#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_FlopperSpawn_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_FlopperSpawn_Parent.BGA_Athena_FlopperSpawn_Parent_C
// 0x0280 (0x0A08 - 0x0788)
class ABGA_Athena_FlopperSpawn_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          OverlapVolume;                                     // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MaxUses;                                       // 0x07A0(0x0020)(Edit, BlueprintVisible)
	struct FScalableFloat                         Row_MinUses;                                       // 0x07C0(0x0020)(Edit, BlueprintVisible)
	int32                                         Uses;                                              // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterHideLifeSpan;                                 // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemsToDrop;                                       // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Spawn;                                          // 0x07F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_SpawnChanceMax;                                // 0x07F8(0x0020)(Edit, BlueprintVisible)
	bool                                          IsWorldSpawner;                                    // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_SpawnChanceMin;                                // 0x0820(0x0020)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class FName>        Map_TagToLoot_HighTier;                            // 0x0840(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          AlreadySpawnChecked;                               // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FName>        Map_TagToLoot_DefaultTier;                         // 0x0898(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FName>        Map_TagToLoot_ToUse;                               // 0x08E8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          HasTypeTag;                                        // 0x0938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                  LocationTags;                                      // 0x0950(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MaxUses;                                           // 0x0970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x0971(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972[0x6];                                      // 0x0972(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_AddedBobChanceOnOverlapMin;                    // 0x0978(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_AddedBobChanceOnOverlapMax;                    // 0x0998(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPickup*                            SpawnedItem;                                       // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_HighTierPoolSpawn;                           // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  QuestTag_DefaultSpawn;                             // 0x09C8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  QuestTag_WorldSpawn;                               // 0x09E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BGA_Athena_FlopperSpawn_Parent(int32 EntryPoint);
	void PlaySpawnItemHightier(const struct FVector& Location);
	void BndEvt__OverlapVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HideAndKill();
	void ReceiveBeginPlay();
	void SpawnItem(class AActor* Target, bool Hooked, class USceneComponent* HookComponent, const struct FVector& SpawnLoc, class AActor* Player, float ItemSpawnDelay, bool CaughtWithFishingRod, bool CaughtWithHappyGhost, class AActor* ItemUsedToFish);
	void OnReady_5804F209455A50B3EE64E3AED087DE64(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void UserConstructionScript();
	void SetBalanceValues();
	void HandleUseTracking();
	void ShouldKill();
	void GetLootTier();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_FlopperSpawn_Parent_C">();
	}
	static class ABGA_Athena_FlopperSpawn_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_FlopperSpawn_Parent_C>();
	}
};
static_assert(alignof(ABGA_Athena_FlopperSpawn_Parent_C) == 0x000008, "Wrong alignment on ABGA_Athena_FlopperSpawn_Parent_C");
static_assert(sizeof(ABGA_Athena_FlopperSpawn_Parent_C) == 0x000A08, "Wrong size on ABGA_Athena_FlopperSpawn_Parent_C");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, UberGraphFrame) == 0x000788, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, OverlapVolume) == 0x000790, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::OverlapVolume' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, DefaultSceneRoot) == 0x000798, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_MaxUses) == 0x0007A0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_MaxUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_MinUses) == 0x0007C0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_MinUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Uses) == 0x0007E0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Uses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, AfterHideLifeSpan) == 0x0007E4, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::AfterHideLifeSpan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, ItemsToDrop) == 0x0007E8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::ItemsToDrop' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, GC_Spawn) == 0x0007F0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::GC_Spawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_SpawnChanceMax) == 0x0007F8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_SpawnChanceMax' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, IsWorldSpawner) == 0x000818, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::IsWorldSpawner' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_SpawnChanceMin) == 0x000820, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_SpawnChanceMin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Map_TagToLoot_HighTier) == 0x000840, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Map_TagToLoot_HighTier' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, AlreadySpawnChecked) == 0x000890, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::AlreadySpawnChecked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Map_TagToLoot_DefaultTier) == 0x000898, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Map_TagToLoot_DefaultTier' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Map_TagToLoot_ToUse) == 0x0008E8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Map_TagToLoot_ToUse' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, HasTypeTag) == 0x000938, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::HasTypeTag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, ObjectTypes) == 0x000940, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, LocationTags) == 0x000950, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::LocationTags' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, MaxUses) == 0x000970, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::MaxUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Debug) == 0x000971, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Debug' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_AddedBobChanceOnOverlapMin) == 0x000978, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_AddedBobChanceOnOverlapMin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_AddedBobChanceOnOverlapMax) == 0x000998, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_AddedBobChanceOnOverlapMax' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, SpawnedItem) == 0x0009B8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::SpawnedItem' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Sound_HighTierPoolSpawn) == 0x0009C0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Sound_HighTierPoolSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, QuestTag_DefaultSpawn) == 0x0009C8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::QuestTag_DefaultSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, QuestTag_WorldSpawn) == 0x0009E8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::QuestTag_WorldSpawn' has a wrong offset!");

}

