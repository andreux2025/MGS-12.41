#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengePageEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.ExecuteUbergraph_AthenaChallengePageEntry
// 0x01E0 (0x01E0 - 0x0000)
struct AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bIsInGame;                            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_2;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLastEntry;                         // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0064(0x0008)(NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0070(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00A8(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0118(0x0070)(ConstParm)
	bool                                          K2Node_Event_bIsCompleted;                         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsLocked;                            // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_3;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_4;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_8;                           // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry");
static_assert(sizeof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry) == 0x0001E0, "Wrong size on AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, EntryPoint) == 0x000000, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_IsUsingTouch_ReturnValue) == 0x000004, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable) == 0x000005, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable) == 0x000006, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_1) == 0x000007, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_1) == 0x000008, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_2) == 0x000009, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_3) == 0x00000A, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_2) == 0x00000B, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_3) == 0x00000C, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_4) == 0x00000D, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_5) == 0x00000E, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_float_Variable) == 0x000010, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_float_Variable_1) == 0x000014, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_6) == 0x000018, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_4) == 0x000019, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_5) == 0x00001A, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_bIsInGame) == 0x00002C, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_bIsInGame' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000030, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default) == 0x000034, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000038, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_MakeLiteralFloat_ReturnValue_2) == 0x00003C, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_MakeLiteralFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_MakeStruct_Margin) == 0x000040, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_MakeStruct_Margin_1) == 0x000050, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_6) == 0x000060, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_byte_Variable_7) == 0x000061, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_bIsLastEntry) == 0x000062, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_bIsLastEntry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_InFocusEvent) == 0x000064, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_1) == 0x00006C, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_MyGeometry) == 0x000070, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_MouseEvent_1) == 0x0000A8, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_MouseEvent) == 0x000118, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_bIsCompleted) == 0x000188, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_bIsCompleted' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Event_bIsLocked) == 0x000189, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Event_bIsLocked' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_2) == 0x000190, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_PlayAnimation_ReturnValue) == 0x000198, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_3) == 0x0001A0, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_4) == 0x0001A8, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001B0, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001B8, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_7) == 0x0001C0, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_5) == 0x0001C1, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_6) == 0x0001C4, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_7) == 0x0001C8, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, Temp_bool_Variable_8) == 0x0001C9, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, K2Node_Select_Default_8) == 0x0001CC, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry, CallFunc_IsUsingTouch_ReturnValue_1) == 0x0001DC, "Member 'AthenaChallengePageEntry_C_ExecuteUbergraph_AthenaChallengePageEntry::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnSetState
// 0x0002 (0x0002 - 0x0000)
struct AthenaChallengePageEntry_C_OnSetState final
{
public:
	bool                                          bIsCompleted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnSetState) == 0x000001, "Wrong alignment on AthenaChallengePageEntry_C_OnSetState");
static_assert(sizeof(AthenaChallengePageEntry_C_OnSetState) == 0x000002, "Wrong size on AthenaChallengePageEntry_C_OnSetState");
static_assert(offsetof(AthenaChallengePageEntry_C_OnSetState, bIsCompleted) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnSetState::bIsCompleted' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnSetState, bIsLocked) == 0x000001, "Member 'AthenaChallengePageEntry_C_OnSetState::bIsLocked' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct AthenaChallengePageEntry_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_OnMouseLeave");
static_assert(sizeof(AthenaChallengePageEntry_C_OnMouseLeave) == 0x000070, "Wrong size on AthenaChallengePageEntry_C_OnMouseLeave");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct AthenaChallengePageEntry_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_OnMouseEnter");
static_assert(sizeof(AthenaChallengePageEntry_C_OnMouseEnter) == 0x0000A8, "Wrong size on AthenaChallengePageEntry_C_OnMouseEnter");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'AthenaChallengePageEntry_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct AthenaChallengePageEntry_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnFocusLost) == 0x000004, "Wrong alignment on AthenaChallengePageEntry_C_OnFocusLost");
static_assert(sizeof(AthenaChallengePageEntry_C_OnFocusLost) == 0x000008, "Wrong size on AthenaChallengePageEntry_C_OnFocusLost");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.BP_OnIsLastEntrySet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengePageEntry_C_BP_OnIsLastEntrySet final
{
public:
	bool                                          bIsLastEntry;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageEntry_C_BP_OnIsLastEntrySet) == 0x000001, "Wrong alignment on AthenaChallengePageEntry_C_BP_OnIsLastEntrySet");
static_assert(sizeof(AthenaChallengePageEntry_C_BP_OnIsLastEntrySet) == 0x000001, "Wrong size on AthenaChallengePageEntry_C_BP_OnIsLastEntrySet");
static_assert(offsetof(AthenaChallengePageEntry_C_BP_OnIsLastEntrySet, bIsLastEntry) == 0x000000, "Member 'AthenaChallengePageEntry_C_BP_OnIsLastEntrySet::bIsLastEntry' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.BP_OnIsInGameSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengePageEntry_C_BP_OnIsInGameSet final
{
public:
	bool                                          bIsInGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaChallengePageEntry_C_BP_OnIsInGameSet) == 0x000001, "Wrong alignment on AthenaChallengePageEntry_C_BP_OnIsInGameSet");
static_assert(sizeof(AthenaChallengePageEntry_C_BP_OnIsInGameSet) == 0x000001, "Wrong size on AthenaChallengePageEntry_C_BP_OnIsInGameSet");
static_assert(offsetof(AthenaChallengePageEntry_C_BP_OnIsInGameSet, bIsInGame) == 0x000000, "Member 'AthenaChallengePageEntry_C_BP_OnIsInGameSet::bIsInGame' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnFocusReceived
// 0x01C8 (0x01C8 - 0x0000)
struct AthenaChallengePageEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0108(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_OnFocusReceived");
static_assert(sizeof(AthenaChallengePageEntry_C_OnFocusReceived) == 0x0001C8, "Wrong size on AthenaChallengePageEntry_C_OnFocusReceived");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, Temp_bool_Variable) == 0x0000F8, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, CallFunc_IsUsingTouch_ReturnValue) == 0x0000F9, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, K2Node_Select_Default) == 0x000100, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000108, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnFocusReceived, CallFunc_PlayAnimation_ReturnValue) == 0x0001C0, "Member 'AthenaChallengePageEntry_C_OnFocusReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct AthenaChallengePageEntry_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(AthenaChallengePageEntry_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_OnMouseButtonDown");
static_assert(sizeof(AthenaChallengePageEntry_C_OnMouseButtonDown) == 0x000220, "Wrong size on AthenaChallengePageEntry_C_OnMouseButtonDown");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'AthenaChallengePageEntry_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'AthenaChallengePageEntry_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonDown, CallFunc_IsUsingTouch_ReturnValue) == 0x000160, "Member 'AthenaChallengePageEntry_C_OnMouseButtonDown::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'AthenaChallengePageEntry_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaChallengePageEntry.AthenaChallengePageEntry_C.OnMouseButtonUp
// 0x0230 (0x0230 - 0x0000)
struct AthenaChallengePageEntry_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x5];                                      // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengePageEntry_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on AthenaChallengePageEntry_C_OnMouseButtonUp");
static_assert(sizeof(AthenaChallengePageEntry_C_OnMouseButtonUp) == 0x000230, "Wrong size on AthenaChallengePageEntry_C_OnMouseButtonUp");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, Temp_bool_Variable) == 0x000160, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, CallFunc_IsUsingTouch_ReturnValue) == 0x000161, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, CallFunc_BooleanAND_ReturnValue) == 0x000162, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, K2Node_Select_Default) == 0x000220, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengePageEntry_C_OnMouseButtonUp, CallFunc_PlayAnimation_ReturnValue) == 0x000228, "Member 'AthenaChallengePageEntry_C_OnMouseButtonUp::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

