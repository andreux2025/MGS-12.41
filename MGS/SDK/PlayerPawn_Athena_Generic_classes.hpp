#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena_Generic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PlayerPawn_Athena_Generic_Parent_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena_Generic.PlayerPawn_Athena_Generic_C
// 0x0220 (0x32A0 - 0x3080)
class APlayerPawn_Athena_Generic_C : public APlayerPawn_Athena_Generic_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_Generic_C;        // 0x3080(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Effect_WaterInteraction_FX;                        // 0x3088(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AnimTrailPS;                                       // 0x3090(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnDustLandFX_;                               // 0x3098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInWater;                                         // 0x3099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309A[0x2];                                     // 0x309A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RunWalkParticleRotation;                           // 0x309C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         WaterCounter;                                      // 0x30A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tick_Delta_Seconds;                                // 0x30AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_Impact;                               // 0x30B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_Destroyed;                            // 0x30B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_FullyCharged;                         // 0x30C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_StartRecharge;                        // 0x30C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BodyValid;                                         // 0x30D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BackpackValid;                                     // 0x30D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HatValid;                                          // 0x30D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FaceValid;                                         // 0x30D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CharmValid;                                        // 0x30D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadValid;                                         // 0x30D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D6[0x2];                                     // 0x30D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Effect_Player_LandedDust;                          // 0x30D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       TempArray;                                         // 0x30E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USceneComponent*                        Sound_Player_Hit;                                  // 0x30F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Effect_Player_Landed_WindVector_P;                 // 0x30F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpeechBubbleWidgetClass;                           // 0x3100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LastSpeechText;                                    // 0x3108(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UseAnimTrailsNotifies;                             // 0x3120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3121[0x3];                                     // 0x3121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_when_you_ll_be_able_to_splash_again;          // 0x3124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentWaterMeshActor;                             // 0x3128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             WaterTraceHitLocation;                             // 0x3130(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                StableVelocityVector;                              // 0x31BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerRunTemplate_Ground;                          // 0x31C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Ground;                         // 0x31D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerRunTemplate_Water;                           // 0x31D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Water;                          // 0x31E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Pawn_Charm_Skeletal_Mesh;                          // 0x31E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AnimTrailsPS_Ref;                                  // 0x31F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     WeaponMaterialOverride;                            // 0x31F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickWaterLevel;                                    // 0x3200(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3201[0x7];                                     // 0x3201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 WetnessDepthTexture;                               // 0x3208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterLevelMID;                                     // 0x3210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterDecayMID;                                     // 0x3218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Was_RTT_Enabled_Var_Set;                           // 0x3220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_RTT_Enabled;                                    // 0x3221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3222[0x2];                                     // 0x3222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartingMinCapsuleShadowVis;                       // 0x3224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShielded;                                        // 0x3228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3229[0x3];                                     // 0x3229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InstigatorCheckDistanceSqrd;                       // 0x322C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideDustActivateSpeed;                            // 0x3230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnSlideKickupFX_;                            // 0x3234(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3235[0x3];                                     // 0x3235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Effect_Player_ShieldActivate;                      // 0x3238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Effect_PLayer_ShieldBreak;                         // 0x3240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GhostMode;                                         // 0x3248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3249[0x7];                                     // 0x3249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     OverrideAnimTrail;                                 // 0x3250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             AnimNotify_Begin;                                  // 0x3258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnimNotify_End;                                    // 0x3268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USoundBase*                             Sound_Shield_Destroyed_2D;                         // 0x3278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_Destroyed_Crit_2D;                    // 0x3280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     AnimTrailFX;                                       // 0x3288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PlayDamageEffect;                                  // 0x3290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AnimNotify_Begin__DelegateSignature(bool bActive);
	void AnimNotify_End__DelegateSignature();
	void PlayDamageEffect__DelegateSignature(const struct FGameplayTagContainer& Damage_Tags, const struct FHitResult& Hit_Info, class AFortPawn* Instigated_By, class AActor* Damage_Causer);
	void ExecuteUbergraph_PlayerPawn_Athena_Generic(int32 EntryPoint);
	void GameplayCue_Loop_Shadow_Bomb(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Reapplied(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Destroyed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_PotionConsumed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_SpookyMist_Loop(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void AnimTrailsDisable();
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class UNiagaraSystem* NiagaraSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width, class UFXSystemComponent* OverrideParticleComp, class FName OverideFirstSocketName, class FName OverideSecondSocketName);
	void AnimTrailsNotify(bool bActive);
	void BindOnDestroyed();
	void CharacterDestroyed(class AActor* DestroyedActor);
	void Entered_WaterVolume();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveDestroyed();
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void FootStepRight();
	void FootStepLeft();
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnLanded(const struct FHitResult& Hit);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void MeleeSwingLeft_End();
	void MeleeSwingRight_End();
	void MeleeSwingLeft(bool First_Left);
	void MeleeSwingRight(bool First_Right);
	void UserConstructionScript();
	void Create_and_Duplicate_Effect_Skeletal_Meshes_Parent(EFortCustomPartType BodyType, class USkeletalMeshComponent*& DuplicatedSkeletalMeshComponent, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority);
	void SlaveAMeshToTheBody(class USkeletalMeshComponent* Mesh_0, class USkeletalMeshComponent* Master);
	void Create_and_Duplicate_Effect_Poseable_Skeletal_Mesh(EFortCustomPartType BodyType, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority, class UPoseableMeshComponent*& PoseableMesh);
	void DisableWaterLevelTick();
	void Are_the_wind_and_water_RTT_passes_enabled(bool* NewParam);
	void ReInitFrontendPetDisplay();
	void PlayShieldDestroyedSound(const struct FGameplayCueParameters& GameplayCueParameters);
	void Melee_Effect_Color(struct FVector* Melee_Color_Set);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_Generic_C">();
	}
	static class APlayerPawn_Athena_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_Generic_C>();
	}
};
static_assert(alignof(APlayerPawn_Athena_Generic_C) == 0x000010, "Wrong alignment on APlayerPawn_Athena_Generic_C");
static_assert(sizeof(APlayerPawn_Athena_Generic_C) == 0x0032A0, "Wrong size on APlayerPawn_Athena_Generic_C");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, UberGraphFrame_PlayerPawn_Athena_Generic_C) == 0x003080, "Member 'APlayerPawn_Athena_Generic_C::UberGraphFrame_PlayerPawn_Athena_Generic_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Effect_WaterInteraction_FX) == 0x003088, "Member 'APlayerPawn_Athena_Generic_C::Effect_WaterInteraction_FX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, AnimTrailPS) == 0x003090, "Member 'APlayerPawn_Athena_Generic_C::AnimTrailPS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, CanSpawnDustLandFX_) == 0x003098, "Member 'APlayerPawn_Athena_Generic_C::CanSpawnDustLandFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, IsInWater) == 0x003099, "Member 'APlayerPawn_Athena_Generic_C::IsInWater' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, RunWalkParticleRotation) == 0x00309C, "Member 'APlayerPawn_Athena_Generic_C::RunWalkParticleRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WaterCounter) == 0x0030A8, "Member 'APlayerPawn_Athena_Generic_C::WaterCounter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Tick_Delta_Seconds) == 0x0030AC, "Member 'APlayerPawn_Athena_Generic_C::Tick_Delta_Seconds' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_Impact) == 0x0030B0, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_Impact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_Destroyed) == 0x0030B8, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_Destroyed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_FullyCharged) == 0x0030C0, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_FullyCharged' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_StartRecharge) == 0x0030C8, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_StartRecharge' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, BodyValid) == 0x0030D0, "Member 'APlayerPawn_Athena_Generic_C::BodyValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, BackpackValid) == 0x0030D1, "Member 'APlayerPawn_Athena_Generic_C::BackpackValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, HatValid) == 0x0030D2, "Member 'APlayerPawn_Athena_Generic_C::HatValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, FaceValid) == 0x0030D3, "Member 'APlayerPawn_Athena_Generic_C::FaceValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, CharmValid) == 0x0030D4, "Member 'APlayerPawn_Athena_Generic_C::CharmValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, HeadValid) == 0x0030D5, "Member 'APlayerPawn_Athena_Generic_C::HeadValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Effect_Player_LandedDust) == 0x0030D8, "Member 'APlayerPawn_Athena_Generic_C::Effect_Player_LandedDust' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, TempArray) == 0x0030E0, "Member 'APlayerPawn_Athena_Generic_C::TempArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Player_Hit) == 0x0030F0, "Member 'APlayerPawn_Athena_Generic_C::Sound_Player_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Effect_Player_Landed_WindVector_P) == 0x0030F8, "Member 'APlayerPawn_Athena_Generic_C::Effect_Player_Landed_WindVector_P' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, SpeechBubbleWidgetClass) == 0x003100, "Member 'APlayerPawn_Athena_Generic_C::SpeechBubbleWidgetClass' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, LastSpeechText) == 0x003108, "Member 'APlayerPawn_Athena_Generic_C::LastSpeechText' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, UseAnimTrailsNotifies) == 0x003120, "Member 'APlayerPawn_Athena_Generic_C::UseAnimTrailsNotifies' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Time_when_you_ll_be_able_to_splash_again) == 0x003124, "Member 'APlayerPawn_Athena_Generic_C::Time_when_you_ll_be_able_to_splash_again' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, CurrentWaterMeshActor) == 0x003128, "Member 'APlayerPawn_Athena_Generic_C::CurrentWaterMeshActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WaterTraceHitLocation) == 0x003130, "Member 'APlayerPawn_Athena_Generic_C::WaterTraceHitLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, StableVelocityVector) == 0x0031BC, "Member 'APlayerPawn_Athena_Generic_C::StableVelocityVector' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, PlayerRunTemplate_Ground) == 0x0031C8, "Member 'APlayerPawn_Athena_Generic_C::PlayerRunTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, PlayerWalkTemplate_Ground) == 0x0031D0, "Member 'APlayerPawn_Athena_Generic_C::PlayerWalkTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, PlayerRunTemplate_Water) == 0x0031D8, "Member 'APlayerPawn_Athena_Generic_C::PlayerRunTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, PlayerWalkTemplate_Water) == 0x0031E0, "Member 'APlayerPawn_Athena_Generic_C::PlayerWalkTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Pawn_Charm_Skeletal_Mesh) == 0x0031E8, "Member 'APlayerPawn_Athena_Generic_C::Pawn_Charm_Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, AnimTrailsPS_Ref) == 0x0031F0, "Member 'APlayerPawn_Athena_Generic_C::AnimTrailsPS_Ref' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WeaponMaterialOverride) == 0x0031F8, "Member 'APlayerPawn_Athena_Generic_C::WeaponMaterialOverride' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, TickWaterLevel) == 0x003200, "Member 'APlayerPawn_Athena_Generic_C::TickWaterLevel' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WetnessDepthTexture) == 0x003208, "Member 'APlayerPawn_Athena_Generic_C::WetnessDepthTexture' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WaterLevelMID) == 0x003210, "Member 'APlayerPawn_Athena_Generic_C::WaterLevelMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, WaterDecayMID) == 0x003218, "Member 'APlayerPawn_Athena_Generic_C::WaterDecayMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Was_RTT_Enabled_Var_Set) == 0x003220, "Member 'APlayerPawn_Athena_Generic_C::Was_RTT_Enabled_Var_Set' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Is_RTT_Enabled) == 0x003221, "Member 'APlayerPawn_Athena_Generic_C::Is_RTT_Enabled' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, StartingMinCapsuleShadowVis) == 0x003224, "Member 'APlayerPawn_Athena_Generic_C::StartingMinCapsuleShadowVis' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, IsShielded) == 0x003228, "Member 'APlayerPawn_Athena_Generic_C::IsShielded' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, InstigatorCheckDistanceSqrd) == 0x00322C, "Member 'APlayerPawn_Athena_Generic_C::InstigatorCheckDistanceSqrd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, SlideDustActivateSpeed) == 0x003230, "Member 'APlayerPawn_Athena_Generic_C::SlideDustActivateSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, CanSpawnSlideKickupFX_) == 0x003234, "Member 'APlayerPawn_Athena_Generic_C::CanSpawnSlideKickupFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Effect_Player_ShieldActivate) == 0x003238, "Member 'APlayerPawn_Athena_Generic_C::Effect_Player_ShieldActivate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Effect_PLayer_ShieldBreak) == 0x003240, "Member 'APlayerPawn_Athena_Generic_C::Effect_PLayer_ShieldBreak' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, GhostMode) == 0x003248, "Member 'APlayerPawn_Athena_Generic_C::GhostMode' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, OverrideAnimTrail) == 0x003250, "Member 'APlayerPawn_Athena_Generic_C::OverrideAnimTrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, AnimNotify_Begin) == 0x003258, "Member 'APlayerPawn_Athena_Generic_C::AnimNotify_Begin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, AnimNotify_End) == 0x003268, "Member 'APlayerPawn_Athena_Generic_C::AnimNotify_End' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_Destroyed_2D) == 0x003278, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_Destroyed_2D' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, Sound_Shield_Destroyed_Crit_2D) == 0x003280, "Member 'APlayerPawn_Athena_Generic_C::Sound_Shield_Destroyed_Crit_2D' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, AnimTrailFX) == 0x003288, "Member 'APlayerPawn_Athena_Generic_C::AnimTrailFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_Generic_C, PlayDamageEffect) == 0x003290, "Member 'APlayerPawn_Athena_Generic_C::PlayDamageEffect' has a wrong offset!");

}

