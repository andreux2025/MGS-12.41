#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthController_Base

#include "Basic.hpp"

#include "BP_TimeSynthController_Base_classes.hpp"
#include "BP_TimeSynthController_Base_parameters.hpp"


namespace SDK
{

// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.ExecuteUbergraph_BP_TimeSynthController_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::ExecuteUbergraph_BP_TimeSynthController_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "ExecuteUbergraph_BP_TimeSynthController_Base");

	Params::BP_TimeSynthController_Base_C_ExecuteUbergraph_BP_TimeSynthController_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "ReceiveEndPlay");

	Params::BP_TimeSynthController_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TimeSynthController_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.BndEvt__BP_TimeSynthTrackComponent_Alerted_K2Node_ComponentBoundEvent_2_OnPlayStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ETimeSynth_TrackPlayStates              Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETimeSynth_TrackPlayStates              New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::BndEvt__BP_TimeSynthTrackComponent_Alerted_K2Node_ComponentBoundEvent_2_OnPlayStateChanged__DelegateSignature(ETimeSynth_TrackPlayStates Previous, ETimeSynth_TrackPlayStates New)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "BndEvt__BP_TimeSynthTrackComponent_Alerted_K2Node_ComponentBoundEvent_2_OnPlayStateChanged__DelegateSignature");

	Params::BP_TimeSynthController_Base_C_BndEvt__BP_TimeSynthTrackComponent_Alerted_K2Node_ComponentBoundEvent_2_OnPlayStateChanged__DelegateSignature Parms{};

	Parms.Previous = Previous;
	Parms.New = New;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.BndEvt__BP_TimeSynthTrackComponent_Suspicious_K2Node_ComponentBoundEvent_1_OnPlayStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ETimeSynth_TrackPlayStates              Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETimeSynth_TrackPlayStates              New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::BndEvt__BP_TimeSynthTrackComponent_Suspicious_K2Node_ComponentBoundEvent_1_OnPlayStateChanged__DelegateSignature(ETimeSynth_TrackPlayStates Previous, ETimeSynth_TrackPlayStates New)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "BndEvt__BP_TimeSynthTrackComponent_Suspicious_K2Node_ComponentBoundEvent_1_OnPlayStateChanged__DelegateSignature");

	Params::BP_TimeSynthController_Base_C_BndEvt__BP_TimeSynthTrackComponent_Suspicious_K2Node_ComponentBoundEvent_1_OnPlayStateChanged__DelegateSignature Parms{};

	Parms.Previous = Previous;
	Parms.New = New;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.SetVolumeGroup
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Volume_Multiplier                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::SetVolumeGroup(int32 Index_0, float Volume_Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "SetVolumeGroup");

	Params::BP_TimeSynthController_Base_C_SetVolumeGroup Parms{};

	Parms.Index_0 = Index_0;
	Parms.Volume_Multiplier = Volume_Multiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.BndEvt__BP_TimeSynthTrackComponent_Infiltration_K2Node_ComponentBoundEvent_0_OnPlayStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ETimeSynth_TrackPlayStates              Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETimeSynth_TrackPlayStates              New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::BndEvt__BP_TimeSynthTrackComponent_Infiltration_K2Node_ComponentBoundEvent_0_OnPlayStateChanged__DelegateSignature(ETimeSynth_TrackPlayStates Previous, ETimeSynth_TrackPlayStates New)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "BndEvt__BP_TimeSynthTrackComponent_Infiltration_K2Node_ComponentBoundEvent_0_OnPlayStateChanged__DelegateSignature");

	Params::BP_TimeSynthController_Base_C_BndEvt__BP_TimeSynthTrackComponent_Infiltration_K2Node_ComponentBoundEvent_0_OnPlayStateChanged__DelegateSignature Parms{};

	Parms.Previous = Previous;
	Parms.New = New;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.OnReady_CB064A4141A4B166152154812676A378
// (BlueprintCallable, BlueprintEvent)

void ABP_TimeSynthController_Base_C::OnReady_CB064A4141A4B166152154812676A378()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "OnReady_CB064A4141A4B166152154812676A378");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.ChangeTrack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_TimeSynthTrackComponent_C*    New_Track                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::ChangeTrack(class UBP_TimeSynthTrackComponent_C* New_Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "ChangeTrack");

	Params::BP_TimeSynthController_Base_C_ChangeTrack Parms{};

	Parms.New_Track = New_Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.StopAllMusic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Play_Outro                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TimeSynthController_Base_C::StopAllMusic(bool Play_Outro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "StopAllMusic");

	Params::BP_TimeSynthController_Base_C_StopAllMusic Parms{};

	Parms.Play_Outro = Play_Outro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.PlayTransition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimeSynth_TransitionData        Transition_Data                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UBP_TimeSynthTrackComponent_C*    Queued_Track                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::PlayTransition(const struct FTimeSynth_TransitionData& Transition_Data, class UBP_TimeSynthTrackComponent_C* Queued_Track)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "PlayTransition");

	Params::BP_TimeSynthController_Base_C_PlayTransition Parms{};

	Parms.Transition_Data = std::move(Transition_Data);
	Parms.Queued_Track = Queued_Track;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.OnQuantizationBeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynthEventQuantization             QuantizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Beat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::OnQuantizationBeat(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "OnQuantizationBeat");

	Params::BP_TimeSynthController_Base_C_OnQuantizationBeat Parms{};

	Parms.QuantizationType = QuantizationType;
	Parms.NumBars = NumBars;
	Parms.Beat = Beat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.FlushExtraClips
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Exclude_Current                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TimeSynthController_Base_C::FlushExtraClips(bool Exclude_Current)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "FlushExtraClips");

	Params::BP_TimeSynthController_Base_C_FlushExtraClips Parms{};

	Parms.Exclude_Current = Exclude_Current;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.OnQuantizationBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynthEventQuantization             QuantizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Beat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::OnQuantizationBar(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "OnQuantizationBar");

	Params::BP_TimeSynthController_Base_C_OnQuantizationBar Parms{};

	Parms.QuantizationType = QuantizationType;
	Parms.NumBars = NumBars;
	Parms.Beat = Beat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.QueueTrackStartInternal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_TimeSynthTrackComponent_C*    NewTrack                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::QueueTrackStartInternal(class UBP_TimeSynthTrackComponent_C* NewTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "QueueTrackStartInternal");

	Params::BP_TimeSynthController_Base_C_QueueTrackStartInternal Parms{};

	Parms.NewTrack = NewTrack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.CalculateMaxClipDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FTimeSynth_TrackStemData> Clips                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TimeSynthController_Base_C::CalculateMaxClipDuration(TArray<struct FTimeSynth_TrackStemData>& Clips, int32* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "CalculateMaxClipDuration");

	Params::BP_TimeSynthController_Base_C_CalculateMaxClipDuration Parms{};

	Parms.Clips = std::move(Clips);

	UObject::ProcessEvent(Func, &Parms);

	Clips = std::move(Parms.Clips);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.GetTracksForRegistration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UBP_TimeSynthTrackComponent_C*>Tracks                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)

void ABP_TimeSynthController_Base_C::GetTracksForRegistration(TArray<class UBP_TimeSynthTrackComponent_C*>* Tracks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "GetTracksForRegistration");

	Params::BP_TimeSynthController_Base_C_GetTracksForRegistration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tracks != nullptr)
		*Tracks = std::move(Parms.Tracks);
}


// Function BP_TimeSynthController_Base.BP_TimeSynthController_Base_C.GetIsPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlaying_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TimeSynthController_Base_C::GetIsPlaying(bool* IsPlaying_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthController_Base_C", "GetIsPlaying");

	Params::BP_TimeSynthController_Base_C_GetIsPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying_0 != nullptr)
		*IsPlaying_0 = Parms.IsPlaying_0;
}

}

