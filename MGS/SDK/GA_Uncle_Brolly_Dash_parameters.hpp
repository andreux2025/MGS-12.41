#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Uncle_Brolly_Dash

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.ExecuteUbergraph_GA_Uncle_Brolly_Dash
// 0x05C0 (0x05C0 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IncrementAnalyticMatchCount_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_NetworkSyncPoint*          CallFunc_WaitNetSync_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_StartAbilityState*         CallFunc_StartAbilityState_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_11;                   // 0x0074(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_10;                   // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_9;                    // 0x0094(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_8;                    // 0x00AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_7;                    // 0x00C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_6;                    // 0x00DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_NetworkSyncPoint*          CallFunc_WaitNetSync_ReturnValue_1;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_5;                    // 0x012C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_4;                    // 0x0134(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_3;                    // 0x014C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_2;                    // 0x0164(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_1;                    // 0x017C(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag;                      // 0x0194(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x01AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0204(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x021C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_2;                            // 0x0250(0x0028)()
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0280(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E[0x2];                                      // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0390(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_22;           // 0x03EC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0438(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0460(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitNotify* CallFunc_PlayMontageAndWaitNotify_ReturnValue;     // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0480(0x00B0)(ConstParm)
	class UFortAbilityTask_PlayMontageWaitNotify* CallFunc_PlayMontageAndWaitNotify_ReturnValue_1;   // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_23;           // 0x0548(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x0578(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UFortAbilityTask_TargetSelectionContinuous* CallFunc_DoTargetSelectionContinuous_ReturnValue;  // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_ApplyRootMotionConstantForce* CallFunc_ApplyRootMotionConstantForce_ReturnValue; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash) == 0x0005C0, "Wrong size on GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, EntryPoint) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IncrementAnalyticMatchCount_ReturnValue) == 0x000004, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IncrementAnalyticMatchCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_WaitNetSync_ReturnValue) == 0x000018, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_WaitNetSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_StartAbilityState_ReturnValue) == 0x000058, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_StartAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_4) == 0x000060, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_11) == 0x000074, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_11' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_10) == 0x00007C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_10' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_5) == 0x000084, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_9) == 0x000094, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_9' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_6) == 0x00009C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_8) == 0x0000AC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_8' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000B4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_7) == 0x0000C4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_7' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000CC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_6) == 0x0000DC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_6' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000E4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_struct_Variable) == 0x0000F4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000FC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00010C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_WaitNetSync_ReturnValue_1) == 0x000110, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_WaitNetSync_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_11) == 0x000118, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_5) == 0x00012C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_4) == 0x000134, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_12) == 0x00013C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_3) == 0x00014C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_13) == 0x000154, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_2) == 0x000164, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_14) == 0x00016C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag_1) == 0x00017C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_15) == 0x000184, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyTag) == 0x000194, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_16) == 0x00019C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_struct_Variable_1) == 0x0001AC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001B4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyName_4) == 0x0001C4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyName_3) == 0x0001CC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_18) == 0x0001D4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyName_2) == 0x0001E4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_19) == 0x0001EC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyName_1) == 0x0001FC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_20) == 0x000204, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_NotifyName) == 0x000214, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_21) == 0x00021C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_name_Variable) == 0x00022C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_bool_Variable) == 0x000234, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_int_Variable) == 0x000238, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_int_Variable_1) == 0x00023C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_int_Variable_2) == 0x000240, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_int_Variable_3) == 0x000244, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_int_Variable_4) == 0x000248, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_bool_Variable_1) == 0x00024C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_struct_Variable_2) == 0x000250, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, Temp_struct_Variable_3) == 0x000278, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000280, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_bBlockingHit) == 0x00030C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_bInitialOverlap) == 0x00030D, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_Time) == 0x000310, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_Distance) == 0x000314, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_Location) == 0x000318, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_ImpactPoint) == 0x000324, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_Normal) == 0x000330, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_ImpactNormal) == 0x00033C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_PhysMat) == 0x000348, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_HitActor) == 0x000350, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_HitComponent) == 0x000358, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_HitBoneName) == 0x000360, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_HitItem) == 0x000368, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_FaceIndex) == 0x00036C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_TraceStart) == 0x000370, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakHitResult_TraceEnd) == 0x00037C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_Event_bWasCancelled) == 0x000388, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_K2_CommitAbility_ReturnValue) == 0x000389, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_TargetData_1) == 0x000390, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_ApplicationTag_1) == 0x0003B8, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0003C0, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x0003C8, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsFalling_ReturnValue) == 0x0003D0, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x0003D8, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetControlRotation_ReturnValue) == 0x0003E0, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_22) == 0x0003EC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Roll) == 0x0003FC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Pitch) == 0x000400, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Yaw) == 0x000404, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetControlRotation_ReturnValue_1) == 0x000408, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_MakeRotator_ReturnValue) == 0x000414, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Roll_1) == 0x000420, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Pitch_1) == 0x000424, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_BreakRotator_Yaw_1) == 0x000428, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetForwardVector_ReturnValue) == 0x00042C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_TargetData) == 0x000438, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CustomEvent_ApplicationTag) == 0x000460, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsLocallyControlled_ReturnValue) == 0x000468, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000469, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_PlayMontageAndWaitNotify_ReturnValue) == 0x000470, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_PlayMontageAndWaitNotify_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_3) == 0x000478, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_Event_EventData) == 0x000480, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_PlayMontageAndWaitNotify_ReturnValue_1) == 0x000530, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_PlayMontageAndWaitNotify_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_4) == 0x000538, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_Select_Default) == 0x000540, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_CreateDelegate_OutputDelegate_23) == 0x000548, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000558, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_MakeRotator_ReturnValue_1) == 0x000560, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_5) == 0x00056C, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_Select_Default_1) == 0x000570, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x000578, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_DoTargetSelectionContinuous_ReturnValue) == 0x000588, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_DoTargetSelectionContinuous_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_6) == 0x000590, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_GetValueAtLevel_ReturnValue) == 0x000594, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000598, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_Not_PreBool_ReturnValue) == 0x0005A4, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0005A8, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, K2Node_Select_Default_2) == 0x0005AC, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_ApplyRootMotionConstantForce_ReturnValue) == 0x0005B0, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_ApplyRootMotionConstantForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash, CallFunc_IsValid_ReturnValue_7) == 0x0005B8, "Member 'GA_Uncle_Brolly_Dash_C_ExecuteUbergraph_GA_Uncle_Brolly_Dash::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Uncle_Brolly_Dash_C_K2_OnEndAbility");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Uncle_Brolly_Dash_C_K2_OnEndAbility");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnCompleted_2A449C794E18083C057A77B57327A251
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251, NotifyName) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnCompleted_2A449C794E18083C057A77B57327A251::NotifyName' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnBlendOut_2A449C794E18083C057A77B57327A251
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251, NotifyName) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnBlendOut_2A449C794E18083C057A77B57327A251::NotifyName' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnInterrupted_2A449C794E18083C057A77B57327A251
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251, NotifyName) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnInterrupted_2A449C794E18083C057A77B57327A251::NotifyName' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyBegin_2A449C794E18083C057A77B57327A251
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251, NotifyName) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyBegin_2A449C794E18083C057A77B57327A251::NotifyName' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyEnd_2A449C794E18083C057A77B57327A251
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251, NotifyName) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyEnd_2A449C794E18083C057A77B57327A251::NotifyName' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnCompleted_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnCompleted_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnBlendOut_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnBlendOut_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnInterrupted_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnInterrupted_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnCancelled_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnCancelled_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyBegin_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyEnd_867B3DB5411C5F17002070959CA9C0AB::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnCompleted_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnCompleted_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnBlendOut_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnBlendOut_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnInterrupted_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnInterrupted_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnCancelled_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnCancelled_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyBegin_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyBegin_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.OnNotifyEnd_71A236E547B31217AA06379E7247872C
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C, NotifyTag) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_OnNotifyEnd_71A236E547B31217AA06379E7247872C::NotifyTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.Targeted_701247AE44973D1FC7ABDDA7F6420ABE
// 0x0030 (0x0030 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE) == 0x000030, "Wrong size on GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE, TargetData) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE, ApplicationTag) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_Targeted_701247AE44973D1FC7ABDDA7F6420ABE::ApplicationTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.Cancelled_701247AE44973D1FC7ABDDA7F6420ABE
// 0x0030 (0x0030 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE) == 0x000030, "Wrong size on GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE, TargetData) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE, ApplicationTag) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_Cancelled_701247AE44973D1FC7ABDDA7F6420ABE::ApplicationTag' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.InitAbility
// 0x0068 (0x0068 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_InitAbility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Uncle_Brolly_Block_Collision_C*      K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_InitAbility) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_InitAbility");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_InitAbility) == 0x000068, "Wrong size on GA_Uncle_Brolly_Dash_C_InitAbility");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000020, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_GetAttachedActors_OutActors) == 0x000030, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_Array_Get_Item) == 0x000048, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision) == 0x000058, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_InitAbility, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'GA_Uncle_Brolly_Dash_C_InitAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.GetChargeTimeAndSetDashVars
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_7;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_8;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_9;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_10;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_11;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars) == 0x0000B8, "Wrong size on GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable_1) == 0x000004, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable_2) == 0x000008, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable_3) == 0x00000C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable_4) == 0x000010, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_int_Variable_5) == 0x000014, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_float_Variable) == 0x000018, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_float_Variable_1) == 0x00001C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, Temp_float_Variable_2) == 0x000020, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue) == 0x000038, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x00003C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000040, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x000044, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x000048, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x00004C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x000050, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_7) == 0x000054, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_8) == 0x000058, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_9) == 0x00005C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000060, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_10) == 0x000064, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_GetValueAtLevel_ReturnValue_11) == 0x000068, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_GetValueAtLevel_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000078, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, K2Node_Select_Default) == 0x0000A8, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, K2Node_Select_Default_1) == 0x0000AC, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'GA_Uncle_Brolly_Dash_C_GetChargeTimeAndSetDashVars::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.CheckIfKilledBuilding
// 0x0018 (0x0018 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding) == 0x000018, "Wrong size on GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding, BuildingActor) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding::BuildingActor' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding, CallFunc_GetHealth_ReturnValue) == 0x000008, "Member 'GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding, CallFunc_GetValueAtLevel_ReturnValue) == 0x00000C, "Member 'GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'GA_Uncle_Brolly_Dash_C_CheckIfKilledBuilding::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.PlayImpactGC
// 0x0230 (0x0230 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_PlayImpactGC final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0028(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetContextFromOwner_ReturnValue;          // 0x00B8(0x0018)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0170(0x00B8)(ContainsInstancedReference)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0228(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_PlayImpactGC) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_PlayImpactGC");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_PlayImpactGC) == 0x000230, "Wrong size on GA_Uncle_Brolly_Dash_C_PlayImpactGC");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, TargetData) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_GetContextFromOwner_ReturnValue) == 0x0000B8, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_GetContextFromOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000158, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000168, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000170, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayImpactGC, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000228, "Member 'GA_Uncle_Brolly_Dash_C_PlayImpactGC::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.PlayDashFeedback
// 0x0130 (0x0130 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_PlayDashFeedback final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitterCameraLensEffectBase*           CallFunc_SpawnCameraLensEffect_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0078(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_PlayDashFeedback");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback) == 0x000130, "Wrong size on GA_Uncle_Brolly_Dash_C_PlayDashFeedback");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, Temp_int_Variable) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_SpawnCameraLensEffect_ReturnValue) == 0x000008, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_SpawnCameraLensEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000010, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_GetActorRightVector_ReturnValue) == 0x000018, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00003C, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, K2Node_Select_Default) == 0x000060, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000068, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_PlayDashFeedback, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000078, "Member 'GA_Uncle_Brolly_Dash_C_PlayDashFeedback::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.CleanUpDash
// 0x0008 (0x0008 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_CleanUpDash final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_CleanUpDash) == 0x000004, "Wrong alignment on GA_Uncle_Brolly_Dash_C_CleanUpDash");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_CleanUpDash) == 0x000008, "Wrong size on GA_Uncle_Brolly_Dash_C_CleanUpDash");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_CleanUpDash, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_CleanUpDash::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Uncle_Brolly_Dash.GA_Uncle_Brolly_Dash_C.ImpulseHitDashTarget
// 0x01F0 (0x01F0 - 0x0000)
struct GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x002C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Uncle_Brolly_Block_Collision_C*      K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget) == 0x000008, "Wrong alignment on GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget");
static_assert(sizeof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget) == 0x0001F0, "Wrong size on GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, TargetData) == 0x000000, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, Temp_int_Variable) == 0x000028, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x00002C, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B8, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B9, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_Time) == 0x0000BC, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_Distance) == 0x0000C0, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_Location) == 0x0000C4, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D0, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_Normal) == 0x0000DC, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E8, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_FaceIndex) == 0x00011C, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_TraceStart) == 0x000120, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_BreakHitResult_TraceEnd) == 0x00012C, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue) == 0x000138, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_IsValid_ReturnValue) == 0x00013C, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision) == 0x000140, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_AsB_Uncle_Brolly_Block_Collision' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetOwner_ReturnValue) == 0x000150, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000158, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000168, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000178, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000184, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000188, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x00018C, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, K2Node_Select_Default) == 0x000190, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000194, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A0, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x0001AC, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_Normal_ReturnValue) == 0x0001B0, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_MakeVector_ReturnValue) == 0x0001BC, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x0001C8, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001CC, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001E4, "Member 'GA_Uncle_Brolly_Dash_C_ImpulseHitDashTarget::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

}

