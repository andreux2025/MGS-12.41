#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialMapScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function SpatialMapScreen.SpatialMapScreen_C.ExecuteUbergraph_SpatialMapScreen
// 0x0028 (0x0028 - 0x0000)
struct SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanShowCompletedCount;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ChallengesNum;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CountOfCompletedChallenges;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaChallengeMapRewardPreview_C*     K2Node_DynamicCast_AsAthena_Challenge_Map_Reward_Preview; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen) == 0x000008, "Wrong alignment on SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen");
static_assert(sizeof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen) == 0x000028, "Wrong size on SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, EntryPoint) == 0x000000, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_Event_bCanShowCompletedCount) == 0x000004, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_Event_bCanShowCompletedCount' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_Event_ChallengesNum) == 0x000008, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_Event_ChallengesNum' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_Event_CountOfCompletedChallenges) == 0x00000C, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_Event_CountOfCompletedChallenges' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_Event_bVisible) == 0x000010, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_DynamicCast_AsAthena_Challenge_Map_Reward_Preview) == 0x000018, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_DynamicCast_AsAthena_Challenge_Map_Reward_Preview' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'SpatialMapScreen_C_ExecuteUbergraph_SpatialMapScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SpatialMapScreen.SpatialMapScreen_C.SetRewardPreviewVisibility
// 0x0001 (0x0001 - 0x0000)
struct SpatialMapScreen_C_SetRewardPreviewVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpatialMapScreen_C_SetRewardPreviewVisibility) == 0x000001, "Wrong alignment on SpatialMapScreen_C_SetRewardPreviewVisibility");
static_assert(sizeof(SpatialMapScreen_C_SetRewardPreviewVisibility) == 0x000001, "Wrong size on SpatialMapScreen_C_SetRewardPreviewVisibility");
static_assert(offsetof(SpatialMapScreen_C_SetRewardPreviewVisibility, bVisible) == 0x000000, "Member 'SpatialMapScreen_C_SetRewardPreviewVisibility::bVisible' has a wrong offset!");

// Function SpatialMapScreen.SpatialMapScreen_C.OnTabCycled
// 0x000C (0x000C - 0x0000)
struct SpatialMapScreen_C_OnTabCycled final
{
public:
	bool                                          bCanShowCompletedCount;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChallengesNum;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountOfCompletedChallenges;                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialMapScreen_C_OnTabCycled) == 0x000004, "Wrong alignment on SpatialMapScreen_C_OnTabCycled");
static_assert(sizeof(SpatialMapScreen_C_OnTabCycled) == 0x00000C, "Wrong size on SpatialMapScreen_C_OnTabCycled");
static_assert(offsetof(SpatialMapScreen_C_OnTabCycled, bCanShowCompletedCount) == 0x000000, "Member 'SpatialMapScreen_C_OnTabCycled::bCanShowCompletedCount' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_OnTabCycled, ChallengesNum) == 0x000004, "Member 'SpatialMapScreen_C_OnTabCycled::ChallengesNum' has a wrong offset!");
static_assert(offsetof(SpatialMapScreen_C_OnTabCycled, CountOfCompletedChallenges) == 0x000008, "Member 'SpatialMapScreen_C_OnTabCycled::CountOfCompletedChallenges' has a wrong offset!");

}

