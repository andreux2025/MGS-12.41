#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthTrackComponent

#include "Basic.hpp"

#include "TimeSynth_TransitionData_structs.hpp"
#include "TimeSynth_structs.hpp"
#include "Engine_classes.hpp"
#include "TimeSynth_TrackNames_MANG_structs.hpp"
#include "TimeSynth_TrackStemData_structs.hpp"
#include "TimeSynth_TrackPlayStates_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C
// 0x00B8 (0x0168 - 0x00B0)
class UBP_TimeSynthTrackComponent_C final : public UActorComponent
{
public:
	ETimeSynth_TrackNames_MANG                    TrackID;                                           // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BPM;                                               // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TimeSynthController_Base_C*         TimeSynthController;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrackLengthBeats;                                  // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTimeSynth_TrackStemData>       Clips;                                             // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         CurrentBeatDecrement;                              // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeSynth_TrackStemData               StopClip;                                          // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ETimeSynth_TrackNames_MANG, struct FTimeSynth_TransitionData> Transitions;                                       // 0x00F0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FTimeSynthClipHandle>           Handles;                                           // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          QuantizationEventBound;                            // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugEnabled;                                      // 0x0151(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ETimeSynth_TrackPlayStates                    PlayState;                                         // 0x0152(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentBeat;                                       // 0x0154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnPlayStateChanged;                                // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnPlayStateChanged__DelegateSignature(ETimeSynth_TrackPlayStates Previous, ETimeSynth_TrackPlayStates New);
	void SetController(class ABP_TimeSynthController_Base_C* TimeSynthController_0);
	void QueueTrackStart();
	void QueueTrackStop(bool Play_Outro);
	void CalculateTrackLengthBeats(TArray<struct FTimeSynth_TrackStemData>& Clips_0, int32* Duration);
	void LoopCurrentTrack();
	void HasTransitionForTrack(const ETimeSynth_TrackNames_MANG& New_Track, bool* Transition_Found, struct FTimeSynth_TransitionData* Transition_Data);
	void OnQuantizationBeat(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat);
	void CheckPlaystate(ETimeSynth_TrackPlayStates Is_In_Play_State, bool* Result);
	void SetPlaystate(ETimeSynth_TrackPlayStates Is_In_Play_State);
	void OnQuantizationBar(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat);
	void GetBPM(float* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TimeSynthTrackComponent_C">();
	}
	static class UBP_TimeSynthTrackComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TimeSynthTrackComponent_C>();
	}
};
static_assert(alignof(UBP_TimeSynthTrackComponent_C) == 0x000008, "Wrong alignment on UBP_TimeSynthTrackComponent_C");
static_assert(sizeof(UBP_TimeSynthTrackComponent_C) == 0x000168, "Wrong size on UBP_TimeSynthTrackComponent_C");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, TrackID) == 0x0000B0, "Member 'UBP_TimeSynthTrackComponent_C::TrackID' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, BPM) == 0x0000B4, "Member 'UBP_TimeSynthTrackComponent_C::BPM' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, TimeSynthController) == 0x0000B8, "Member 'UBP_TimeSynthTrackComponent_C::TimeSynthController' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, TrackLengthBeats) == 0x0000C0, "Member 'UBP_TimeSynthTrackComponent_C::TrackLengthBeats' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, Clips) == 0x0000C8, "Member 'UBP_TimeSynthTrackComponent_C::Clips' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, CurrentBeatDecrement) == 0x0000D8, "Member 'UBP_TimeSynthTrackComponent_C::CurrentBeatDecrement' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, StopClip) == 0x0000E0, "Member 'UBP_TimeSynthTrackComponent_C::StopClip' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, Transitions) == 0x0000F0, "Member 'UBP_TimeSynthTrackComponent_C::Transitions' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, Handles) == 0x000140, "Member 'UBP_TimeSynthTrackComponent_C::Handles' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, QuantizationEventBound) == 0x000150, "Member 'UBP_TimeSynthTrackComponent_C::QuantizationEventBound' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, DebugEnabled) == 0x000151, "Member 'UBP_TimeSynthTrackComponent_C::DebugEnabled' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, PlayState) == 0x000152, "Member 'UBP_TimeSynthTrackComponent_C::PlayState' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, CurrentBeat) == 0x000154, "Member 'UBP_TimeSynthTrackComponent_C::CurrentBeat' has a wrong offset!");
static_assert(offsetof(UBP_TimeSynthTrackComponent_C, OnPlayStateChanged) == 0x000158, "Member 'UBP_TimeSynthTrackComponent_C::OnPlayStateChanged' has a wrong offset!");

}

