#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePass_Door_XP_Progress

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattlePass_Door_XP_Progress.BattlePass_Door_XP_Progress_C.ExecuteUbergraph_BattlePass_Door_XP_Progress
// 0x0098 (0x0098 - 0x0000)
struct BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentXp;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_XpToLevel;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NextLevel;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress) == 0x000008, "Wrong alignment on BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress");
static_assert(sizeof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress) == 0x000098, "Wrong size on BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, EntryPoint) == 0x000000, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, K2Node_CustomEvent_CurrentXp) == 0x000004, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::K2Node_CustomEvent_CurrentXp' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, K2Node_CustomEvent_XpToLevel) == 0x000008, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::K2Node_CustomEvent_XpToLevel' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, K2Node_CustomEvent_NextLevel) == 0x00000C, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::K2Node_CustomEvent_NextLevel' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, K2Node_MakeArray_Array) == 0x000058, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BattlePass_Door_XP_Progress_C_ExecuteUbergraph_BattlePass_Door_XP_Progress::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BattlePass_Door_XP_Progress.BattlePass_Door_XP_Progress_C.InitXpValues
// 0x000C (0x000C - 0x0000)
struct BattlePass_Door_XP_Progress_C_InitXpValues final
{
public:
	int32                                         CurrentXp;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XpToLevel;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextLevel;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePass_Door_XP_Progress_C_InitXpValues) == 0x000004, "Wrong alignment on BattlePass_Door_XP_Progress_C_InitXpValues");
static_assert(sizeof(BattlePass_Door_XP_Progress_C_InitXpValues) == 0x00000C, "Wrong size on BattlePass_Door_XP_Progress_C_InitXpValues");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_InitXpValues, CurrentXp) == 0x000000, "Member 'BattlePass_Door_XP_Progress_C_InitXpValues::CurrentXp' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_InitXpValues, XpToLevel) == 0x000004, "Member 'BattlePass_Door_XP_Progress_C_InitXpValues::XpToLevel' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_XP_Progress_C_InitXpValues, NextLevel) == 0x000008, "Member 'BattlePass_Door_XP_Progress_C_InitXpValues::NextLevel' has a wrong offset!");

}

