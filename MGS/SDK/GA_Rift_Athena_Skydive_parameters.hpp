#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Rift_Athena_Skydive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.ExecuteUbergraph_GA_Rift_Athena_Skydive
// 0x02B8 (0x02B8 - 0x0000)
struct GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0040(0x0040)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkydiving_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue;         // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_VehicleIsInAir_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0104(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue_1;       // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortCharacterVehicle_Ostrich*          K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaJackalVehicle*               K2Node_DynamicCast_AsFort_Athena_Jackal_Vehicle;   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaFerretVehicle*               K2Node_DynamicCast_AsFort_Athena_Ferret_Vehicle;   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_2;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue_2;       // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalViewingPlayerController_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_3;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x1];                                      // 0x01BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerPawn*                        K2Node_CustomEvent_FortPlayerPawn;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0208(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0294(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x02A4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive) == 0x000008, "Wrong alignment on GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive) == 0x0002B8, "Wrong size on GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, EntryPoint) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000038, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetActorInfo_ReturnValue) == 0x000040, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000080, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetController_ReturnValue) == 0x000090, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsPlayer_Controller) == 0x000098, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsSkydiving_ReturnValue) == 0x0000A1, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsSkydiving_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetVehicleUInterface_ReturnValue) == 0x0000A8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetVehicleUInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_VehicleIsInAir_ReturnValue) == 0x0000B8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_VehicleIsInAir_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsInVehicle_ReturnValue) == 0x0000BA, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_2) == 0x0000BB, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetController_ReturnValue_1) == 0x0000C0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0000C8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetMovementComponent_ReturnValue) == 0x0000D8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x0000E0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000EA, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000EB, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_BooleanOR_ReturnValue) == 0x0000EC, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetValueAtLevel_ReturnValue) == 0x0000F0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0000F4, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000F8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000FC, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000104, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x00010C, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, Temp_bool_IsClosed_Variable) == 0x000110, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x000114, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_Add_FloatFloat_ReturnValue) == 0x000118, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetVehicleUInterface_ReturnValue_1) == 0x000120, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetVehicleUInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000130, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich) == 0x000138, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsFort_Athena_Jackal_Vehicle) == 0x000148, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsFort_Athena_Jackal_Vehicle' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsFort_Athena_Ferret_Vehicle) == 0x000158, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsFort_Athena_Ferret_Vehicle' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_6) == 0x000160, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_4) == 0x000161, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetController_ReturnValue_2) == 0x000168, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsPlayer_Controller_2) == 0x000170, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_7) == 0x000178, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetVehicleUInterface_ReturnValue_2) == 0x000180, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetVehicleUInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsInVehicle_ReturnValue_1) == 0x000190, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetLocalViewingPlayerController_ReturnValue) == 0x000198, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetLocalViewingPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_5) == 0x0001A0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_GetController_ReturnValue_3) == 0x0001A8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_AsPlayer_Controller_3) == 0x0001B0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_AsPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_DynamicCast_bSuccess_8) == 0x0001B8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_IsValid_ReturnValue_6) == 0x0001B9, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, Temp_bool_Has_Been_Initd_Variable) == 0x0001BA, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001BC, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001D0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CustomEvent_DestroyedActor) == 0x0001D8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001E0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CustomEvent_FortPlayerPawn) == 0x0001F0, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CustomEvent_FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001F8, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CustomEvent_Hit) == 0x000208, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_6) == 0x000294, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive, K2Node_CreateDelegate_OutputDelegate_7) == 0x0002A4, "Member 'GA_Rift_Athena_Skydive_C_ExecuteUbergraph_GA_Rift_Athena_Skydive::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.OnPawnLanded
// 0x008C (0x008C - 0x0000)
struct GA_Rift_Athena_Skydive_C_OnPawnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_OnPawnLanded) == 0x000004, "Wrong alignment on GA_Rift_Athena_Skydive_C_OnPawnLanded");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_OnPawnLanded) == 0x00008C, "Wrong size on GA_Rift_Athena_Skydive_C_OnPawnLanded");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_OnPawnLanded, Hit) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_OnPawnLanded::Hit' has a wrong offset!");

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.OnPawnEnteredWater
// 0x0008 (0x0008 - 0x0000)
struct GA_Rift_Athena_Skydive_C_OnPawnEnteredWater final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_OnPawnEnteredWater) == 0x000008, "Wrong alignment on GA_Rift_Athena_Skydive_C_OnPawnEnteredWater");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_OnPawnEnteredWater) == 0x000008, "Wrong size on GA_Rift_Athena_Skydive_C_OnPawnEnteredWater");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_OnPawnEnteredWater, FortPlayerPawn) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_OnPawnEnteredWater::FortPlayerPawn' has a wrong offset!");

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.OnDestroyed_Event_0
// 0x0008 (0x0008 - 0x0000)
struct GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0 final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0) == 0x000008, "Wrong alignment on GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0) == 0x000008, "Wrong size on GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0, DestroyedActor) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_OnDestroyed_Event_0::DestroyedActor' has a wrong offset!");

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.K2_OnEndAbility
// 0x0048 (0x0048 - 0x0000)
struct GA_Rift_Athena_Skydive_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility) == 0x000008, "Wrong alignment on GA_Rift_Athena_Skydive_C_K2_OnEndAbility");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility) == 0x000048, "Wrong size on GA_Rift_Athena_Skydive_C_K2_OnEndAbility");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, K2Node_DynamicCast_AsPlayer_Controller) == 0x000038, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_K2_OnEndAbility, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_Rift_Athena_Skydive_C_K2_OnEndAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C.RemoveSkydivingGameplayEffect
// 0x0001 (0x0001 - 0x0000)
struct GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect) == 0x000001, "Wrong alignment on GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect");
static_assert(sizeof(GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect) == 0x000001, "Wrong size on GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect");
static_assert(offsetof(GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_Rift_Athena_Skydive_C_RemoveSkydivingGameplayEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

