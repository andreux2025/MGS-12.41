#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PawnHighlight_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FCreativeEffectColorIndex_structs.hpp"
#include "PlayerPawn_Athena_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena.PlayerPawn_Athena_C
// 0x05F0 (0x3890 - 0x32A0)
#pragma pack(push, 0x1)
class alignas(0x10) APlayerPawn_Athena_C : public APlayerPawn_Athena_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_C;                // 0x32A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortUnderwaterDamageComponent*         FortUnderwaterDamage;                              // 0x32A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TFX_ResOutCharacterMesh_LightIntensity_742226E94F2087597CFE2FAE7DCC91EA; // 0x32B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TFX_ResOutCharacterMesh_ZHeightParam_742226E94F2087597CFE2FAE7DCC91EA; // 0x32B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TFX_ResOutCharacterMesh_TransitionParam_742226E94F2087597CFE2FAE7DCC91EA; // 0x32B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TFX_ResOutCharacterMesh__Direction_742226E94F2087597CFE2FAE7DCC91EA; // 0x32BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32BD[0x3];                                     // 0x32BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TFX_ResOutCharacterMesh;                           // 0x32C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TFX_GlowCharacterMesh_EmissiveWarp_72A948944C388F740514419F46EFBC56; // 0x32C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TFX_GlowCharacterMesh__Direction_72A948944C388F740514419F46EFBC56; // 0x32CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32CD[0x3];                                     // 0x32CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TFX_GlowCharacterMesh;                             // 0x32D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8; // 0x32D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8; // 0x32DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32DD[0x3];                                     // 0x32DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x32E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x32E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x32F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x32F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x3308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x3318(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x3338(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x33E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x33F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F1[0x7];                                     // 0x33F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            MenuGoingCommandowWeapon;                          // 0x33F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x3400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenOutsideSafeZone;                           // 0x3408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x3];                                     // 0x3409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ThreatColor;                                       // 0x340C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x4];                                     // 0x341C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PlayerKilledSound;                                 // 0x3420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     Contrail_A;                                        // 0x3428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         ActiveContrail;                                    // 0x3430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLiveContrail;                                     // 0x3438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3439[0x7];                                     // 0x3439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     Vapor_Effect;                                      // 0x3440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WindDebrisParticles;                               // 0x3448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallingRainParticles;                              // 0x3450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StormAuraParticles;                                // 0x3458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x3460(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x346C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x3470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3474[0x4];                                     // 0x3474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SafeZoneActor;                                     // 0x3478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x3480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3484[0x4];                                     // 0x3484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   RandomLightningLight;                              // 0x3488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x3490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x3494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashDiameter;                            // 0x3498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashHeight;                              // 0x349C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x34A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x34A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x34A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ChanceOfLightningMesh;                            // 0x34B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInvulnerableVisuals;                           // 0x34B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B5[0x3];                                     // 0x34B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x34B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x34C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C4[0x4];                                     // 0x34C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        FallingAudioLoop_Inst;                             // 0x34C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingFallingSound;                            // 0x34D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D1[0x3];                                     // 0x34D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerAttributes_Speed_Walk;                       // 0x34D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Run;                        // 0x34D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Sprint;                     // 0x34DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrailsLOD;                                      // 0x34E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E4[0x4];                                     // 0x34E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  MobilePostProcess;                                 // 0x34E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutsideSafeZoneCached;                          // 0x34F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F1[0x7];                                     // 0x34F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       ResOutMaterials;                                   // 0x34F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class ADuplicateResOutMesh_C*                 RezInFXActor;                                      // 0x3508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezIn;                                       // 0x3510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3511[0x7];                                     // 0x3511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuplicateResOutMesh_C*                 RezOutFXActor;                                     // 0x3518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezOut;                                      // 0x3520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasEverInWarmUp;                                  // 0x3521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStormAudioCleanedUp;                              // 0x3522(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3523[0xD];                                     // 0x3523(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Box_Local_Transform;                               // 0x3530(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BoundsRadius;                                      // 0x3560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3564[0x4];                                     // 0x3564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   TeleportationPointLight;                           // 0x3568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLightIntensity;                                 // 0x3570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshTop;                                    // 0x3574(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshBot;                                    // 0x357C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_Transition;                               // 0x3584(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolvePercent;                          // 0x358C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDirection;                        // 0x3594(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveBaseLoc;                          // 0x359C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDistance;                         // 0x35A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveFirstSpawn;                       // 0x35AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B4[0x4];                                     // 0x35B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Mat_CharacterDissolve;                             // 0x35B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DissolveMIDs;                                      // 0x35C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bUseNewTeleportFX;                                 // 0x35D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D1[0x3];                                     // 0x35D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutsideSafeZoneGameplayCueTag;                     // 0x35D4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SafeZonePhase;                                     // 0x35DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichSafeZoneTag;                                  // 0x35E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutsideSafeZoneGameplayCueActive;                 // 0x35E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x3];                                     // 0x35E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         SafeZoneDamageScalableFloat;                       // 0x35E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFrontendPartyInProgress;                          // 0x3608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLockOnInteractionComplete;                        // 0x3609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360A[0x6];                                     // 0x360A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ResIn;                                             // 0x3610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ResOut;                                            // 0x3620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingRight;                                        // 0x3630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft;                                         // 0x3640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bSkeletalArrayReady;                               // 0x3650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3651[0x3];                                     // 0x3651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurDissolveSetupAttempt;                           // 0x3654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DBNOEnterSound;                                    // 0x3658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFadeToWhiteTeleported;                           // 0x3660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Ashton;                                         // 0x3670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3671[0x7];                                     // 0x3671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Ashton;                                            // 0x3678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SwingRightEnd;                                     // 0x3680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeftEnd;                                      // 0x3690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           PhoneGhostCue;                                     // 0x36A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WhiteoutCue;                                       // 0x36A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZoneCue;                                // 0x36B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone2Cue;                               // 0x36B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone3Cue;                               // 0x36C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRespawnFXOnSpawn;                              // 0x36C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_36C9[0x7];                                     // 0x36C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  PlayerPawnAthena;                                  // 0x36D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SwingRight2;                                       // 0x36D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft2;                                        // 0x36E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TestProceduralWaterInIsolation;                    // 0x36F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x36F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_First_Water_Body;                               // 0x36FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Last_Water_Body;                                // 0x36FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AccumulatedNormalizedDiveSpeed;                    // 0x36FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WaterSprintBoostTag;                               // 0x3700(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CCPM_isHiddenInProp;                               // 0x3708(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UObject*, struct FPawnHighlight>   PawnHighlights;                                    // 0x3718(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UObject*                                Current_Highlight_Source;                          // 0x3768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Highlight_Priority;                        // 0x3770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Invulnerable_Highlight;                            // 0x3774(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCreativeEffectColorIndex             LastCreativeEffectColorIndex;                      // 0x37A4(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGalileo;                                         // 0x37AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EPSCPoolMethod                                ContrailsPoolingMode;                              // 0x37AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AE[0x2];                                     // 0x37AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HotFixSnow;                                        // 0x37B0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FName>                             NoSnowPlaylists;                                   // 0x37D0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTag                           GalileoPlaylistTag;                                // 0x3820(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WeaponMIDs;                                        // 0x3828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         AmountOfTimesToAttemptRestoreMats;                 // 0x3838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaNPC;                                  // 0x383C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HitGlowBrightnessScalar;                           // 0x3844(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CurrentWeaponMaterials;                            // 0x3848(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USkeletalMeshComponent*>         CurrentWeaponMeshes;                               // 0x3858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstanceDynamic*>       WeaponDissolveMIDs;                                // 0x3868(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         HitGlowBrightnessScalar_Mobile;                    // 0x3878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaDecoy;                                // 0x387C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleRate;                                         // 0x3884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ResIn__DelegateSignature();
	void ResOut__DelegateSignature();
	void SwingRight__DelegateSignature();
	void SwingLeft__DelegateSignature();
	void OnFadeToWhiteTeleported__DelegateSignature();
	void SwingRightEnd__DelegateSignature();
	void SwingLeftEnd__DelegateSignature();
	void SwingRight2__DelegateSignature();
	void SwingLeft2__DelegateSignature();
	void CCPM_isHiddenInProp__DelegateSignature(bool IsHidden);
	void ExecuteUbergraph_PlayerPawn_Athena(int32 EntryPoint);
	void ScalePlayerDown();
	void ScalePlayerUp();
	void OnLandscapeCheckFailedAndTeleported();
	void ToggleRes(float Delay, bool ResIn_0);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void ServerSetCreativeEffectColorIndex(const struct FFCreativeEffectColorIndex& Index_0);
	void IsHiddingInProp(bool IsHidden);
	void OnBeginWaterSprintBoost();
	void OnLanded(const struct FHitResult& Hit);
	void RemoveContrails();
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsLastBody);
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsFirstBody);
	void OnSpawnImmunityTimeReset();
	void Play_Respawn_FX();
	void OnSuccessfulBuildingEdit();
	void RemoveSafeZoneGameplayCueServerToClient();
	void AddSafeZoneGameplayCue();
	void MeleeSwingRight_End();
	void MeleeSwingLeft_End();
	void OnCreativeStartGhost();
	void OnCreativeStopGhost();
	void GameplayCue_Athena_Boost(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void WhiteoutAndTeleport(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool Instant, float Gravity);
	void ClientRunSnowGC(bool Instant);
	void TeleportInNSeconds(float SecondsTillTeleport, const struct FVector& DestLocation, const struct FRotator& DestRotation);
	void GameplayCue_Athena_Reloading(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ActivateInvincibleVisuals(float Duration);
	void GameplayCue_Abilities_Activation_DBNOEnter(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReTrySetupDissolveFx();
	void MeleeSwingRight(bool First_Right);
	void MeleeSwingLeft(bool First_Left);
	void OnReceivedStormSurgeDamage();
	void RemoveSafeZoneGameplayCue();
	void OnOutsideSafeZonePhaseChanged(int32 SafeZonePhase_0);
	void SetSafeZoneTagWhenChanged(int32 NewWhichSafeZoneTag, const struct FGameplayTag& GameplayTag, bool bSpawnGameplayCue);
	void SetSafeZonePhaseAndGameplayCueTag(int32 InSafeZonePhase, bool bSpawnGameplayCue);
	void AddStormFX();
	void PlayResOutFX();
	void PlayResInFX();
	void OnResInDuringWarmup();
	void PlayResOut();
	void OnCharacterCustomizationCompleted(class AFortPlayerPawn* Pawn);
	void OnEnteredReplayRelevancy();
	void OnLeftReplayRelevancy();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void NotifyTeammateSkydivedFromBus();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void RemoveStormFX();
	void GameplayCue_Athena_Player_BeingRevivedFromDBNO(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Athena_Equipping(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void SafeZoneStatusChanged();
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void ReceivePossessed(class AController* NewController);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void FinishAsyncLoadingContrails();
	void AllowContrailLoadingAgain();
	void Activate_Fully_Loaded_Contrails();
	void Setup_Contrails();
	void BeginAsyncLoadingContrails();
	void OnEndParachuteMovement();
	void OnBeginParachuteMovement();
	void Cleanup_Contrails();
	void OnLoaded_C39B713B4FA84EFFEF72F59B01709EA6(class UObject* Loaded);
	void TFX_ResOutCharacterMesh__UpdateFunc();
	void TFX_ResOutCharacterMesh__FinishedFunc();
	void TFX_GlowCharacterMesh__UpdateFunc();
	void TFX_GlowCharacterMesh__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void InitAthenaFoleyAudio();
	void GetLocationInCircle_XY(struct FVector* LocationLocalSpace);
	void EnableWaterAudio(bool Is_Entering_Water);
	void StopLoopingAudio();
	void InWarmup(bool* InWarmup_0);
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation, EItemInteractionType* Out_ItemInteractionType);
	void QueueTeleportIn();
	void QueueTeleportOut();
	void FindBounds();
	void SpawnTeleportationLight();
	void UpdateDissolveFx(float Scalar_Transition, float Scalar_ZHeight, float Scalar_LightIntensity);
	void CleanupDissolveFX();
	void SetupDissolveFx();
	void SetPetHidden(bool NewHidden);
	void RestoreCharacterMats(bool* bFullyCompleted);
	void CleanUpTeleportationFXLight();
	void SetPartyInProgress(bool bIsPartyInProgress);
	void OnLockOnSearchCompleted(bool* bConsumeEvent);
	void LockonSearchCompleteTimedOut();
	void OnRep_PlayRespawnFXOnSpawn();
	void ApplyPawnHighlight(class UObject* Source, const struct FPawnHighlight& HitGlow);
	void Remove_Pawn_Highlight_from_Source(class UObject* Source);
	void Highlight_Pawn_from_Source(class UObject* Source, const struct FPawnHighlight& Highlight, bool Only_Update_If_Current);
	void Get_Highest_Priority_Highlight(class UObject** Source, struct FPawnHighlight* Top_Priority);
	void GalileoMaterialSetup();
	void AddSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	void RemoveSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	void DeactivateContrailComponents();
	void DiscardContrailComponents();
	bool PawnIsNPC();
	bool PawnIsDecoy();
	void Get_Creative_Effect_Data(struct FFCreativeEffectColorIndex* Effect_Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_C">();
	}
	static class APlayerPawn_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(APlayerPawn_Athena_C) == 0x000010, "Wrong alignment on APlayerPawn_Athena_C");
static_assert(sizeof(APlayerPawn_Athena_C) == 0x003890, "Wrong size on APlayerPawn_Athena_C");
static_assert(offsetof(APlayerPawn_Athena_C, UberGraphFrame_PlayerPawn_Athena_C) == 0x0032A0, "Member 'APlayerPawn_Athena_C::UberGraphFrame_PlayerPawn_Athena_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortUnderwaterDamage) == 0x0032A8, "Member 'APlayerPawn_Athena_C::FortUnderwaterDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_ResOutCharacterMesh_LightIntensity_742226E94F2087597CFE2FAE7DCC91EA) == 0x0032B0, "Member 'APlayerPawn_Athena_C::TFX_ResOutCharacterMesh_LightIntensity_742226E94F2087597CFE2FAE7DCC91EA' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_ResOutCharacterMesh_ZHeightParam_742226E94F2087597CFE2FAE7DCC91EA) == 0x0032B4, "Member 'APlayerPawn_Athena_C::TFX_ResOutCharacterMesh_ZHeightParam_742226E94F2087597CFE2FAE7DCC91EA' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_ResOutCharacterMesh_TransitionParam_742226E94F2087597CFE2FAE7DCC91EA) == 0x0032B8, "Member 'APlayerPawn_Athena_C::TFX_ResOutCharacterMesh_TransitionParam_742226E94F2087597CFE2FAE7DCC91EA' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_ResOutCharacterMesh__Direction_742226E94F2087597CFE2FAE7DCC91EA) == 0x0032BC, "Member 'APlayerPawn_Athena_C::TFX_ResOutCharacterMesh__Direction_742226E94F2087597CFE2FAE7DCC91EA' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_ResOutCharacterMesh) == 0x0032C0, "Member 'APlayerPawn_Athena_C::TFX_ResOutCharacterMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_GlowCharacterMesh_EmissiveWarp_72A948944C388F740514419F46EFBC56) == 0x0032C8, "Member 'APlayerPawn_Athena_C::TFX_GlowCharacterMesh_EmissiveWarp_72A948944C388F740514419F46EFBC56' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_GlowCharacterMesh__Direction_72A948944C388F740514419F46EFBC56) == 0x0032CC, "Member 'APlayerPawn_Athena_C::TFX_GlowCharacterMesh__Direction_72A948944C388F740514419F46EFBC56' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TFX_GlowCharacterMesh) == 0x0032D0, "Member 'APlayerPawn_Athena_C::TFX_GlowCharacterMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8) == 0x0032D8, "Member 'APlayerPawn_Athena_C::Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8) == 0x0032DC, "Member 'APlayerPawn_Athena_C::Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0) == 0x0032E0, "Member 'APlayerPawn_Athena_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetHead) == 0x0032E8, "Member 'APlayerPawn_Athena_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetBody) == 0x0032F0, "Member 'APlayerPawn_Athena_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHeadMaterials_0) == 0x0032F8, "Member 'APlayerPawn_Athena_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnBodyMaterials_0) == 0x003308, "Member 'APlayerPawn_Athena_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_FlakVest) == 0x003318, "Member 'APlayerPawn_Athena_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Event_Data) == 0x003338, "Member 'APlayerPawn_Athena_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, EventSpawnEffect) == 0x0033E8, "Member 'APlayerPawn_Athena_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsMale) == 0x0033F0, "Member 'APlayerPawn_Athena_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MenuGoingCommandowWeapon) == 0x0033F8, "Member 'APlayerPawn_Athena_C::MenuGoingCommandowWeapon' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePassThroughSound) == 0x003400, "Member 'APlayerPawn_Athena_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bHasBeenOutsideSafeZone) == 0x003408, "Member 'APlayerPawn_Athena_C::bHasBeenOutsideSafeZone' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ThreatColor) == 0x00340C, "Member 'APlayerPawn_Athena_C::ThreatColor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerKilledSound) == 0x003420, "Member 'APlayerPawn_Athena_C::PlayerKilledSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Contrail_A) == 0x003428, "Member 'APlayerPawn_Athena_C::Contrail_A' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ActiveContrail) == 0x003430, "Member 'APlayerPawn_Athena_C::ActiveContrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLiveContrail) == 0x003438, "Member 'APlayerPawn_Athena_C::bLiveContrail' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Vapor_Effect) == 0x003440, "Member 'APlayerPawn_Athena_C::Vapor_Effect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WindDebrisParticles) == 0x003448, "Member 'APlayerPawn_Athena_C::WindDebrisParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingRainParticles) == 0x003450, "Member 'APlayerPawn_Athena_C::FallingRainParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAuraParticles) == 0x003458, "Member 'APlayerPawn_Athena_C::StormAuraParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningSpawnLocation) == 0x003460, "Member 'APlayerPawn_Athena_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMin) == 0x00346C, "Member 'APlayerPawn_Athena_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMax) == 0x003470, "Member 'APlayerPawn_Athena_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneActor) == 0x003478, "Member 'APlayerPawn_Athena_C::SafeZoneActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensity) == 0x003480, "Member 'APlayerPawn_Athena_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RandomLightningLight) == 0x003488, "Member 'APlayerPawn_Athena_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMin) == 0x003490, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMax) == 0x003494, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashDiameter) == 0x003498, "Member 'APlayerPawn_Athena_C::LightningFlashDiameter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashHeight) == 0x00349C, "Member 'APlayerPawn_Athena_C::LightningFlashHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMin) == 0x0034A0, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMax) == 0x0034A4, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RainCameraLensParticles) == 0x0034A8, "Member 'APlayerPawn_Athena_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, _ChanceOfLightningMesh) == 0x0034B0, "Member 'APlayerPawn_Athena_C::_ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ShowInvulnerableVisuals) == 0x0034B4, "Member 'APlayerPawn_Athena_C::ShowInvulnerableVisuals' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioLoop_Inst) == 0x0034B8, "Member 'APlayerPawn_Athena_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioVolume) == 0x0034C0, "Member 'APlayerPawn_Athena_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingAudioLoop_Inst) == 0x0034C8, "Member 'APlayerPawn_Athena_C::FallingAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsPlayingFallingSound) == 0x0034D0, "Member 'APlayerPawn_Athena_C::bIsPlayingFallingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Walk) == 0x0034D4, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Walk' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Run) == 0x0034D8, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Run' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Sprint) == 0x0034DC, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Sprint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxTrailsLOD) == 0x0034E0, "Member 'APlayerPawn_Athena_C::MaxTrailsLOD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MobilePostProcess) == 0x0034E8, "Member 'APlayerPawn_Athena_C::MobilePostProcess' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsOutsideSafeZoneCached) == 0x0034F0, "Member 'APlayerPawn_Athena_C::bIsOutsideSafeZoneCached' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOutMaterials) == 0x0034F8, "Member 'APlayerPawn_Athena_C::ResOutMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezInFXActor) == 0x003508, "Member 'APlayerPawn_Athena_C::RezInFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezIn) == 0x003510, "Member 'APlayerPawn_Athena_C::bQueueRezIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezOutFXActor) == 0x003518, "Member 'APlayerPawn_Athena_C::RezOutFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezOut) == 0x003520, "Member 'APlayerPawn_Athena_C::bQueueRezOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bWasEverInWarmUp) == 0x003521, "Member 'APlayerPawn_Athena_C::bWasEverInWarmUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bStormAudioCleanedUp) == 0x003522, "Member 'APlayerPawn_Athena_C::bStormAudioCleanedUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Box_Local_Transform) == 0x003530, "Member 'APlayerPawn_Athena_C::Box_Local_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, BoundsRadius) == 0x003560, "Member 'APlayerPawn_Athena_C::BoundsRadius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TeleportationPointLight) == 0x003568, "Member 'APlayerPawn_Athena_C::TeleportationPointLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxLightIntensity) == 0x003570, "Member 'APlayerPawn_Athena_C::MaxLightIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshTop) == 0x003574, "Member 'APlayerPawn_Athena_C::Socket_MeshTop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshBot) == 0x00357C, "Member 'APlayerPawn_Athena_C::Socket_MeshBot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_Transition) == 0x003584, "Member 'APlayerPawn_Athena_C::MIDParam_Transition' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolvePercent) == 0x00358C, "Member 'APlayerPawn_Athena_C::MIDParam_DissolvePercent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDirection) == 0x003594, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveBaseLoc) == 0x00359C, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveBaseLoc' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDistance) == 0x0035A4, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDistance' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveFirstSpawn) == 0x0035AC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveFirstSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Mat_CharacterDissolve) == 0x0035B8, "Member 'APlayerPawn_Athena_C::Mat_CharacterDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DissolveMIDs) == 0x0035C0, "Member 'APlayerPawn_Athena_C::DissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bUseNewTeleportFX) == 0x0035D0, "Member 'APlayerPawn_Athena_C::bUseNewTeleportFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneGameplayCueTag) == 0x0035D4, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneGameplayCueTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePhase) == 0x0035DC, "Member 'APlayerPawn_Athena_C::SafeZonePhase' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhichSafeZoneTag) == 0x0035E0, "Member 'APlayerPawn_Athena_C::WhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bOutsideSafeZoneGameplayCueActive) == 0x0035E4, "Member 'APlayerPawn_Athena_C::bOutsideSafeZoneGameplayCueActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneDamageScalableFloat) == 0x0035E8, "Member 'APlayerPawn_Athena_C::SafeZoneDamageScalableFloat' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bFrontendPartyInProgress) == 0x003608, "Member 'APlayerPawn_Athena_C::bFrontendPartyInProgress' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLockOnInteractionComplete) == 0x003609, "Member 'APlayerPawn_Athena_C::bLockOnInteractionComplete' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResIn) == 0x003610, "Member 'APlayerPawn_Athena_C::ResIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOut) == 0x003620, "Member 'APlayerPawn_Athena_C::ResOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight) == 0x003630, "Member 'APlayerPawn_Athena_C::SwingRight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft) == 0x003640, "Member 'APlayerPawn_Athena_C::SwingLeft' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bSkeletalArrayReady) == 0x003650, "Member 'APlayerPawn_Athena_C::bSkeletalArrayReady' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurDissolveSetupAttempt) == 0x003654, "Member 'APlayerPawn_Athena_C::CurDissolveSetupAttempt' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DBNOEnterSound) == 0x003658, "Member 'APlayerPawn_Athena_C::DBNOEnterSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OnFadeToWhiteTeleported) == 0x003660, "Member 'APlayerPawn_Athena_C::OnFadeToWhiteTeleported' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Ashton) == 0x003670, "Member 'APlayerPawn_Athena_C::Is_Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Ashton) == 0x003678, "Member 'APlayerPawn_Athena_C::Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRightEnd) == 0x003680, "Member 'APlayerPawn_Athena_C::SwingRightEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeftEnd) == 0x003690, "Member 'APlayerPawn_Athena_C::SwingLeftEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneGhostCue) == 0x0036A0, "Member 'APlayerPawn_Athena_C::PhoneGhostCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhiteoutCue) == 0x0036A8, "Member 'APlayerPawn_Athena_C::WhiteoutCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneCue) == 0x0036B0, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone2Cue) == 0x0036B8, "Member 'APlayerPawn_Athena_C::OutsideSafeZone2Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone3Cue) == 0x0036C0, "Member 'APlayerPawn_Athena_C::OutsideSafeZone3Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayRespawnFXOnSpawn) == 0x0036C8, "Member 'APlayerPawn_Athena_C::PlayRespawnFXOnSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerPawnAthena) == 0x0036D0, "Member 'APlayerPawn_Athena_C::PlayerPawnAthena' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight2) == 0x0036D8, "Member 'APlayerPawn_Athena_C::SwingRight2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft2) == 0x0036E8, "Member 'APlayerPawn_Athena_C::SwingLeft2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TestProceduralWaterInIsolation) == 0x0036F8, "Member 'APlayerPawn_Athena_C::TestProceduralWaterInIsolation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NewVar_0) == 0x0036F9, "Member 'APlayerPawn_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_First_Water_Body) == 0x0036FA, "Member 'APlayerPawn_Athena_C::Is_First_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Last_Water_Body) == 0x0036FB, "Member 'APlayerPawn_Athena_C::Is_Last_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AccumulatedNormalizedDiveSpeed) == 0x0036FC, "Member 'APlayerPawn_Athena_C::AccumulatedNormalizedDiveSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WaterSprintBoostTag) == 0x003700, "Member 'APlayerPawn_Athena_C::WaterSprintBoostTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CCPM_isHiddenInProp) == 0x003708, "Member 'APlayerPawn_Athena_C::CCPM_isHiddenInProp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHighlights) == 0x003718, "Member 'APlayerPawn_Athena_C::PawnHighlights' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Source) == 0x003768, "Member 'APlayerPawn_Athena_C::Current_Highlight_Source' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Priority) == 0x003770, "Member 'APlayerPawn_Athena_C::Current_Highlight_Priority' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Invulnerable_Highlight) == 0x003774, "Member 'APlayerPawn_Athena_C::Invulnerable_Highlight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LastCreativeEffectColorIndex) == 0x0037A4, "Member 'APlayerPawn_Athena_C::LastCreativeEffectColorIndex' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsGalileo) == 0x0037AC, "Member 'APlayerPawn_Athena_C::IsGalileo' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ContrailsPoolingMode) == 0x0037AD, "Member 'APlayerPawn_Athena_C::ContrailsPoolingMode' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HotFixSnow) == 0x0037B0, "Member 'APlayerPawn_Athena_C::HotFixSnow' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NoSnowPlaylists) == 0x0037D0, "Member 'APlayerPawn_Athena_C::NoSnowPlaylists' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, GalileoPlaylistTag) == 0x003820, "Member 'APlayerPawn_Athena_C::GalileoPlaylistTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponMIDs) == 0x003828, "Member 'APlayerPawn_Athena_C::WeaponMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AmountOfTimesToAttemptRestoreMats) == 0x003838, "Member 'APlayerPawn_Athena_C::AmountOfTimesToAttemptRestoreMats' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaNPC) == 0x00383C, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaNPC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar) == 0x003844, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMaterials) == 0x003848, "Member 'APlayerPawn_Athena_C::CurrentWeaponMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMeshes) == 0x003858, "Member 'APlayerPawn_Athena_C::CurrentWeaponMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponDissolveMIDs) == 0x003868, "Member 'APlayerPawn_Athena_C::WeaponDissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar_Mobile) == 0x003878, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar_Mobile' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaDecoy) == 0x00387C, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaDecoy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ScaleRate) == 0x003884, "Member 'APlayerPawn_Athena_C::ScaleRate' has a wrong offset!");

}

