#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNS_GM_OnPreviewEmoji

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCNS_GM_OnPreviewEmoji.GCNS_GM_OnPreviewEmoji_C.HandleParticleSystem
// 0x0240 (0x0240 - 0x0000)
struct GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem final
{
public:
	class UParticleSystemComponent*               InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00C8(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x00F0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0110(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaShoutItemDefinition*             K2Node_DynamicCast_AsAthena_Shout_Item_Definition; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaEmojiItemDefinition*             K2Node_DynamicCast_AsAthena_Emoji_Item_Definition; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01B0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem) == 0x000008, "Wrong alignment on GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem");
static_assert(sizeof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem) == 0x000240, "Wrong size on GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, InputPin) == 0x000000, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::InputPin' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, Parameters) == 0x000008, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::Parameters' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000C0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000C4, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000C8, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x0000E0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x0000E8, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x0000F0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000110, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_Location) == 0x000130, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_Normal) == 0x00013C, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000148, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000150, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000158, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000160, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000168, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x00016C, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000170, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, K2Node_DynamicCast_AsAthena_Shout_Item_Definition) == 0x000178, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::K2Node_DynamicCast_AsAthena_Shout_Item_Definition' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, K2Node_DynamicCast_AsAthena_Emoji_Item_Definition) == 0x000188, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::K2Node_DynamicCast_AsAthena_Emoji_Item_Definition' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000198, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A4, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001B0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00023C, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleParticleSystem::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GCNS_GM_OnPreviewEmoji.GCNS_GM_OnPreviewEmoji_C.OnBurst
// 0x0110 (0x0110 - 0x0000)
struct GCNS_GM_OnPreviewEmoji_C_OnBurst final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNS_GM_OnPreviewEmoji_C_OnBurst) == 0x000008, "Wrong alignment on GCNS_GM_OnPreviewEmoji_C_OnBurst");
static_assert(sizeof(GCNS_GM_OnPreviewEmoji_C_OnBurst) == 0x000110, "Wrong size on GCNS_GM_OnPreviewEmoji_C_OnBurst");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, MyTarget) == 0x000000, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, Parameters) == 0x000008, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::Parameters' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, ParticleComponents) == 0x0000C0, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, AudioComponents) == 0x0000D0, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, BurstDecalInstance) == 0x0000E8, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000FC, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_OnBurst, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x00010C, "Member 'GCNS_GM_OnPreviewEmoji_C_OnBurst::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");

// Function GCNS_GM_OnPreviewEmoji.GCNS_GM_OnPreviewEmoji_C.HandleAudioSystem
// 0x0190 (0x0190 - 0x0000)
struct GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem final
{
public:
	class UAudioComponent*                        InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x00C8(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x00F0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0110(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaShoutItemDefinition*             K2Node_DynamicCast_AsAthena_Shout_Item_Definition; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem) == 0x000008, "Wrong alignment on GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem");
static_assert(sizeof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem) == 0x000190, "Wrong size on GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, InputPin) == 0x000000, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::InputPin' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, Parameters) == 0x000008, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::Parameters' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000C0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x0000C4, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x0000C8, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x0000E0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x0000E8, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x0000F0, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000110, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_Location) == 0x000130, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_Normal) == 0x00013C, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000148, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000150, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x000158, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x000160, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x000168, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x00016C, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x000170, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, K2Node_DynamicCast_AsAthena_Shout_Item_Definition) == 0x000180, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::K2Node_DynamicCast_AsAthena_Shout_Item_Definition' has a wrong offset!");
static_assert(offsetof(GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'GCNS_GM_OnPreviewEmoji_C_HandleAudioSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

