#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonutChallengeListEntry

#include "Basic.hpp"


namespace SDK::Params
{

// Function DonutChallengeListEntry.DonutChallengeListEntry_C.ExecuteUbergraph_DonutChallengeListEntry
// 0x0040 (0x0040 - 0x0000)
struct DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InHasReward;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InCompletion;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry) == 0x000008, "Wrong alignment on DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry");
static_assert(sizeof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry) == 0x000040, "Wrong size on DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, EntryPoint) == 0x000000, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_bool_Variable) == 0x000004, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_int_Variable) == 0x000008, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_int_Variable_1) == 0x00000C, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_bool_Variable_1) == 0x000010, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_float_Variable) == 0x000014, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, Temp_float_Variable_1) == 0x000018, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, K2Node_Event_InHasReward) == 0x00001C, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::K2Node_Event_InHasReward' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, K2Node_Select_Default) == 0x000020, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, K2Node_Event_InCompletion) == 0x000024, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::K2Node_Event_InCompletion' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000028, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry, K2Node_Select_Default_1) == 0x000038, "Member 'DonutChallengeListEntry_C_ExecuteUbergraph_DonutChallengeListEntry::K2Node_Select_Default_1' has a wrong offset!");

// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BPIsCompleted
// 0x0001 (0x0001 - 0x0000)
struct DonutChallengeListEntry_C_BPIsCompleted final
{
public:
	bool                                          InCompletion;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DonutChallengeListEntry_C_BPIsCompleted) == 0x000001, "Wrong alignment on DonutChallengeListEntry_C_BPIsCompleted");
static_assert(sizeof(DonutChallengeListEntry_C_BPIsCompleted) == 0x000001, "Wrong size on DonutChallengeListEntry_C_BPIsCompleted");
static_assert(offsetof(DonutChallengeListEntry_C_BPIsCompleted, InCompletion) == 0x000000, "Member 'DonutChallengeListEntry_C_BPIsCompleted::InCompletion' has a wrong offset!");

// Function DonutChallengeListEntry.DonutChallengeListEntry_C.BPHasRewardTexture
// 0x0001 (0x0001 - 0x0000)
struct DonutChallengeListEntry_C_BPHasRewardTexture final
{
public:
	bool                                          InHasReward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DonutChallengeListEntry_C_BPHasRewardTexture) == 0x000001, "Wrong alignment on DonutChallengeListEntry_C_BPHasRewardTexture");
static_assert(sizeof(DonutChallengeListEntry_C_BPHasRewardTexture) == 0x000001, "Wrong size on DonutChallengeListEntry_C_BPHasRewardTexture");
static_assert(offsetof(DonutChallengeListEntry_C_BPHasRewardTexture, InHasReward) == 0x000000, "Member 'DonutChallengeListEntry_C_BPHasRewardTexture::InHasReward' has a wrong offset!");

}

