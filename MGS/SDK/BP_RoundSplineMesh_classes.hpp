#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoundSplineMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoundSplineMesh.BP_RoundSplineMesh_C
// 0x0038 (0x0250 - 0x0218)
class ABP_RoundSplineMesh_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0218(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberofElements;                                  // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumberDrawn;                                    // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Staticmsh;                                         // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tensiom;                                           // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               ForwardAxis;                                       // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Channel0;                                          // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel1;                                          // 0x024A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel2;                                          // 0x024B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoundSplineMesh_C">();
	}
	static class ABP_RoundSplineMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoundSplineMesh_C>();
	}
};
static_assert(alignof(ABP_RoundSplineMesh_C) == 0x000008, "Wrong alignment on ABP_RoundSplineMesh_C");
static_assert(sizeof(ABP_RoundSplineMesh_C) == 0x000250, "Wrong size on ABP_RoundSplineMesh_C");
static_assert(offsetof(ABP_RoundSplineMesh_C, DefaultSceneRoot) == 0x000218, "Member 'ABP_RoundSplineMesh_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, NumberofElements) == 0x000220, "Member 'ABP_RoundSplineMesh_C::NumberofElements' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Radius) == 0x000224, "Member 'ABP_RoundSplineMesh_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, MaxNumberDrawn) == 0x000228, "Member 'ABP_RoundSplineMesh_C::MaxNumberDrawn' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Staticmsh) == 0x000230, "Member 'ABP_RoundSplineMesh_C::Staticmsh' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Material) == 0x000238, "Member 'ABP_RoundSplineMesh_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Tensiom) == 0x000240, "Member 'ABP_RoundSplineMesh_C::Tensiom' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Roll) == 0x000244, "Member 'ABP_RoundSplineMesh_C::Roll' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, ForwardAxis) == 0x000248, "Member 'ABP_RoundSplineMesh_C::ForwardAxis' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Channel0) == 0x000249, "Member 'ABP_RoundSplineMesh_C::Channel0' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Channel1) == 0x00024A, "Member 'ABP_RoundSplineMesh_C::Channel1' has a wrong offset!");
static_assert(offsetof(ABP_RoundSplineMesh_C, Channel2) == 0x00024B, "Member 'ABP_RoundSplineMesh_C::Channel2' has a wrong offset!");

}

