#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Player_SneakySnowmanV2

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Player_SneakySnowmanV2.Athena_Player_SneakySnowmanV2_C
// 0x02D0 (0x0A70 - 0x07A0)
class AAthena_Player_SneakySnowmanV2_C : public ABuildingGameplayActorBalloon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SneakySnowman;                                  // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         UpDOwn_NewTrack_0_BD67B22A4CF8433C66D2D5AAD822DE34; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            UpDOwn__Direction_BD67B22A4CF8433C66D2D5AAD822DE34; // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     UpDOwn;                                            // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateToGroundTimeline_Rot_470A54CC466D5762D035668F5DF86D12; // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RotateToGroundTimeline__Direction_470A54CC466D5762D035668F5DF86D12; // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RotateToGroundTimeline;                            // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropToFloor_Rot_129CAD134FB32339D63E11AA09B71F56;  // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropToFloor_Pos_129CAD134FB32339D63E11AA09B71F56;  // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DropToFloor__Direction_129CAD134FB32339D63E11AA09B71F56; // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DropToFloor;                                       // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustSnowman_Progress_F0A878244A424741C496E29D1303F240; // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AdjustSnowman__Direction_F0A878244A424741C496E29D1303F240; // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AdjustSnowman;                                     // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RotationAlpha_2B72E74C4A07A83085E06F8070B1A777; // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_2B72E74C4A07A83085E06F8070B1A777; // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80D[0x3];                                      // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Effects;                                           // 0x0818(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0820(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDamage;                                       // 0x0828(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxHealth;                                         // 0x0830(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               StartRotation;                                     // 0x0850(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                StartLocation;                                     // 0x085C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GoalLocation;                                      // 0x0868(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoalZRot;                                          // 0x0874(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Adjust_StartZRot;                                  // 0x0878(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Adjust_GoalRot;                                    // 0x0884(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Adjust_StartLocation;                              // 0x0890(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_0;                                          // 0x089C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A8[0x8];                                      // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SavedTransform;                                    // 0x08B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StartHidden;                                       // 0x08E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Drop_StartPos;                                     // 0x08E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Drop_GoalPos;                                      // 0x08F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Drop_GoalRot;                                      // 0x08FC(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attached;                                          // 0x0908(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_909[0x7];                                      // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnJumpIn;                                     // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnJumpOut;                                    // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnDeathFX;                                      // 0x0920(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_921[0x3];                                      // 0x0921(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UnholsterAttempts;                                 // 0x0924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotationOffset;                                    // 0x0928(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PropToSpawnOnExit;                                 // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaintainingRotation;                               // 0x0940(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_941[0x7];                                      // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 FakeActorClass;                                    // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAthena_Fake_SneakySnowmanV2_C*         FakeActor;                                         // 0x0950(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MaintainRotationWhileHiding;                       // 0x0958(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PoppingOut;                                        // 0x0959(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95A[0x6];                                      // 0x095A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPopOut;                                          // 0x0960(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPopIn;                                           // 0x0970(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CurrentlyADSing;                                   // 0x0980(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x3];                                      // 0x0981(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PropPosOffset;                                     // 0x0984(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Jumpingout;                                        // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttachmentOffset;                                  // 0x0998(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A4[0x4];                                      // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnJumpOut;                                         // 0x09A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 ApplicationEffect;                                 // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedOut;                                         // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SnapRotationToForwardOnStand;                      // 0x09C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C2[0x2];                                      // 0x09C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PrevLocation;                                      // 0x09C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotateOnEnter;                                     // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Death_Effects;                                     // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Death_SoundFX;                                     // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReplacingWithProp;                                 // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnCrouch;                                     // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentlyCrouching;                                // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Fake_GoalRot;                                      // 0x09FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                FakePosOffset;                                     // 0x0A08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchSurfaceNormalWhileHiding;                     // 0x0A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A15[0x3];                                      // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnStand;                                      // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelfHidden;                                        // 0x0A20(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          PlayerHidden;                                      // 0x0A21(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_A22[0x2];                                      // 0x0A22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FakeStartRot;                                      // 0x0A24(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         UpDown_OriginalZ;                                  // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A34[0x4];                                      // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSpawnProp;                                       // 0x0A38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Interacting;                                       // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Swimming;                                          // 0x0A49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4A[0x2];                                      // 0x0A4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreviousLocation;                                  // 0x0A4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepMeHidden;                                      // 0x0A58(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A59[0x7];                                      // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAthena_SneakySnowmanV2_InteractSphere_C* InteractSphereRef;                                 // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LaunchOnStopHiding;                                // 0x0A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnPopOut__DelegateSignature();
	void OnPopIn__DelegateSignature();
	void OnJumpOut__DelegateSignature();
	void OnSpawnProp__DelegateSignature(class AActor* Prop);
	void ExecuteUbergraph_Athena_Player_SneakySnowmanV2(int32 EntryPoint);
	void Show_fake_actor();
	void OnClientExitVolume_Event_0(class APlayerState* Client, class AFortVolume* Volume);
	void StateChangedDelegate_Event_0(class AFortMinigame* Minigame, EFortMinigameState MinigameState);
	void StopHiding_Local(bool LaunchPlayer);
	void SetBoxHidden(bool Hidden, bool InstantOnAll);
	void SetPlayerHidden(bool PlayerHidden_0);
	void SetMaintainingRotation_(bool Maintaining, bool HidePlayerIfTrue, const struct FVector& CrouchedLoc, bool RotateToGround_0, bool SetPoppingOut);
	void SetPrevLocation();
	void OnEnterVehicle();
	void RotateToStraight();
	void RotateToGround();
	void StopRotatingFake();
	void OnInteractWithFake(const class AFortPawn* InputPin);
	void JustAttached();
	void SetFakeActor(class AAthena_Fake_SneakySnowmanV2_C* FakeActor_0);
	void SMR_Multicast(bool Maintaining, bool HidePlayerIfTrue, const struct FVector& CrouchedLoc, bool RotateToGround, bool SetPoppingOut);
	void MovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void PlayerDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void DBNO(class AFortPawn* FortPawn, bool bInIsDBNO);
	void DeathEffects(class AActor* DestroyedActor);
	void Destroy();
	void StopHiding(bool LaunchPlayer);
	void SpawnProp(bool PlayMontage, bool RemoveTags);
	void Destroyed(class AActor* DestroyedActor);
	void SpawnEffects();
	void Wobble(float Strength, bool MoveUpAndDown);
	void MovePlayer(class AActor* Player);
	void OnGaveSneakySnowman();
	void CrouchedCheck();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void SpawnParticles();
	void OnTookSneakySnowman();
	void OnStartedJumpingIn();
	void OnCompleted_260935FE4E6B93550ACE848A0EA63F7B(class FName NotifyName);
	void OnBlendOut_260935FE4E6B93550ACE848A0EA63F7B(class FName NotifyName);
	void OnInterrupted_260935FE4E6B93550ACE848A0EA63F7B(class FName NotifyName);
	void OnNotifyBegin_260935FE4E6B93550ACE848A0EA63F7B(class FName NotifyName);
	void OnNotifyEnd_260935FE4E6B93550ACE848A0EA63F7B(class FName NotifyName);
	void UpDOwn__UpdateFunc();
	void UpDOwn__FinishedFunc();
	void RotateToGroundTimeline__UpdateFunc();
	void RotateToGroundTimeline__FinishedFunc();
	void DropToFloor__UpdateFunc();
	void DropToFloor__FinishedFunc();
	void AdjustSnowman__UpdateFunc();
	void AdjustSnowman__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void CheckIfCanJumpOut(class UObject* InteractingPawn, bool* CanInteract);
	struct FVector GetCrouchedLoc();
	void OnStartedMaintaining();
	void OnEndedMaintaining();
	void OnWeaponChange();
	struct FRotator GetFakeRotation();
	void OnRep_SelfHidden();
	void OnRep_PlayerHidden();
	void OnBeginInteractWithSphere();
	void OnInterruptInteractWithSphere();
	void CheckForClipping_(bool* Clipping);
	void GetNewSnowmanTransform(struct FTransform* Transform);
	void GetMaterialInt(int32* MatInt);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Player_SneakySnowmanV2_C">();
	}
	static class AAthena_Player_SneakySnowmanV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Player_SneakySnowmanV2_C>();
	}
};
static_assert(alignof(AAthena_Player_SneakySnowmanV2_C) == 0x000010, "Wrong alignment on AAthena_Player_SneakySnowmanV2_C");
static_assert(sizeof(AAthena_Player_SneakySnowmanV2_C) == 0x000A70, "Wrong size on AAthena_Player_SneakySnowmanV2_C");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UberGraphFrame) == 0x0007A0, "Member 'AAthena_Player_SneakySnowmanV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Cylinder) == 0x0007A8, "Member 'AAthena_Player_SneakySnowmanV2_C::Cylinder' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SM_SneakySnowman) == 0x0007B0, "Member 'AAthena_Player_SneakySnowmanV2_C::SM_SneakySnowman' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Scene) == 0x0007B8, "Member 'AAthena_Player_SneakySnowmanV2_C::Scene' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UpDOwn_NewTrack_0_BD67B22A4CF8433C66D2D5AAD822DE34) == 0x0007C0, "Member 'AAthena_Player_SneakySnowmanV2_C::UpDOwn_NewTrack_0_BD67B22A4CF8433C66D2D5AAD822DE34' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UpDOwn__Direction_BD67B22A4CF8433C66D2D5AAD822DE34) == 0x0007C4, "Member 'AAthena_Player_SneakySnowmanV2_C::UpDOwn__Direction_BD67B22A4CF8433C66D2D5AAD822DE34' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UpDOwn) == 0x0007C8, "Member 'AAthena_Player_SneakySnowmanV2_C::UpDOwn' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, RotateToGroundTimeline_Rot_470A54CC466D5762D035668F5DF86D12) == 0x0007D0, "Member 'AAthena_Player_SneakySnowmanV2_C::RotateToGroundTimeline_Rot_470A54CC466D5762D035668F5DF86D12' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, RotateToGroundTimeline__Direction_470A54CC466D5762D035668F5DF86D12) == 0x0007D4, "Member 'AAthena_Player_SneakySnowmanV2_C::RotateToGroundTimeline__Direction_470A54CC466D5762D035668F5DF86D12' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, RotateToGroundTimeline) == 0x0007D8, "Member 'AAthena_Player_SneakySnowmanV2_C::RotateToGroundTimeline' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, DropToFloor_Rot_129CAD134FB32339D63E11AA09B71F56) == 0x0007E0, "Member 'AAthena_Player_SneakySnowmanV2_C::DropToFloor_Rot_129CAD134FB32339D63E11AA09B71F56' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, DropToFloor_Pos_129CAD134FB32339D63E11AA09B71F56) == 0x0007E4, "Member 'AAthena_Player_SneakySnowmanV2_C::DropToFloor_Pos_129CAD134FB32339D63E11AA09B71F56' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, DropToFloor__Direction_129CAD134FB32339D63E11AA09B71F56) == 0x0007E8, "Member 'AAthena_Player_SneakySnowmanV2_C::DropToFloor__Direction_129CAD134FB32339D63E11AA09B71F56' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, DropToFloor) == 0x0007F0, "Member 'AAthena_Player_SneakySnowmanV2_C::DropToFloor' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, AdjustSnowman_Progress_F0A878244A424741C496E29D1303F240) == 0x0007F8, "Member 'AAthena_Player_SneakySnowmanV2_C::AdjustSnowman_Progress_F0A878244A424741C496E29D1303F240' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, AdjustSnowman__Direction_F0A878244A424741C496E29D1303F240) == 0x0007FC, "Member 'AAthena_Player_SneakySnowmanV2_C::AdjustSnowman__Direction_F0A878244A424741C496E29D1303F240' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, AdjustSnowman) == 0x000800, "Member 'AAthena_Player_SneakySnowmanV2_C::AdjustSnowman' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Timeline_0_RotationAlpha_2B72E74C4A07A83085E06F8070B1A777) == 0x000808, "Member 'AAthena_Player_SneakySnowmanV2_C::Timeline_0_RotationAlpha_2B72E74C4A07A83085E06F8070B1A777' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Timeline_0__Direction_2B72E74C4A07A83085E06F8070B1A777) == 0x00080C, "Member 'AAthena_Player_SneakySnowmanV2_C::Timeline_0__Direction_2B72E74C4A07A83085E06F8070B1A777' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Timeline_0) == 0x000810, "Member 'AAthena_Player_SneakySnowmanV2_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Effects) == 0x000818, "Member 'AAthena_Player_SneakySnowmanV2_C::Effects' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PlayerPawn) == 0x000820, "Member 'AAthena_Player_SneakySnowmanV2_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, TotalDamage) == 0x000828, "Member 'AAthena_Player_SneakySnowmanV2_C::TotalDamage' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, MaxHealth) == 0x000830, "Member 'AAthena_Player_SneakySnowmanV2_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, StartRotation) == 0x000850, "Member 'AAthena_Player_SneakySnowmanV2_C::StartRotation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, StartLocation) == 0x00085C, "Member 'AAthena_Player_SneakySnowmanV2_C::StartLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, GoalLocation) == 0x000868, "Member 'AAthena_Player_SneakySnowmanV2_C::GoalLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, GoalZRot) == 0x000874, "Member 'AAthena_Player_SneakySnowmanV2_C::GoalZRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Adjust_StartZRot) == 0x000878, "Member 'AAthena_Player_SneakySnowmanV2_C::Adjust_StartZRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Adjust_GoalRot) == 0x000884, "Member 'AAthena_Player_SneakySnowmanV2_C::Adjust_GoalRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Adjust_StartLocation) == 0x000890, "Member 'AAthena_Player_SneakySnowmanV2_C::Adjust_StartLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, NewVar_0) == 0x00089C, "Member 'AAthena_Player_SneakySnowmanV2_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SavedTransform) == 0x0008B0, "Member 'AAthena_Player_SneakySnowmanV2_C::SavedTransform' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, StartHidden) == 0x0008E0, "Member 'AAthena_Player_SneakySnowmanV2_C::StartHidden' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Drop_StartPos) == 0x0008E4, "Member 'AAthena_Player_SneakySnowmanV2_C::Drop_StartPos' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Drop_GoalPos) == 0x0008F0, "Member 'AAthena_Player_SneakySnowmanV2_C::Drop_GoalPos' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Drop_GoalRot) == 0x0008FC, "Member 'AAthena_Player_SneakySnowmanV2_C::Drop_GoalRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Attached) == 0x000908, "Member 'AAthena_Player_SneakySnowmanV2_C::Attached' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SoundOnJumpIn) == 0x000910, "Member 'AAthena_Player_SneakySnowmanV2_C::SoundOnJumpIn' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SoundOnJumpOut) == 0x000918, "Member 'AAthena_Player_SneakySnowmanV2_C::SoundOnJumpOut' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SpawnDeathFX) == 0x000920, "Member 'AAthena_Player_SneakySnowmanV2_C::SpawnDeathFX' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UnholsterAttempts) == 0x000924, "Member 'AAthena_Player_SneakySnowmanV2_C::UnholsterAttempts' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, RotationOffset) == 0x000928, "Member 'AAthena_Player_SneakySnowmanV2_C::RotationOffset' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PropToSpawnOnExit) == 0x000938, "Member 'AAthena_Player_SneakySnowmanV2_C::PropToSpawnOnExit' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, MaintainingRotation) == 0x000940, "Member 'AAthena_Player_SneakySnowmanV2_C::MaintainingRotation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, FakeActorClass) == 0x000948, "Member 'AAthena_Player_SneakySnowmanV2_C::FakeActorClass' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, FakeActor) == 0x000950, "Member 'AAthena_Player_SneakySnowmanV2_C::FakeActor' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, MaintainRotationWhileHiding) == 0x000958, "Member 'AAthena_Player_SneakySnowmanV2_C::MaintainRotationWhileHiding' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PoppingOut) == 0x000959, "Member 'AAthena_Player_SneakySnowmanV2_C::PoppingOut' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, OnPopOut) == 0x000960, "Member 'AAthena_Player_SneakySnowmanV2_C::OnPopOut' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, OnPopIn) == 0x000970, "Member 'AAthena_Player_SneakySnowmanV2_C::OnPopIn' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, CurrentlyADSing) == 0x000980, "Member 'AAthena_Player_SneakySnowmanV2_C::CurrentlyADSing' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PropPosOffset) == 0x000984, "Member 'AAthena_Player_SneakySnowmanV2_C::PropPosOffset' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Jumpingout) == 0x000990, "Member 'AAthena_Player_SneakySnowmanV2_C::Jumpingout' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, AttachmentOffset) == 0x000998, "Member 'AAthena_Player_SneakySnowmanV2_C::AttachmentOffset' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, OnJumpOut) == 0x0009A8, "Member 'AAthena_Player_SneakySnowmanV2_C::OnJumpOut' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, ApplicationEffect) == 0x0009B8, "Member 'AAthena_Player_SneakySnowmanV2_C::ApplicationEffect' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, ForcedOut) == 0x0009C0, "Member 'AAthena_Player_SneakySnowmanV2_C::ForcedOut' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SnapRotationToForwardOnStand) == 0x0009C1, "Member 'AAthena_Player_SneakySnowmanV2_C::SnapRotationToForwardOnStand' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PrevLocation) == 0x0009C4, "Member 'AAthena_Player_SneakySnowmanV2_C::PrevLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, RotateOnEnter) == 0x0009D0, "Member 'AAthena_Player_SneakySnowmanV2_C::RotateOnEnter' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Death_Effects) == 0x0009D8, "Member 'AAthena_Player_SneakySnowmanV2_C::Death_Effects' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Death_SoundFX) == 0x0009E0, "Member 'AAthena_Player_SneakySnowmanV2_C::Death_SoundFX' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, ReplacingWithProp) == 0x0009E8, "Member 'AAthena_Player_SneakySnowmanV2_C::ReplacingWithProp' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SoundOnCrouch) == 0x0009F0, "Member 'AAthena_Player_SneakySnowmanV2_C::SoundOnCrouch' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, CurrentlyCrouching) == 0x0009F8, "Member 'AAthena_Player_SneakySnowmanV2_C::CurrentlyCrouching' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Fake_GoalRot) == 0x0009FC, "Member 'AAthena_Player_SneakySnowmanV2_C::Fake_GoalRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, FakePosOffset) == 0x000A08, "Member 'AAthena_Player_SneakySnowmanV2_C::FakePosOffset' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, MatchSurfaceNormalWhileHiding) == 0x000A14, "Member 'AAthena_Player_SneakySnowmanV2_C::MatchSurfaceNormalWhileHiding' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SoundOnStand) == 0x000A18, "Member 'AAthena_Player_SneakySnowmanV2_C::SoundOnStand' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, SelfHidden) == 0x000A20, "Member 'AAthena_Player_SneakySnowmanV2_C::SelfHidden' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PlayerHidden) == 0x000A21, "Member 'AAthena_Player_SneakySnowmanV2_C::PlayerHidden' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, FakeStartRot) == 0x000A24, "Member 'AAthena_Player_SneakySnowmanV2_C::FakeStartRot' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, UpDown_OriginalZ) == 0x000A30, "Member 'AAthena_Player_SneakySnowmanV2_C::UpDown_OriginalZ' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, OnSpawnProp) == 0x000A38, "Member 'AAthena_Player_SneakySnowmanV2_C::OnSpawnProp' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Interacting) == 0x000A48, "Member 'AAthena_Player_SneakySnowmanV2_C::Interacting' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, Swimming) == 0x000A49, "Member 'AAthena_Player_SneakySnowmanV2_C::Swimming' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, PreviousLocation) == 0x000A4C, "Member 'AAthena_Player_SneakySnowmanV2_C::PreviousLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, KeepMeHidden) == 0x000A58, "Member 'AAthena_Player_SneakySnowmanV2_C::KeepMeHidden' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, InteractSphereRef) == 0x000A60, "Member 'AAthena_Player_SneakySnowmanV2_C::InteractSphereRef' has a wrong offset!");
static_assert(offsetof(AAthena_Player_SneakySnowmanV2_C, LaunchOnStopHiding) == 0x000A68, "Member 'AAthena_Player_SneakySnowmanV2_C::LaunchOnStopHiding' has a wrong offset!");

}

