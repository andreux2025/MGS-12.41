#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeSynthTrackComponent

#include "Basic.hpp"

#include "BP_TimeSynthTrackComponent_classes.hpp"
#include "BP_TimeSynthTrackComponent_parameters.hpp"


namespace SDK
{

// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnPlayStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynth_TrackPlayStates              Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETimeSynth_TrackPlayStates              New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::OnPlayStateChanged__DelegateSignature(ETimeSynth_TrackPlayStates Previous, ETimeSynth_TrackPlayStates New)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "OnPlayStateChanged__DelegateSignature");

	Params::BP_TimeSynthTrackComponent_C_OnPlayStateChanged__DelegateSignature Parms{};

	Parms.Previous = Previous;
	Parms.New = New;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetController
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TimeSynthController_Base_C*   TimeSynthController_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::SetController(class ABP_TimeSynthController_Base_C* TimeSynthController_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "SetController");

	Params::BP_TimeSynthTrackComponent_C_SetController Parms{};

	Parms.TimeSynthController_0 = TimeSynthController_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_TimeSynthTrackComponent_C::QueueTrackStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "QueueTrackStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.QueueTrackStop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Play_Outro                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TimeSynthTrackComponent_C::QueueTrackStop(bool Play_Outro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "QueueTrackStop");

	Params::BP_TimeSynthTrackComponent_C_QueueTrackStop Parms{};

	Parms.Play_Outro = Play_Outro;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CalculateTrackLengthBeats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FTimeSynth_TrackStemData> Clips_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::CalculateTrackLengthBeats(TArray<struct FTimeSynth_TrackStemData>& Clips_0, int32* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "CalculateTrackLengthBeats");

	Params::BP_TimeSynthTrackComponent_C_CalculateTrackLengthBeats Parms{};

	Parms.Clips_0 = std::move(Clips_0);

	UObject::ProcessEvent(Func, &Parms);

	Clips_0 = std::move(Parms.Clips_0);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.LoopCurrentTrack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_TimeSynthTrackComponent_C::LoopCurrentTrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "LoopCurrentTrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.HasTransitionForTrack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETimeSynth_TrackNames_MANG              New_Track                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Transition_Found                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTimeSynth_TransitionData        Transition_Data                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::HasTransitionForTrack(const ETimeSynth_TrackNames_MANG& New_Track, bool* Transition_Found, struct FTimeSynth_TransitionData* Transition_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "HasTransitionForTrack");

	Params::BP_TimeSynthTrackComponent_C_HasTransitionForTrack Parms{};

	Parms.New_Track = New_Track;

	UObject::ProcessEvent(Func, &Parms);

	if (Transition_Found != nullptr)
		*Transition_Found = Parms.Transition_Found;

	if (Transition_Data != nullptr)
		*Transition_Data = std::move(Parms.Transition_Data);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynthEventQuantization             QuantizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Beat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::OnQuantizationBeat(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "OnQuantizationBeat");

	Params::BP_TimeSynthTrackComponent_C_OnQuantizationBeat Parms{};

	Parms.QuantizationType = QuantizationType;
	Parms.NumBars = NumBars;
	Parms.Beat = Beat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.CheckPlaystate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETimeSynth_TrackPlayStates              Is_In_Play_State                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TimeSynthTrackComponent_C::CheckPlaystate(ETimeSynth_TrackPlayStates Is_In_Play_State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "CheckPlaystate");

	Params::BP_TimeSynthTrackComponent_C_CheckPlaystate Parms{};

	Parms.Is_In_Play_State = Is_In_Play_State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.SetPlaystate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynth_TrackPlayStates              Is_In_Play_State                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::SetPlaystate(ETimeSynth_TrackPlayStates Is_In_Play_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "SetPlaystate");

	Params::BP_TimeSynthTrackComponent_C_SetPlaystate Parms{};

	Parms.Is_In_Play_State = Is_In_Play_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.OnQuantizationBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETimeSynthEventQuantization             QuantizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Beat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::OnQuantizationBar(ETimeSynthEventQuantization QuantizationType, int32 NumBars, float Beat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "OnQuantizationBar");

	Params::BP_TimeSynthTrackComponent_C_OnQuantizationBar Parms{};

	Parms.QuantizationType = QuantizationType;
	Parms.NumBars = NumBars;
	Parms.Beat = Beat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TimeSynthTrackComponent.BP_TimeSynthTrackComponent_C.GetBPM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TimeSynthTrackComponent_C::GetBPM(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TimeSynthTrackComponent_C", "GetBPM");

	Params::BP_TimeSynthTrackComponent_C_GetBPM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

