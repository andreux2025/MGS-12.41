#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Uncle_Brolly_Passive_ManageFloatingVars

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Uncle_Brolly_Passive_ManageFloatingVars.GA_Uncle_Brolly_Passive_ManageFloatingVars_C
// 0x0078 (0x0AA8 - 0x0A30)
class UGA_Uncle_Brolly_Passive_ManageFloatingVars_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FloatingDuration;                                  // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatTimerInterval;                                // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           H_FloatTimer;                                      // 0x0A40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            H_FallingTag;                                      // 0x0A50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_FloatFallingTag;                                // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  GT_FloatAbility;                                   // 0x0A60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GT_FloatGC;                                        // 0x0A80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         BaseFloatDuration;                                 // 0x0A88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Uncle_Brolly_Passive_ManageFloatingVars(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnDied_Event_0(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ResetFloatingParameters(const struct FHitResult& Hit);
	void IncrementFloatTimer();
	void Added_9C4D361241ECBA12D560D19AD4879012();
	void EventReceived_8294443E439F35A95F4ACB8574D3DC72(const struct FGameplayEventData& Payload);
	void EventReceived_AD71D46B4473D296B23319BC390EB48F(const struct FGameplayEventData& Payload);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Uncle_Brolly_Passive_ManageFloatingVars_C">();
	}
	static class UGA_Uncle_Brolly_Passive_ManageFloatingVars_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Uncle_Brolly_Passive_ManageFloatingVars_C>();
	}
};
static_assert(alignof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C) == 0x000008, "Wrong alignment on UGA_Uncle_Brolly_Passive_ManageFloatingVars_C");
static_assert(sizeof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C) == 0x000AA8, "Wrong size on UGA_Uncle_Brolly_Passive_ManageFloatingVars_C");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, UberGraphFrame) == 0x000A30, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, FloatingDuration) == 0x000A38, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::FloatingDuration' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, FloatTimerInterval) == 0x000A3C, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::FloatTimerInterval' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, H_FloatTimer) == 0x000A40, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::H_FloatTimer' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, PlayerPawn) == 0x000A48, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, H_FallingTag) == 0x000A50, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::H_FallingTag' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, GE_FloatFallingTag) == 0x000A58, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::GE_FloatFallingTag' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, GT_FloatAbility) == 0x000A60, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::GT_FloatAbility' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, GT_FloatGC) == 0x000A80, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::GT_FloatGC' has a wrong offset!");
static_assert(offsetof(UGA_Uncle_Brolly_Passive_ManageFloatingVars_C, BaseFloatDuration) == 0x000A88, "Member 'UGA_Uncle_Brolly_Passive_ManageFloatingVars_C::BaseFloatDuration' has a wrong offset!");

}

