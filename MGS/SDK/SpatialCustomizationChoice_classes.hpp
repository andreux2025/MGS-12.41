#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialCustomizationChoice

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SpatialCustomizationChoice.SpatialCustomizationChoice_C
// 0x0060 (0x02F8 - 0x0298)
class USpatialCustomizationChoice_C final : public UAthenaSpatialCustomizationChoice
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover_alternate;                                   // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_hoverbottom;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_hovertop;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_timer;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Whole;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ExclamationMark;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_StatusIcon;                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<float>                                 GlitchinessRandomizer;                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         OverrideSize;                                      // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowStatusIcon;                                    // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_SpatialCustomizationChoice(int32 EntryPoint);
	void Play_reversed_hover_alternate();
	void Play_hover_alternate();
	void PreConstruct(bool IsDesignTime);
	void OnUnhovered();
	void OnHovered();
	void Construct();
	void OnSetupChoice(ESpatialCustomizationCategoryState State, const struct FLinearColor& Color);
	void Set_Hover_Color(const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpatialCustomizationChoice_C">();
	}
	static class USpatialCustomizationChoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialCustomizationChoice_C>();
	}
};
static_assert(alignof(USpatialCustomizationChoice_C) == 0x000008, "Wrong alignment on USpatialCustomizationChoice_C");
static_assert(sizeof(USpatialCustomizationChoice_C) == 0x0002F8, "Wrong size on USpatialCustomizationChoice_C");
static_assert(offsetof(USpatialCustomizationChoice_C, UberGraphFrame) == 0x000298, "Member 'USpatialCustomizationChoice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Hover_alternate) == 0x0002A0, "Member 'USpatialCustomizationChoice_C::Hover_alternate' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Hover) == 0x0002A8, "Member 'USpatialCustomizationChoice_C::Hover' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Image_hoverbottom) == 0x0002B0, "Member 'USpatialCustomizationChoice_C::Image_hoverbottom' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Image_hovertop) == 0x0002B8, "Member 'USpatialCustomizationChoice_C::Image_hovertop' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Image_timer) == 0x0002C0, "Member 'USpatialCustomizationChoice_C::Image_timer' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, SizeBox_Whole) == 0x0002C8, "Member 'USpatialCustomizationChoice_C::SizeBox_Whole' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, Text_ExclamationMark) == 0x0002D0, "Member 'USpatialCustomizationChoice_C::Text_ExclamationMark' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, WidgetSwitcher_StatusIcon) == 0x0002D8, "Member 'USpatialCustomizationChoice_C::WidgetSwitcher_StatusIcon' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, GlitchinessRandomizer) == 0x0002E0, "Member 'USpatialCustomizationChoice_C::GlitchinessRandomizer' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, OverrideSize) == 0x0002F0, "Member 'USpatialCustomizationChoice_C::OverrideSize' has a wrong offset!");
static_assert(offsetof(USpatialCustomizationChoice_C, ShowStatusIcon) == 0x0002F4, "Member 'USpatialCustomizationChoice_C::ShowStatusIcon' has a wrong offset!");

}

