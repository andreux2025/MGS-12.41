#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeImageGrid_Button

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeImageGrid_Button.ChallengeImageGrid_Button_C
// 0x0090 (0x0C48 - 0x0BB8)
class UChallengeImageGrid_Button_C final : public UAthenaChallengeImageGridEntry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnLoadMinusLocked;                                 // 0x0BC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnLoadMinusUnlocked;                               // 0x0BC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LowPulse;                                          // 0x0BD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlateRemoval;                                      // 0x0BE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChipInstall;                                       // 0x0BE8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       BlockNumber;                                       // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chip;                                              // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircuitBurst;                                      // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnergyMarker;                                      // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EnergyMarker_base;                                 // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash;                                             // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         GridLocationHB;                                    // 0x0C20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PuzzlePiece;                                       // 0x0C28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Swipe;                                             // 0x0C30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Zaps;                                              // 0x0C38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          TransitionState;                                   // 0x0C40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Completed;                                         // 0x0C41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Locked;                                            // 0x0C42(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ChallengeImageGrid_Button(int32 EntryPoint);
	void SetupGridLocationText();
	void SetupLockedToOwnState();
	void Construct();
	void TransitionFromOwnedToCompletedState();
	void TransitionFromLockedToOwnedState();
	void BP_OnUnhovered();
	void BP_OnHovered();
	void OnChallengeSet(bool bIsComplete, bool bIsLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeImageGrid_Button_C">();
	}
	static class UChallengeImageGrid_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeImageGrid_Button_C>();
	}
};
static_assert(alignof(UChallengeImageGrid_Button_C) == 0x000008, "Wrong alignment on UChallengeImageGrid_Button_C");
static_assert(sizeof(UChallengeImageGrid_Button_C) == 0x000C48, "Wrong size on UChallengeImageGrid_Button_C");
static_assert(offsetof(UChallengeImageGrid_Button_C, UberGraphFrame) == 0x000BB8, "Member 'UChallengeImageGrid_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, OnLoadMinusLocked) == 0x000BC0, "Member 'UChallengeImageGrid_Button_C::OnLoadMinusLocked' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, OnLoadMinusUnlocked) == 0x000BC8, "Member 'UChallengeImageGrid_Button_C::OnLoadMinusUnlocked' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, LowPulse) == 0x000BD0, "Member 'UChallengeImageGrid_Button_C::LowPulse' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Hover) == 0x000BD8, "Member 'UChallengeImageGrid_Button_C::Hover' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, PlateRemoval) == 0x000BE0, "Member 'UChallengeImageGrid_Button_C::PlateRemoval' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, ChipInstall) == 0x000BE8, "Member 'UChallengeImageGrid_Button_C::ChipInstall' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, BlockNumber) == 0x000BF0, "Member 'UChallengeImageGrid_Button_C::BlockNumber' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Chip) == 0x000BF8, "Member 'UChallengeImageGrid_Button_C::Chip' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, CircuitBurst) == 0x000C00, "Member 'UChallengeImageGrid_Button_C::CircuitBurst' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, EnergyMarker) == 0x000C08, "Member 'UChallengeImageGrid_Button_C::EnergyMarker' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, EnergyMarker_base) == 0x000C10, "Member 'UChallengeImageGrid_Button_C::EnergyMarker_base' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Flash) == 0x000C18, "Member 'UChallengeImageGrid_Button_C::Flash' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, GridLocationHB) == 0x000C20, "Member 'UChallengeImageGrid_Button_C::GridLocationHB' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, PuzzlePiece) == 0x000C28, "Member 'UChallengeImageGrid_Button_C::PuzzlePiece' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Swipe) == 0x000C30, "Member 'UChallengeImageGrid_Button_C::Swipe' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Zaps) == 0x000C38, "Member 'UChallengeImageGrid_Button_C::Zaps' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, TransitionState) == 0x000C40, "Member 'UChallengeImageGrid_Button_C::TransitionState' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Completed) == 0x000C41, "Member 'UChallengeImageGrid_Button_C::Completed' has a wrong offset!");
static_assert(offsetof(UChallengeImageGrid_Button_C, Locked) == 0x000C42, "Member 'UChallengeImageGrid_Button_C::Locked' has a wrong offset!");

}

