#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeMapPoiMarker

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeMapPoiMarker.ChallengeMapPoiMarker_C
// 0x0128 (0x0398 - 0x0270)
class UChallengeMapPoiMarker_C final : public UAthenaFrontEndMapPoiIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Redacted;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            POI_SpyBaseColor;                                  // 0x0280(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            POI_NormalColor;                                   // 0x02A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            POI_Redacted;                                      // 0x02D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateFontInfo                         SpayBaseFont;                                      // 0x02F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         DefaultFont;                                       // 0x0348(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChallengeMapPoiMarker(int32 EntryPoint);
	void HandleTextChanged(bool bIsRedacted, bool bIsSpybase);
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeMapPoiMarker_C">();
	}
	static class UChallengeMapPoiMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeMapPoiMarker_C>();
	}
};
static_assert(alignof(UChallengeMapPoiMarker_C) == 0x000008, "Wrong alignment on UChallengeMapPoiMarker_C");
static_assert(sizeof(UChallengeMapPoiMarker_C) == 0x000398, "Wrong size on UChallengeMapPoiMarker_C");
static_assert(offsetof(UChallengeMapPoiMarker_C, UberGraphFrame) == 0x000270, "Member 'UChallengeMapPoiMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, Image_Redacted) == 0x000278, "Member 'UChallengeMapPoiMarker_C::Image_Redacted' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, POI_SpyBaseColor) == 0x000280, "Member 'UChallengeMapPoiMarker_C::POI_SpyBaseColor' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, POI_NormalColor) == 0x0002A8, "Member 'UChallengeMapPoiMarker_C::POI_NormalColor' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, POI_Redacted) == 0x0002D0, "Member 'UChallengeMapPoiMarker_C::POI_Redacted' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, SpayBaseFont) == 0x0002F8, "Member 'UChallengeMapPoiMarker_C::SpayBaseFont' has a wrong offset!");
static_assert(offsetof(UChallengeMapPoiMarker_C, DefaultFont) == 0x000348, "Member 'UChallengeMapPoiMarker_C::DefaultFont' has a wrong offset!");

}

