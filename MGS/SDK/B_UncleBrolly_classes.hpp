#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_UncleBrolly

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "B_Melee_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_UncleBrolly.B_UncleBrolly_C
// 0x00A8 (0x0D60 - 0x0CB8)
class AB_UncleBrolly_C final : public AB_Melee_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_UncleBrolly_C;                    // 0x0CB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Poise_Power_Audio;                                 // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   KineticEnergyFX;                                   // 0x0CC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortMantisWeaponComponent*             FortMantisWeapon;                                  // 0x0CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               BlockBreakWarning;                                 // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerCharacter;                                   // 0x0CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_MeleeAttackAbility;                              // 0x0CE8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_HudElementToHide;                                // 0x0D08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Timer_ShowReticleStatus;                           // 0x0D28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPoise;                                      // 0x0D30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlockBreakDuration;                                // 0x0D34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenOffMinusMID;                                 // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenOnMinusMID;                                  // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Anim_Finisher;                                     // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Attack5_Impact;                                 // 0x0D50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Open;                                           // 0x0D58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_B_UncleBrolly(int32 EntryPoint);
	void Update_Audio(float Current_Poise);
	void OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UFXSystemComponent* SpawnedPSC);
	void ToggleAbilityPrompts(bool Visible);
	void CurrentPoiseChanged(float CurrentPoise_0);
	void OnWeaponAttached();
	void ShowReticleStatusDisplay();
	void ReticleStatusDisplay(bool Hide);
	void ReceiveBeginPlay();
	void BlockBreak();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_UncleBrolly_C">();
	}
	static class AB_UncleBrolly_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_UncleBrolly_C>();
	}
};
static_assert(alignof(AB_UncleBrolly_C) == 0x000008, "Wrong alignment on AB_UncleBrolly_C");
static_assert(sizeof(AB_UncleBrolly_C) == 0x000D60, "Wrong size on AB_UncleBrolly_C");
static_assert(offsetof(AB_UncleBrolly_C, UberGraphFrame_B_UncleBrolly_C) == 0x000CB8, "Member 'AB_UncleBrolly_C::UberGraphFrame_B_UncleBrolly_C' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, Poise_Power_Audio) == 0x000CC0, "Member 'AB_UncleBrolly_C::Poise_Power_Audio' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, KineticEnergyFX) == 0x000CC8, "Member 'AB_UncleBrolly_C::KineticEnergyFX' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, FortMantisWeapon) == 0x000CD0, "Member 'AB_UncleBrolly_C::FortMantisWeapon' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, BlockBreakWarning) == 0x000CD8, "Member 'AB_UncleBrolly_C::BlockBreakWarning' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, PlayerCharacter) == 0x000CE0, "Member 'AB_UncleBrolly_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, T_MeleeAttackAbility) == 0x000CE8, "Member 'AB_UncleBrolly_C::T_MeleeAttackAbility' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, T_HudElementToHide) == 0x000D08, "Member 'AB_UncleBrolly_C::T_HudElementToHide' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, Timer_ShowReticleStatus) == 0x000D28, "Member 'AB_UncleBrolly_C::Timer_ShowReticleStatus' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, CurrentPoise) == 0x000D30, "Member 'AB_UncleBrolly_C::CurrentPoise' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, BlockBreakDuration) == 0x000D34, "Member 'AB_UncleBrolly_C::BlockBreakDuration' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, ScreenOffMinusMID) == 0x000D38, "Member 'AB_UncleBrolly_C::ScreenOffMinusMID' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, ScreenOnMinusMID) == 0x000D40, "Member 'AB_UncleBrolly_C::ScreenOnMinusMID' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, Anim_Finisher) == 0x000D48, "Member 'AB_UncleBrolly_C::Anim_Finisher' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, GC_Attack5_Impact) == 0x000D50, "Member 'AB_UncleBrolly_C::GC_Attack5_Impact' has a wrong offset!");
static_assert(offsetof(AB_UncleBrolly_C, Is_Open) == 0x000D58, "Member 'AB_UncleBrolly_C::Is_Open' has a wrong offset!");

}

