#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialFactionPerkProgress

#include "Basic.hpp"

#include "SpatialFactionPerkProgress_classes.hpp"
#include "SpatialFactionPerkProgress_parameters.hpp"


namespace SDK
{

// Function SpatialFactionPerkProgress.SpatialFactionPerkProgress_C.ExecuteUbergraph_SpatialFactionPerkProgress
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpatialFactionPerkProgress_C::ExecuteUbergraph_SpatialFactionPerkProgress(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialFactionPerkProgress_C", "ExecuteUbergraph_SpatialFactionPerkProgress");

	Params::SpatialFactionPerkProgress_C_ExecuteUbergraph_SpatialFactionPerkProgress Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialFactionPerkProgress.SpatialFactionPerkProgress_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USpatialFactionPerkProgress_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialFactionPerkProgress_C", "PreConstruct");

	Params::SpatialFactionPerkProgress_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialFactionPerkProgress.SpatialFactionPerkProgress_C.OnFactionSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsCurrentFaction                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USpatialFactionPerkProgress_C::OnFactionSet(bool bIsCurrentFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialFactionPerkProgress_C", "OnFactionSet");

	Params::SpatialFactionPerkProgress_C_OnFactionSet Parms{};

	Parms.bIsCurrentFaction = bIsCurrentFaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpatialFactionPerkProgress.SpatialFactionPerkProgress_C.OnInitializePerkProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   FactionNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PerkLevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRevealed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsCurrentFaction                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USpatialFactionPerkProgress_C::OnInitializePerkProgress(int32 FactionNumber, int32 PerkLevel, float PercentProgress, bool bIsRevealed, bool bIsCurrentFaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpatialFactionPerkProgress_C", "OnInitializePerkProgress");

	Params::SpatialFactionPerkProgress_C_OnInitializePerkProgress Parms{};

	Parms.FactionNumber = FactionNumber;
	Parms.PerkLevel = PerkLevel;
	Parms.PercentProgress = PercentProgress;
	Parms.bIsRevealed = bIsRevealed;
	Parms.bIsCurrentFaction = bIsCurrentFaction;

	UObject::ProcessEvent(Func, &Parms);
}

}

