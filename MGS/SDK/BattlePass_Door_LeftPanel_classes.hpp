#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePass_Door_LeftPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePass_Door_LeftPanel.BattlePass_Door_LeftPanel_C
// 0x0028 (0x02B0 - 0x0288)
class UBattlePass_Door_LeftPanel_C final : public UFortEventLevelNavigationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFakeStatsGraphs_C*                     FakeStatsGraphs_Bottom;                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFakeStatsGraphs_C*                     FakeStatsGraphs_Top;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelHeaderText;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelNumber;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BattlePass_Door_LeftPanel(int32 EntryPoint);
	void InitLevel(int32 Level);
	void SetStyleUnpurchased();
	void SetDoorPanelStyle(bool Purchased);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePass_Door_LeftPanel_C">();
	}
	static class UBattlePass_Door_LeftPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePass_Door_LeftPanel_C>();
	}
};
static_assert(alignof(UBattlePass_Door_LeftPanel_C) == 0x000008, "Wrong alignment on UBattlePass_Door_LeftPanel_C");
static_assert(sizeof(UBattlePass_Door_LeftPanel_C) == 0x0002B0, "Wrong size on UBattlePass_Door_LeftPanel_C");
static_assert(offsetof(UBattlePass_Door_LeftPanel_C, UberGraphFrame) == 0x000288, "Member 'UBattlePass_Door_LeftPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_LeftPanel_C, FakeStatsGraphs_Bottom) == 0x000290, "Member 'UBattlePass_Door_LeftPanel_C::FakeStatsGraphs_Bottom' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_LeftPanel_C, FakeStatsGraphs_Top) == 0x000298, "Member 'UBattlePass_Door_LeftPanel_C::FakeStatsGraphs_Top' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_LeftPanel_C, LevelHeaderText) == 0x0002A0, "Member 'UBattlePass_Door_LeftPanel_C::LevelHeaderText' has a wrong offset!");
static_assert(offsetof(UBattlePass_Door_LeftPanel_C, LevelNumber) == 0x0002A8, "Member 'UBattlePass_Door_LeftPanel_C::LevelNumber' has a wrong offset!");

}

