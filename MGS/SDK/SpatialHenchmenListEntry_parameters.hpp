#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpatialHenchmenListEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SpatialHenchmenListEntry.SpatialHenchmenListEntry_C.ExecuteUbergraph_SpatialHenchmenListEntry
// 0x0190 (0x0190 - 0x0000)
struct SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Completed;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Description;                    // 0x0018(0x0018)()
	int32                                         K2Node_CustomEvent_NeededCount;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentCount;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0100(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0128(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0150(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry) == 0x000008, "Wrong alignment on SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry");
static_assert(sizeof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry) == 0x000190, "Wrong size on SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, EntryPoint) == 0x000000, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_bool_Variable) == 0x000004, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_bool_Variable_1) == 0x000005, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Event_bIsExpanded) == 0x000006, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Event_bIsSelected) == 0x000007, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Event_ListItemObject) == 0x000008, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_CustomEvent_Completed) == 0x000010, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_CustomEvent_Completed' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_CustomEvent_Description) == 0x000018, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_CustomEvent_Description' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_CustomEvent_NeededCount) == 0x000030, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_CustomEvent_NeededCount' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_CustomEvent_CurrentCount) == 0x000034, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_CustomEvent_CurrentCount' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000078, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000C0, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_MakeArray_Array) == 0x0000C8, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D8, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F8, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_byte_Variable) == 0x0000F9, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_byte_Variable_1) == 0x0000FA, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_MakeStruct_SlateColor) == 0x000100, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_MakeStruct_SlateColor_1) == 0x000128, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Select_Default) == 0x000150, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_bool_Variable_2) == 0x000178, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_int_Variable) == 0x00017C, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Select_Default_1) == 0x000180, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, Temp_int_Variable_1) == 0x000184, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry, K2Node_Select_Default_2) == 0x000188, "Member 'SpatialHenchmenListEntry_C_ExecuteUbergraph_SpatialHenchmenListEntry::K2Node_Select_Default_2' has a wrong offset!");

// Function SpatialHenchmenListEntry.SpatialHenchmenListEntry_C.SetListItemDetails
// 0x0028 (0x0028 - 0x0000)
struct SpatialHenchmenListEntry_C_SetListItemDetails final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         NeededCount;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialHenchmenListEntry_C_SetListItemDetails) == 0x000008, "Wrong alignment on SpatialHenchmenListEntry_C_SetListItemDetails");
static_assert(sizeof(SpatialHenchmenListEntry_C_SetListItemDetails) == 0x000028, "Wrong size on SpatialHenchmenListEntry_C_SetListItemDetails");
static_assert(offsetof(SpatialHenchmenListEntry_C_SetListItemDetails, Completed) == 0x000000, "Member 'SpatialHenchmenListEntry_C_SetListItemDetails::Completed' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_SetListItemDetails, Description) == 0x000008, "Member 'SpatialHenchmenListEntry_C_SetListItemDetails::Description' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_SetListItemDetails, NeededCount) == 0x000020, "Member 'SpatialHenchmenListEntry_C_SetListItemDetails::NeededCount' has a wrong offset!");
static_assert(offsetof(SpatialHenchmenListEntry_C_SetListItemDetails, CurrentCount) == 0x000024, "Member 'SpatialHenchmenListEntry_C_SetListItemDetails::CurrentCount' has a wrong offset!");

// Function SpatialHenchmenListEntry.SpatialHenchmenListEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct SpatialHenchmenListEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpatialHenchmenListEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on SpatialHenchmenListEntry_C_OnListItemObjectSet");
static_assert(sizeof(SpatialHenchmenListEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on SpatialHenchmenListEntry_C_OnListItemObjectSet");
static_assert(offsetof(SpatialHenchmenListEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'SpatialHenchmenListEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function SpatialHenchmenListEntry.SpatialHenchmenListEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'SpatialHenchmenListEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function SpatialHenchmenListEntry.SpatialHenchmenListEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'SpatialHenchmenListEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

}

