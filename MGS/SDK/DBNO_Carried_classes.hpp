#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBNO_Carried

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DBNO_Carried.DBNO_Carried_C
// 0x0B30 (0x28A0 - 0x1D70)
class UDBNO_Carried_C final : public UFortPlayerAnimInstance_DBNOCarried
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1D70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1D78(0x0030)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1DA8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1DC8(0x0108)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1ED0(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1FD8(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2050(0x00C8)()
	uint8                                         Pad_2118[0x8];                                     // 0x2118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x2120(0x01E0)()
	EFortPlayerAnimBodyType                       __CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40; // 0x2300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomGender                             __CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40; // 0x2301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2302[0x6];                                     // 0x2302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LinkedAnimGraph              AnimGraphNode_SubInstance;                         // 0x2308(0x0098)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x23A0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x23C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x23E8(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x2410(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2458(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2488(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2500(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2530(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2578(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x25A8(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x2658(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2720(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x27D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2800(0x0028)()
	bool                                          Carried;                                           // 0x2828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2829[0x7];                                     // 0x2829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   CarrierPawn;                                       // 0x2830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                CarrierAnimBP;                                     // 0x2838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LHandIKLocation;                                   // 0x2840(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHandIKRotation;                                   // 0x284C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TempAttachLocation;                                // 0x2858(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempAttachRotation;                                // 0x2864(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SubAnimPhysicsWeight;                              // 0x2870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingDropped;                                    // 0x2874(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2875[0x3];                                     // 0x2875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DropMontagePosition;                               // 0x2878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_287C[0x4];                                     // 0x287C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CarrierDropMontage;                                // 0x2880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CarrierPickupMontage;                              // 0x2888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingPickedUp;                                   // 0x2890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2891[0x3];                                     // 0x2891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PickupMontagePosition;                             // 0x2894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionFromPickupToIdle;                        // 0x2898(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DBNO_Carried(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DBNO_Carried_AnimGraphNode_ApplyAdditive_56B19EE040BEEBC25D674F8DC99831B9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DBNO_Carried_AnimGraphNode_ModifyBone_59E069244645BEF22808AB9196186F3F();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBNO_Carried_C">();
	}
	static class UDBNO_Carried_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBNO_Carried_C>();
	}
};
static_assert(alignof(UDBNO_Carried_C) == 0x000010, "Wrong alignment on UDBNO_Carried_C");
static_assert(sizeof(UDBNO_Carried_C) == 0x0028A0, "Wrong size on UDBNO_Carried_C");
static_assert(offsetof(UDBNO_Carried_C, UberGraphFrame) == 0x001D70, "Member 'UDBNO_Carried_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_Root) == 0x001D78, "Member 'UDBNO_Carried_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_LocalToComponentSpace) == 0x001DA8, "Member 'UDBNO_Carried_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ModifyBone_1) == 0x001DC8, "Member 'UDBNO_Carried_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ModifyBone) == 0x001ED0, "Member 'UDBNO_Carried_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequencePlayer_1) == 0x001FD8, "Member 'UDBNO_Carried_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ApplyAdditive) == 0x002050, "Member 'UDBNO_Carried_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TwoBoneIK) == 0x002120, "Member 'UDBNO_Carried_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, __CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40) == 0x002300, "Member 'UDBNO_Carried_C::__CustomProperty_my_animbodytype_BC9172D64300E6A13C48509FE2988A40' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, __CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40) == 0x002301, "Member 'UDBNO_Carried_C::__CustomProperty_my_gender_BC9172D64300E6A13C48509FE2988A40' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SubInstance) == 0x002308, "Member 'UDBNO_Carried_C::AnimGraphNode_SubInstance' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_ComponentToLocalSpace) == 0x0023A0, "Member 'UDBNO_Carried_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TransitionResult_1) == 0x0023C0, "Member 'UDBNO_Carried_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TransitionResult) == 0x0023E8, "Member 'UDBNO_Carried_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequenceEvaluator_1) == 0x002410, "Member 'UDBNO_Carried_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult_2) == 0x002458, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequencePlayer) == 0x002488, "Member 'UDBNO_Carried_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult_1) == 0x002500, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SequenceEvaluator) == 0x002530, "Member 'UDBNO_Carried_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateResult) == 0x002578, "Member 'UDBNO_Carried_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_StateMachine) == 0x0025A8, "Member 'UDBNO_Carried_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_TwoWayBlend) == 0x002658, "Member 'UDBNO_Carried_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_SaveCachedPose) == 0x002720, "Member 'UDBNO_Carried_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_UseCachedPose_1) == 0x0027D8, "Member 'UDBNO_Carried_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, AnimGraphNode_UseCachedPose) == 0x002800, "Member 'UDBNO_Carried_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, Carried) == 0x002828, "Member 'UDBNO_Carried_C::Carried' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierPawn) == 0x002830, "Member 'UDBNO_Carried_C::CarrierPawn' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierAnimBP) == 0x002838, "Member 'UDBNO_Carried_C::CarrierAnimBP' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, LHandIKLocation) == 0x002840, "Member 'UDBNO_Carried_C::LHandIKLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, LHandIKRotation) == 0x00284C, "Member 'UDBNO_Carried_C::LHandIKRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TempAttachLocation) == 0x002858, "Member 'UDBNO_Carried_C::TempAttachLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TempAttachRotation) == 0x002864, "Member 'UDBNO_Carried_C::TempAttachRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, SubAnimPhysicsWeight) == 0x002870, "Member 'UDBNO_Carried_C::SubAnimPhysicsWeight' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, IsBeingDropped) == 0x002874, "Member 'UDBNO_Carried_C::IsBeingDropped' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, DropMontagePosition) == 0x002878, "Member 'UDBNO_Carried_C::DropMontagePosition' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierDropMontage) == 0x002880, "Member 'UDBNO_Carried_C::CarrierDropMontage' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, CarrierPickupMontage) == 0x002888, "Member 'UDBNO_Carried_C::CarrierPickupMontage' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, IsBeingPickedUp) == 0x002890, "Member 'UDBNO_Carried_C::IsBeingPickedUp' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, PickupMontagePosition) == 0x002894, "Member 'UDBNO_Carried_C::PickupMontagePosition' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_C, TransitionFromPickupToIdle) == 0x002898, "Member 'UDBNO_Carried_C::TransitionFromPickupToIdle' has a wrong offset!");

}

