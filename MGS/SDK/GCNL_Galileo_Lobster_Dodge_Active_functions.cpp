#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Galileo_Lobster_Dodge_Active

#include "Basic.hpp"

#include "GCNL_Galileo_Lobster_Dodge_Active_classes.hpp"
#include "GCNL_Galileo_Lobster_Dodge_Active_parameters.hpp"


namespace SDK
{

// Function GCNL_Galileo_Lobster_Dodge_Active.GCNL_Galileo_Lobster_Dodge_Active_C.ExecuteUbergraph_GCNL_Galileo_Lobster_Dodge_Active
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Galileo_Lobster_Dodge_Active_C::ExecuteUbergraph_GCNL_Galileo_Lobster_Dodge_Active(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Galileo_Lobster_Dodge_Active_C", "ExecuteUbergraph_GCNL_Galileo_Lobster_Dodge_Active");

	Params::GCNL_Galileo_Lobster_Dodge_Active_C_ExecuteUbergraph_GCNL_Galileo_Lobster_Dodge_Active Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Galileo_Lobster_Dodge_Active.GCNL_Galileo_Lobster_Dodge_Active_C.OnLoopingStart
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class UParticleSystemComponent*> ParticleComponents                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
// TArray<class UAudioComponent*>          AudioComponents                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)

void AGCNL_Galileo_Lobster_Dodge_Active_C::OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Galileo_Lobster_Dodge_Active_C", "OnLoopingStart");

	Params::GCNL_Galileo_Lobster_Dodge_Active_C_OnLoopingStart Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);
	Parms.ParticleComponents = std::move(ParticleComponents);
	Parms.AudioComponents = std::move(AudioComponents);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCNL_Galileo_Lobster_Dodge_Active.GCNL_Galileo_Lobster_Dodge_Active_C.GetSoundFromBank
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Sound_Exists                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USoundBase*                       Sound                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCNL_Galileo_Lobster_Dodge_Active_C::GetSoundFromBank(class AActor* Target_Actor, bool* Sound_Exists, class USoundBase** Sound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCNL_Galileo_Lobster_Dodge_Active_C", "GetSoundFromBank");

	Params::GCNL_Galileo_Lobster_Dodge_Active_C_GetSoundFromBank Parms{};

	Parms.Target_Actor = Target_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Sound_Exists != nullptr)
		*Sound_Exists = Parms.Sound_Exists;

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}

}

