#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePass_Door_LeftPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BattlePass_Door_LeftPanel.BattlePass_Door_LeftPanel_C.ExecuteUbergraph_BattlePass_Door_LeftPanel
// 0x0020 (0x0020 - 0x0000)
struct BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Level;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel) == 0x000008, "Wrong alignment on BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel");
static_assert(sizeof(BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel) == 0x000020, "Wrong size on BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel, EntryPoint) == 0x000000, "Member 'BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel, K2Node_CustomEvent_Level) == 0x000004, "Member 'BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'BattlePass_Door_LeftPanel_C_ExecuteUbergraph_BattlePass_Door_LeftPanel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BattlePass_Door_LeftPanel.BattlePass_Door_LeftPanel_C.InitLevel
// 0x0004 (0x0004 - 0x0000)
struct BattlePass_Door_LeftPanel_C_InitLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePass_Door_LeftPanel_C_InitLevel) == 0x000004, "Wrong alignment on BattlePass_Door_LeftPanel_C_InitLevel");
static_assert(sizeof(BattlePass_Door_LeftPanel_C_InitLevel) == 0x000004, "Wrong size on BattlePass_Door_LeftPanel_C_InitLevel");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_InitLevel, Level) == 0x000000, "Member 'BattlePass_Door_LeftPanel_C_InitLevel::Level' has a wrong offset!");

// Function BattlePass_Door_LeftPanel.BattlePass_Door_LeftPanel_C.SetStyleUnpurchased
// 0x0010 (0x0010 - 0x0000)
struct BattlePass_Door_LeftPanel_C_SetStyleUnpurchased final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePass_Door_LeftPanel_C_SetStyleUnpurchased) == 0x000008, "Wrong alignment on BattlePass_Door_LeftPanel_C_SetStyleUnpurchased");
static_assert(sizeof(BattlePass_Door_LeftPanel_C_SetStyleUnpurchased) == 0x000010, "Wrong size on BattlePass_Door_LeftPanel_C_SetStyleUnpurchased");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetStyleUnpurchased, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000000, "Member 'BattlePass_Door_LeftPanel_C_SetStyleUnpurchased::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetStyleUnpurchased, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000008, "Member 'BattlePass_Door_LeftPanel_C_SetStyleUnpurchased::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");

// Function BattlePass_Door_LeftPanel.BattlePass_Door_LeftPanel_C.SetDoorPanelStyle
// 0x01D0 (0x01D0 - 0x0000)
struct BattlePass_Door_LeftPanel_C_SetDoorPanelStyle final
{
public:
	bool                                          Purchased;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0070(0x0020)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_2;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00B0(0x0050)(HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_3;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings_1;           // 0x0120(0x0020)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_4;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0168(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle) == 0x000008, "Wrong alignment on BattlePass_Door_LeftPanel_C_SetDoorPanelStyle");
static_assert(sizeof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle) == 0x0001D0, "Wrong size on BattlePass_Door_LeftPanel_C_SetDoorPanelStyle");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Purchased) == 0x000000, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Purchased' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_struct_Variable) == 0x000004, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable) == 0x000014, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_struct_Variable_1) == 0x000018, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_struct_Variable_2) == 0x000028, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable_1) == 0x000038, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default) == 0x00003C, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable) == 0x000050, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_1) == 0x000058, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable_2) == 0x000060, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default_1) == 0x000068, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_MakeStruct_FontOutlineSettings) == 0x000070, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_2) == 0x000090, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_3) == 0x000098, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable_3) == 0x0000A0, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default_2) == 0x0000A8, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_MakeStruct_SlateFontInfo) == 0x0000B0, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_4) == 0x000100, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_5) == 0x000108, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable_4) == 0x000110, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default_3) == 0x000118, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_MakeStruct_FontOutlineSettings_1) == 0x000120, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_MakeStruct_FontOutlineSettings_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_6) == 0x000140, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_object_Variable_7) == 0x000148, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_struct_Variable_3) == 0x000150, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default_4) == 0x000160, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_MakeStruct_SlateFontInfo_1) == 0x000168, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, Temp_bool_Variable_5) == 0x0001B8, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BattlePass_Door_LeftPanel_C_SetDoorPanelStyle, K2Node_Select_Default_5) == 0x0001BC, "Member 'BattlePass_Door_LeftPanel_C_SetDoorPanelStyle::K2Node_Select_Default_5' has a wrong offset!");

}

