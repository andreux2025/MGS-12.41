#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Uncle_Block_Break

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Uncle_Block_Break.GA_Uncle_Block_Break_C.ExecuteUbergraph_GA_Uncle_Block_Break
// 0x01F0 (0x01F0 - 0x0000)
struct GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0020(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0060(0x00B8)(ContainsInstancedReference)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0128(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0150(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0158(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x01A0(0x0028)()
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break) == 0x000008, "Wrong alignment on GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break");
static_assert(sizeof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break) == 0x0001F0, "Wrong size on GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, EntryPoint) == 0x000000, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_TargetData_2) == 0x000020, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_ApplicationTag_2) == 0x000048, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000060, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CreateDelegate_OutputDelegate_1) == 0x000118, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_TargetData_1) == 0x000128, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_ApplicationTag_1) == 0x000150, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_TargetData) == 0x000158, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CustomEvent_ApplicationTag) == 0x000180, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_CreateDelegate_OutputDelegate_2) == 0x000188, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, Temp_struct_Variable) == 0x000198, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, Temp_struct_Variable_1) == 0x0001A0, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0001C8, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001D8, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0001E0, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'GA_Uncle_Block_Break_C_ExecuteUbergraph_GA_Uncle_Block_Break::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Uncle_Block_Break.GA_Uncle_Block_Break_C.Triggered_E6CCD31D482409AA1A211EACE84E9E37
// 0x0030 (0x0030 - 0x0000)
struct GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37) == 0x000008, "Wrong alignment on GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(sizeof(GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37) == 0x000030, "Wrong size on GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(offsetof(GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37, TargetData) == 0x000000, "Member 'GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37, ApplicationTag) == 0x000028, "Member 'GA_Uncle_Block_Break_C_Triggered_E6CCD31D482409AA1A211EACE84E9E37::ApplicationTag' has a wrong offset!");

// Function GA_Uncle_Block_Break.GA_Uncle_Block_Break_C.Cancelled_E6CCD31D482409AA1A211EACE84E9E37
// 0x0030 (0x0030 - 0x0000)
struct GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37) == 0x000008, "Wrong alignment on GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(sizeof(GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37) == 0x000030, "Wrong size on GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(offsetof(GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37, TargetData) == 0x000000, "Member 'GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37, ApplicationTag) == 0x000028, "Member 'GA_Uncle_Block_Break_C_Cancelled_E6CCD31D482409AA1A211EACE84E9E37::ApplicationTag' has a wrong offset!");

// Function GA_Uncle_Block_Break.GA_Uncle_Block_Break_C.Completed_E6CCD31D482409AA1A211EACE84E9E37
// 0x0030 (0x0030 - 0x0000)
struct GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37) == 0x000008, "Wrong alignment on GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(sizeof(GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37) == 0x000030, "Wrong size on GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37");
static_assert(offsetof(GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37, TargetData) == 0x000000, "Member 'GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37, ApplicationTag) == 0x000028, "Member 'GA_Uncle_Block_Break_C_Completed_E6CCD31D482409AA1A211EACE84E9E37::ApplicationTag' has a wrong offset!");

}

