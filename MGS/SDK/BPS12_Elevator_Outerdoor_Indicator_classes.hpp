#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS12_Elevator_Outerdoor_Indicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPS12_Elevator_Outerdoor_Indicator.BPS12_Elevator_Outerdoor_Indicator_C
// 0x0098 (0x02B0 - 0x0218)
class ABPS12_Elevator_Outerdoor_Indicator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0218(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ElevatorMinusFloorEntryMinus4;                     // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElevatorMinusFloorEntryMinus3;                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElevatorMinusFloorEntryMinus2;                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElevatorMinusFloorEntryMinus1;                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElevatorMinusFloorEntryMinus0;                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   StateMinusColorArray;                              // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         SlotMinus0MinusState;                              // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotMinus1MinusState;                              // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotMinus2MinusState;                              // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotMinus3MinusState;                              // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotMinus4MinusState;                              // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MIDMinusSlot0;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDMinusSlot1;                                     // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDMinusSlot2;                                     // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDMinusSlot3;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDMinusSlot4;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaSpatialNavigationHenchmenData*   HenchmenData;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  RoomOwner;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPS12_Elevator_Outerdoor_Indicator(int32 EntryPoint);
	void CameraChanged(const struct FGameplayTag& CameraTag);
	void RoomOwnerChanged(class AFortPlayerController* OwningPlayer);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetEntryMinus0();
	void SetEntryMinus1();
	void SetEntryMinus2();
	void SetEntryMinus3();
	void SetEntryMinus4();
	void Set_Henchmen_State(const struct FHenchmenData& HenchmenData_0, class AFortPlayerController* Owner_0, int32* State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS12_Elevator_Outerdoor_Indicator_C">();
	}
	static class ABPS12_Elevator_Outerdoor_Indicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPS12_Elevator_Outerdoor_Indicator_C>();
	}
};
static_assert(alignof(ABPS12_Elevator_Outerdoor_Indicator_C) == 0x000008, "Wrong alignment on ABPS12_Elevator_Outerdoor_Indicator_C");
static_assert(sizeof(ABPS12_Elevator_Outerdoor_Indicator_C) == 0x0002B0, "Wrong size on ABPS12_Elevator_Outerdoor_Indicator_C");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, UberGraphFrame) == 0x000218, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, ElevatorMinusFloorEntryMinus4) == 0x000220, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::ElevatorMinusFloorEntryMinus4' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, ElevatorMinusFloorEntryMinus3) == 0x000228, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::ElevatorMinusFloorEntryMinus3' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, ElevatorMinusFloorEntryMinus2) == 0x000230, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::ElevatorMinusFloorEntryMinus2' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, ElevatorMinusFloorEntryMinus1) == 0x000238, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::ElevatorMinusFloorEntryMinus1' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, ElevatorMinusFloorEntryMinus0) == 0x000240, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::ElevatorMinusFloorEntryMinus0' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, DefaultSceneRoot) == 0x000248, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, StateMinusColorArray) == 0x000250, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::StateMinusColorArray' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, SlotMinus0MinusState) == 0x000260, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::SlotMinus0MinusState' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, SlotMinus1MinusState) == 0x000264, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::SlotMinus1MinusState' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, SlotMinus2MinusState) == 0x000268, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::SlotMinus2MinusState' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, SlotMinus3MinusState) == 0x00026C, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::SlotMinus3MinusState' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, SlotMinus4MinusState) == 0x000270, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::SlotMinus4MinusState' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, MIDMinusSlot0) == 0x000278, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::MIDMinusSlot0' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, MIDMinusSlot1) == 0x000280, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::MIDMinusSlot1' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, MIDMinusSlot2) == 0x000288, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::MIDMinusSlot2' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, MIDMinusSlot3) == 0x000290, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::MIDMinusSlot3' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, MIDMinusSlot4) == 0x000298, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::MIDMinusSlot4' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, HenchmenData) == 0x0002A0, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::HenchmenData' has a wrong offset!");
static_assert(offsetof(ABPS12_Elevator_Outerdoor_Indicator_C, RoomOwner) == 0x0002A8, "Member 'ABPS12_Elevator_Outerdoor_Indicator_C::RoomOwner' has a wrong offset!");

}

